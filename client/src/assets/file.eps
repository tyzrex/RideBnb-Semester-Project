%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: white-vector-car.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Robertas
%%CreationDate: 1/26/2016
%%BoundingBox: 0 0 707 473
%%HiResBoundingBox: 0 0 706.7862 472.8965
%%CropBox: 0 0 706.7862 472.8965
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Web</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2016-01-26T16:25:02+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2016-01-26T16:25:02+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2016-01-26T16:25:02+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>172</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgArAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FWiwGKtc8VdzxV3PFXc8VQx1XTgSDdQgjYgyL/XFVGbzDocBAm1G1iJ3AeaNa/e2Kqf+KfLf/V2s&#xA;/wDpIi/5qxV3+KfLf/V2s/8ApIi/5qxV3+KfLf8A1drP/pIi/wCasVd/iny3/wBXaz/6SIv+asVX&#xA;R+ZfL8jhI9TtHduirPGSfoDYqiF1XTmYKt1CWJoAHUkk/TiqJ54q7nirYcHFW8VdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVY95987aT5M8s3eu6kapAOMEAIDzTN9iJK92P3Cp7Yq+Vr38wPzW1yZ&#xA;9Sn8zXWlm5cyR6faVjiiRvsqOLKdgO9T4mtcKCUGdS86ypwuvN+tzAmrqL6cKd67KWamKLUJodRn&#xA;YNNruryMBQF71mNPpXFbQUuhCRy7ajfszbszT8iT8+OK2pJ5T0cL8aPK1SS7ueRr48eIxW1VPLOg&#xA;qKG0DnxMktfwYYra7/DWgf8ALEv/ACMm/wCa8Vtr/DWg/wDLGP8AkZL/AM14rbv8NaD/AMsY/wCR&#xA;kv8AzXitu/w1oP8Ayxj/AJGS/wDNeK27/DWg/wDLGP8AkZL/AM14rbf+GtA/5Yl/5GTf814rbT+W&#xA;dBYUFoFPiJJa/i5xW1I+VtNVg9u01s4r8cUhBIPu3LFbRdvps9uAINW1OKh5D07opv4ii4raMHmP&#xA;z3ohTUdL8y6rKbKRbk2dzeSywyCMgssiFlVwQNwRuNsUgvrjyN5w07zd5ZsddsTSO7jDPESC0cg2&#xA;kjandGBH44Ep/irsVdirsVdirsVdirsVdirsVdirsVdiriQASdgNzir5N/Ofzi3nPz++mQvy0Dy0&#xA;xj4A1Wa8OzsR3CleI6/ZP82FBLG8WLsVR2j6cl7cTetJ6VraW1xe3co3Kw20TSvT/KbjxX3IxUME&#xA;g8+6jFQmytJGH7TrMfvAlA/DFlSZ2f5s6tbyITpGkyxqRyR7QNyUGpFWZjv44rT7Q0jy75IvNOtd&#xA;QsdF08W17DHPC62sI5RyKHQ7L4NgTSZJoWiRhRHp9sgX7PGGMUp4UGKoj6jZf8s8f/AL/TFXfUbL&#xA;/lnj/wCAX+mKrZNN06ReMlrC6/ytGpH4jFUNJ5b8uykGXS7NyOhaCI/rXFXzX+cf5oaf5Y883nl3&#xA;RfKugT2tgkSzS3Fm3qGaSMSOA0EkAoocDpUGuFFPO7j83pJ68/KehLX/AH2moR/8QvFxWmV6RZWv&#xA;mH8vJvNtrGlpeafe/UtT0+IuYgjhTDNH6ryyCpfiQzGp6UxQQk+KHAkGo2IxVl35EecW8qedJPLN&#xA;y/DRPMD+pp1a8Yr0ALwG3+7B8P8AwHviyBfU6OHUMOhwJbxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ks&#xA;B/Ozz4PJ3ka9voXC6jcD6tp47+vKCFb/AGChn+jFXy3pFi1lYRwuSZmrJcMTUmR92qamtOlfbCwK&#xA;MxV2Ksh1m2/QH5MarrUo43nmW4i0mwJ+0LdGM1ww9pPRKH5e+KQ8LxZOxV9tf843+ZP03+VWnRu3&#xA;K40l5NOm+URDRfdDIg+jAr0/FXYq7FXYqtlljiieWRgkcalnY9AoFSTir87/ADdrj695p1bWnJ/3&#xA;I3c1woPZZHLIv+xWgwqlGKvbf+cXb+zute13yhqPxWPmCwJ9M95bYkjj4N6cjtUeGKofzJoN5oGu&#xA;Xmk3Y/fWshTnSgdTujj2ZSDiwS3FUDq9lJdWlbclLyBhNaSKeLLIhqKNtSvz679sVD6o/Jvz9F5y&#xA;8m2moMw+vIPQ1CMfs3MQHPbsHBDj2OBmzzFXYq7FXYq7FXYq7FXYq7FWnkRBV2CjxJp+vFVOO6t5&#xA;G4xyKzeAOKqjMFUsTQAVJxV8qfnl5nbzJ+ZEOkxNy07y4nOUAnibuWhpUbVQcBT2bCgsSknhj/vJ&#xA;FT/WIH68WKHfVtOTrcIfkeX6q42qi2v6YOkhb5K38QMbVM/zh/MXTfNeieVtG0S2mt7TRbZhdRyK&#xA;FU3DKifDRm5BRGSCd/i3wMreX/Vp/wCQ4bW3fVp/5Dja29Q/Jj84bz8uotUtn0r9J22oNFIqGf6v&#xA;6ckQZWIPpy15hhX5YCts61r/AJy11mSwuV0zQIbK5dCsFxLcGf02O3Ph6UYanUA4rbzv/oY/85/+&#xA;ph/6c7H/AKoYUu/6GP8Azn/6mH/pzsf+qGKsr8nf85U+d7K2ng162h12UsGhuW4WjqCKFCIY+DDb&#xA;b4Qfc9gUEpp5n/5ymvNV8salpUPl36rc39rLai7S8L+mZkKF1j9BSaBtvixW3zx6M38jfccKu9Gb&#xA;+RvuOKsh/L7zFP5W866Pr/pyGOwuVe4VB8TQNVJlWtBUxswGK29W/Nj81PJ/mzV7O80qG4hMMJiu&#xA;Jp4wjP8AESoorPstTv74LQWFJrWmN0nA+YYfrGG0K6X1k/2J4z7chXFWV/kr5nbyz+Yx09346Z5l&#xA;H7upPFbyOpXx+3Ur/sh4Ysg+sI5FkjV16MKjAlbLc28RCySKpPQE74quSSOQVRgw8Qa4quxV2Kux&#xA;V2KuxVKdVv5kl9CJuAABcjrU74qlbOzGrEsfEmuKr7VitzER15r+vFUb5v1SfTtDvJ7aE3N1FBLN&#xA;FbL9qQxoWCD3cgDFXwS+rXNzdXN1c3B+uX8z3F2xJXlI7FiWJ2/ariWJWGWOtOak+zA/qwIXhHIB&#xA;Ckg9CBirfpSfyH7jirvSk/kb7jirTKy/aBHzxVrFXYqpzoXiZR1PTFQgfqlx/J+I/rkrZW76pcfy&#xA;fiP642toqytpl5EruabDf9WAoJRXpSfyN9xwId6Un8jfccVd6Un8jfccVd6cn8p+44q70pP5D9xx&#xA;VTLoCQWAI2IJxVr1Yq05qD7kDFVwu5LWWG6tpgt1bSxzWxRgWEiMCpHE1264QkPvjyvqkV9p8Ukb&#xA;K6TRpPEynkpVwDsR1G+LJC6gxa9mJ/mI+gbDFVBWZTVSQfEbYqmWl6hMZ1glYur1Ck7kECvXFU5x&#xA;V2KuxV2KvLvzW/LTzdq2pw+ZfI+rnS9eiiEF3bO5WC6jQkxlhR0LpyI+NSCKbimKvPh5q/5yO0Fh&#xA;FrHlD9LIlOUtrEZZG9w1m8if8JgVVi/5yE1GzZf0z5M1KwdSKleRIPaglihxVnmt6nN5itNGspkk&#xA;hTWQs17byACRbOOMSyxPxNPjdkif2Y5JCP1Ly95e1RQupaZaXoAAAuII5aAdKc1NKYqx+4/KD8s7&#xA;huUnl+2U7/3fOIb+0bKMVQLfkR+VJBA0ShPcXV3UffNiqh/yoD8r/wDq3S/9JM//ADXirT/84/fl&#xA;gykCwmQnowuZqj72IxVQ/wChd/y1/wB8XX/SQ39MVd/0Lv8Alr/vi6/6SG/pirv+hd/y1/3xdf8A&#xA;SQ39MVd/0Lv+Wv8Avi6/6SG/pirv+hd/y1/3xdf9JDf0xV3/AELv+Wv++Lr/AKSG/pirv+hd/wAt&#xA;f98XX/SQ39MVVIv+cfPyySvKzuJa9OdzIKf8CVxVU/5UB+V//Vul/wCkmf8A5rxV3/KgPyv/AOrd&#xA;L/0kz/8ANeKr4vyE/KxCS2kvKD2e6uQB/wADIuKqv/Kifyo/6sf/AE9Xn/VbFVSL8kfysiBC6Ehr&#xA;/PPcv/xKU4qiYPyg/LKE1Ty/bncH4zJJ0/12bFU00/yN5K064W4sdCsILhCGjmS3i5qR0Ktxqv0Y&#xA;qu0KaTRdZ1PTravoFRqNjEtPhFwXWeFK7UEqc/b1PDFWAXH/ADkNeXUzrpfk7U764qQVeqNyHWoj&#xA;jmO2+RSoHzn/AM5Da4fS0XyW2mBukt3E8bDwo900Ef8AwuKs2/K38svPdtrq+avzA1g32qQK66bp&#xA;sT8obdpVKSSsECRByhKgIKUPXwKvXMVdirsVdirsVdiqG1G5FtZySVo1KJ/rHYYq86lbl5ttSf8A&#xA;dVhcBP8AnpNBy/5NjChN+eKu54q7nirueKu54q7nirueKu54q7nirueKu54q7nirueKu54q7niru&#xA;eKu54q7nirueKu54qlFy3/O3acR3sL4H3pNaU+6pxV6Do90J7FN6vH8Dj5dPwwJRuKuxV2KuxV2K&#xA;uxV2KtMyopZiFVRViegAxVhXmXzPp6Msl5dxWdmG4QtPIsSsx93I3PhhQxWHXNIvfN1mLC/t7vnY&#xA;3SyCGWOSjRy25UfCTuQzfdirI+eKu54q7nirueKu54q7nirueKu54q7nirueKu54q7nirueKu54q&#xA;7nirueKu54q7nirueKu54qxrUdf0S283WgudRtrc29jdrMss0aUaWa2KA8mG9ImxVleha7bqUurW&#xA;ZLmzl2LxMrowBpVWUkGhxVmsUscsayRtyRxVWHhgSuxV2KuxV2KuxV2Ksb8yaozSfUoj8C0MxHc9&#xA;Qv0YQh41LPNq9/PqVC4dWaE70itE3Xr9kFRzf/KPywJYHrXk7WvMF/Dqk9wY7Wv+4+OMhTGo5nny&#xA;3+ImJq9+2FU7g1X8yPKemyX9pqP+JtJsArapp18pF7bI9D6nINK5j3A582C/tIuKsz8mfm35V8zl&#xA;LZJTYao9B9RuSFLse0T/AGZPYbN/k4oZrXFXVxV1cVdXFXVxV1cVdXFXVxV1cVdXFXVxV1cVdXFX&#xA;VxV1cVcWoKnpirzjzf8Anl5Y0VntdL/3M6gu1IGAt1O32pqMG69EDeBIxVjWsWP5ja/EE8w6y2mT&#xA;3ESTDy7YL6fpwzMqJ9bcuvHn6ingxkYD7SrilB+U/LOs+XmQGYSaReOFWJqVSV3kRWBHiYWDbeBx&#xA;Vnug3Emka76coMMd44gu4ztSb7MTkfzVpH71FdlGKvU/L2qNBOLWQ/uZTRf8lz0+/FDKsCXYq7FX&#xA;Yq7FXYq838wC4n0/UjCGa4lin9Ph9ouytx4+9cKEH+XWmQXWnak5UO7lIWUiv7sgkj5NgSk0emQx&#xA;Qz21ncRPDFMy2SybFoz6qO3KvHipdtz4V74UM00jydZWLzSPEs7ag/C75CqtDN+7MVO6hHI/HFLw&#xA;W98q+U9TtLyx0qMpEITDp4KIUa6oUjrMCeNZKVJ671OQHNtNcKL0HzL+Ynku1X9PxnW9DRljdlfl&#xA;dwlqkcGbeQUVvhfw2IGTaWXTfnd+VsErxS64qyISrD6vdHce4iocbVZ/yvT8qf8Aq+r/ANI91/1S&#xA;xtXf8r0/Kn/q+r/0j3X/AFSxtXf8r0/Kn/q+r/0j3X/VLG1d/wAr0/Kn/q+r/wBI91/1SxtXf8r0&#xA;/Kn/AKvq/wDSPdf9UsbV3/K9Pyp/6vq/9I91/wBUsbV3/K9Pyp/6vq/9I91/1SxtXf8AK9Pyp/6v&#xA;q/8ASPdf9UsbV3/K9Pyp/wCr6v8A0j3X/VLG1d/yvT8qf+r6v/SPdf8AVLG1d/yvT8qf+r6v/SPd&#xA;f9UsbV3/ACvT8qf+r6v/AEj3X/VLG1Wyfnn+WnpSG01Nr24VSY7WG3uBJI3ZFLxolSdhVhjasJ8x&#xA;t+Zvni2V2CaZocwLppsMlDJGGAb1pNuZ+PoaL/k1GKsg8p+WvJa+btM0+aD14zc276aZIkjQtG4l&#xA;25Hk9Qnh8QrkBzbpVT0zXfKUU4fXF4Je+iTO7EIkoNHHI7AEMOuTakn07RrS61TTba5lRo4y7rCo&#xA;Ipcgs/pvX+Xc/wC3ihv8wbJIvMdl6dBcTpA1On70S8Y2+9R92BLIQCCCNiNwcKGextzjV/5gD94w&#xA;JXYq7FXYq7FXYqwTjhQxi/Ot+VbTVrzRLZru3ubaRfqsI/exvQ8GjRR8Xpk/CB8vfFLBtD/M3y9J&#xA;pxtr6WIXEcbwt9Yf0ZSaSkDk3EqS0gXeoFK4oZFffnf5Ys/KCaHpurrHr5heGK6cGeO3LEhWM0dI&#xA;nKRt8FGIrSvShCVD8ofLekwflzqFqlxbX9097X1Ldw3xSBBC9f8AJ4E09jirPdG0Cze4Zr4UeKMX&#xA;EYl9MqoXkrOWXuKk7jav3FD4t8/aXJZ6wZf0Wyx3Bf0UkCoVjjYrEAPiNPS4de9cCWMb/wDVsH3j&#xA;+mBXb/8AVsH3j+mKu3/6tg+8f0xV2/8A1bB94/pirt/+rYPvH9MVdv8A9WwfeP6Yq7f/AKtg+8f0&#xA;xV2//VsH3j+mKu3/AOrYPvH9MVdv/wBWwfeP6Yq7f/q2D7x/TFXb/wDVsH3j+mKvTvyD0j6x550q&#xA;9n08x2aXSxTSChVSUJjL9CKS8CD2phV9Q6n5cghubq3sUK28URjeNfTVFaRjI4BNWoa026YVYF+d&#xA;On2NpqvlLVdM1S00i80xWulaVhzC8o2gATbkA0bimBUx1/8AOnyX5h8vRWkF6ou4ZVe6tGf6pGwV&#xA;T9mSYBXjDfZAPLpttUqsf1v81LF7+FNAP1q9+sGaCGyBleRklcoKKGY8k4E1P0YUPR4bTUNU1c65&#xA;q0YhlIAtrMHkI1AotT7dfnvscVTfjirNrT/eWGv++1/UMCVXFXYq7FXYq7FWDLNCxAB3PTChtnRZ&#xA;Ah2qK1xVKdd8keVNeBOr6Xb3UhFPXZOM1PASpxkH0NirCtR/5x28hXLl7Zryxr0SGYOg/wCRySN/&#xA;w2NKlkH/ADjsbC5FxpHma4s3FCCYFc1B2rxkjB+7FU5m/LDzzcFfrHnq4eJUKGBLUwq4qXCuUnqV&#xA;5mpHhsKbUVYRqv8AzjH5h1W+kvb3zeZJ5Op+rkADsAPU2GClQn/Qpuqf9TWf+kdv+qmNK7/oU3VP&#xA;+prP/SO3/VTGld/0Kbqn/U1n/pHb/qpjSu/6FN1T/qaz/wBI7f8AVTGlUpv+cTtcFPR80qx7h4XX&#xA;9TtjSqf/AEKh5l/6maL/AJFyf1xpXf8AQqHmX/qZov8AkXJ/XGlXw/8AOJ+vlv33mhFXtwhdjX6W&#xA;XGlVv+hTdU/6ms/9I7f9VMaV3/Qpuqf9TWf+kdv+qmNK7/oU3VP+prP/AEjt/wBVMaV3/Qpuqf8A&#xA;U1n/AKR2/wCqmNKmOh/842eZdFujcWXm4rzHGVPQYKw96SD6MaVmH/Kr/Pgglg/x9cvFLSpltPUe&#xA;gFAC5nqdsKpMP+cbrK4uGn1TzBdXcr/adYlRjQU6u0uKp1pv/OPn5eWbBp4rrUKdrmcgf8kBDirO&#xA;NH8taDosRi0nT4LFGAD+jGqM1P5mA5N9JxVHvxReTbDFWgyemJDsDirMrT/eWH/UX9QwJVcVdirs&#xA;VdirsVedtsxHvkkNMzMasan3xVUjuJU2BqPA74FV1vh+0n0g4qvF7AeoI+jFV4urb+an0HFVWMpI&#xA;vJDVfHFV3DFXcMVdwxV3DFXcMVdwxV3DFXcMVdwxV3DFXcMVdwxV3DFVKSaCNuLtRvChxVYbu38S&#xA;foOKrGvouyk/hiqk985+yoX8cVUGd3NWNThVosxAWuw6DFXoFqCtrCp6hFB+4ZFKrirsVdirsVdi&#xA;rz25HG4lU9Q7D7jhQk/mPzLpHl3TTqWrSmG0DrGXCs55OaD4VBOKpTafmp+Xt2AYtdtlB/38WhP3&#xA;ShMbVNIPN3lS4p6Gs2MtdhwuYWqR8mxVGx6ppkq8o7uF16VWRCK/QcVRIYEAjcHocVVY7+W3jKoo&#xA;YE1+Ku33YlVratdnpxX5D+tcCVM6jen/AHZ9wA/hiq03t2f92t99MVWm5uT1lc/7I4q168/+/G/4&#xA;I4q16sv87fecVcJpR0dh9JxVv6xP/vxv+COKt/Wrn/fr/wDBHFVwvbsf7tb78VXDULwf7tP0gH+G&#xA;Krhql4OrA/NR/DFVRdYuh1VD9B/riqnNPyLSyEL3YnYD78KEJLq2lxU9W8gjr05SIK/ecVQM3nLy&#xA;jB/fa3YRbkfHdQruO27YqlV5+bH5d2gJl1yBqdoQ8x/5JK+NqyDRNZsNa0u31SwcyWd0paFyCpIB&#xA;K7g7jcYqja4q9FRQqhR0UAD6MCW8VdirsVdirsVecCf1x6/IP6vx8xSh5b1FNsKHnP5+WU1z+Xss&#xA;kYqtrcwzS07ISY6/fIMSr5TswpDRsD6iHejAfgcCUV6UnYzfQtR94bFVp5r/ALuK/wCsG/ocVRSt&#xA;sGU+4IwIdfSXNzblJJHkp8SqXbqMVSsXd0AAs8oA2AW7VQPobClfFf6jG4khu7mORejR3alhXbqp&#xA;FMVV/wBN+Yj01TUfouHb8Q+Ku/TPmTtqmqfQ8p/ESYq79M+Zf+rpqn/BS/8AVTFXfpnzL/1dNU/4&#xA;KX/qpirv0z5l/wCrpqn/AAUv/VTFXfpnzL/1dNU/4KX/AKqYq79M+Zf+rpqn/BS/9VMVd+mvMg66&#xA;pqf0yyL+uQ4qh3utRZiz3V2zsSWZpqEk9zVjiqx7i5ZSjzzMp6hrtPxBrirUEIkkCb7/AGv36uaf&#xA;7EYqmpIVa7AAfR+GBCGAdv8Adpb/AFQx/gMKV3pSdzN9K0/W2KoW7VapEoPNiOrA7fIYq+w/yksp&#xA;7P8ALnRIZgQ7QvMK9eM8ryp/wrjCEMwX7Q+eKvRsCXYq7FXYq7FXYq8k8tXAn0O1cEkBWj3/AOK3&#xA;Kf8AGuFCMv7G01CynsbyMTWtyjRTxN0ZHFCNsVfN3nv/AJx78x2N3LdaAp1KxJLIqEC4RewdDx50&#xA;6VTr4DBSvL9R0PXtLnMF/aS28o/3XMjRv/wLhTilC/Wp4/tB0+kjFUTaXiyHgzVfqK9TgVF4oQN5&#xA;bEEyJuO6CJJD/wANQ4pQpjfesb0/yrVQP+FOFVpRf2lUe7RMv/EcVWkQUqRCPdlmX/iOKrf9G/5d&#xA;/wDp4xV3+jf8u/8A08Yq7/Rv+Xf/AKeMVd/o3/Lv/wBPGKu/0b/l3/6eMVXcYv5Y/oSU/r3xVcI+&#xA;wT5AQE/rNcVXelJX+7cV8bWMfrOKpjbW/opuQWPcKqbeFFwIU7u8WM8FYhxuSvUe2IShvrNxJ9kO&#xA;/wB5wqjtK8t+ZdYl9LTbGa5fusEbSEfPgGp9OKvWfy8/5x41WW9iv/NIFrZxkObPkGmlpvxPEkIp&#xA;778u1B1xpD6KjRI0WONQkaAKiKAAANgAB2wqo6hKYrC5lAqY4nanTopOKvT8CXYq7FXYq7FXYq+L&#xA;vIn5xnyx5o1TQtcZn8vvf3JgmALNau87FjQbtGzElgNwdx4FV9CW11bXVvHc2sqT20yh4Zo2Do6s&#xA;KhlZagg4UKtcVUbuzs7yEw3cEdxC3WKVFdT/ALFgRirEtU/J78u9RJZ9JS3kP7Vq7wgf7BCI/wDh&#xA;caVil/8A841eT5qm0vru3Y9PU9KUA/QsZ/HBSpVP/wA40yqD9V19WG9FltiPl8Qlb9WNKgT/AM42&#xA;+ZmkCQ6tYfFsrS+sgqf5qI9B740rd1/ziH5/Yq63OlSlt+cNxOtPnygTrilBS/8AOJX5mRN+7NrJ&#xA;UbtHdkAe3xIpxVZ/0Kj+ai1KiKvgLxfu6Yqh/wDoV383f+WRv+k63/5qxVx/5xd/N7tan6b23/5r&#xA;xVr/AKFd/OD/AJZT/wBJsH/NeKt/9Cu/m9/yyH/pOt/+asVRP/Qqf5rfzR/9Ji/804qqQf8AOJX5&#xA;nPy5y20VKU53ZNflwjb8cVRMP/OHn5gyAmS+02PenGS5uDX/AICBsVRzf84m+YtOgMk+sadFsOKx&#xA;CZ2Y16fEqbY0hdB/zjQW/wB6vMFB/LFbH/iRlH6saVOLD/nG3yVAwa5u7u4YHopijU/P4Gb/AIbD&#xA;Ssr0r8pvy90whodGhmcft3Ja43/1ZSy/cMaVlcEEFvEsMEaQxJsscahVA9gNsVVK4qtkkjjjaSRg&#xA;kaAs7sQFCgVJJPQDFXhXnz86o9X8xad5Z8syE6c19bpqGorUfWP3y1ih7+n/ADN+30Hw/aUvr/Ar&#xA;sVdirsVca4qsYtir85PzBga38++ZIGUI0Wq3qFRSgK3Digpiqr5a/Mbzr5ZtntdF1SS1tnPIwMsc&#xA;0YbuVSZZFUnvxpXFWY2//OSX5gxLSSHT7g/zSQyA/wDJOVBir1z8i/zC13z+NcOr29tD+jPqvofU&#xA;1kSvr+ty5+o8tf7oUpTDavT5LDj0Vj9I/pja0hZYpl6Rn/P6MbWlBpZFG8L19qY2tKL6gqDeCavs&#xA;q/8ANWNrSpa+cJ7E/uorkqOsZRWU/QXxWkzj/NTTlX/SNLvQw7xpGwP0NIuBVr/m/oSf9KrUz8oo&#xA;P+q2KuP5w+XAATp+pV8PQj2/5K4qpn85/LQ/6V2p/wDIiP8A6q4rTh+dHlo/9K7U/wDkRH/1VxWl&#xA;6/nH5bb/AKV+pD5wR/8AVTFaaT84tCf/AKVOqD5xQf8AVfFVX/lbGktT09L1A+PNIl/VI2KqVz+Z&#xA;JnXja2NxBXqzKjN9Hx0GKpa2stcOXkiuHc/tOAT/AMSw2tL0uXcbQOD2rT+uNrSvEszdYiPp/sxt&#xA;aRUdmW6ow+kf0xtaeZfnl+YmteQY9F/RNtbzPqZufVN2HcKLf0qcRG8XX1u5xtXktx/zkn+YEqFU&#xA;t9OgJ/ajhlJ/4eVx+GC1Yl5j/NHz35jsmsdW1V5bJ25NbRpFCjUNQH9JULgHcBifHriqF/LyJ5vz&#xA;A8swpTnJq1ii16Va5QDFX6Mqz4qvBOKt4q7FXVGKrTLGOrAYq/P388dP+o/m35ph48RJfPcjalRc&#xA;gT1+n1MVYNirsVfTX/OFwhP+MRKQP+ObSv8A0dYq+mvq1o3QA4q0dNtT+yMVWHSLM/sDFVNtCsT+&#xA;wPuxVY3l3Tz+wPuxVTPljTT/ALrH3YqtPlTTD/usfdiq0+UNKP8AutfuxVb/AIP0r/fa/dirv8Ha&#xA;V/vtfuxVseUNKH+61+7FVw8paWP91r92Krx5X00f7rH3YqvHlvTx+wPuxVeNBsB+wPuxVUGjWQ/Y&#xA;GKrxploP2Riq76naL2AxV8y/85orCv8Ag4RU/wCllWn/AEa4q+ZcVdirOvyMsPr35ueV4qVEd6ty&#xA;dq0Fspnr0PT08VfoAssR6MMVXgg9MVdirT8qbYql14bqh4VxVjWqNrFD6dcVeG/mv+UuqebNQTVY&#xA;R6GpIoilkK1WVF+zyp+0vY+G2KXmk35DedENFEb+/wAQ/hihfb/kF5ylIDGNPoY/wxV7V+VPkPUv&#xA;JumyWtuGee6cSXdwRxLlRRVA3oq1NPmcUvWtNbVaD1K4oZDam4oOWKowVpvirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirjiqFufXoeOKpDqJ1Oh4VxV5L+bH5f3/nTTYra45R3No7SWdyBy4FgA6ldqq1B&#xA;X5DFLxO5/wCcf/OMRIV45PkGGKEPH+Q/nVmoyxr7/Ef4Yq9J/Kv8qdX8qag+qSD1tRdDEkgWixox&#xA;HLjXu1Ovhtil7hpba3QepXFDKLI3lBzriqZx8qfFiq7FXHj3xVRf6r+1xxVDyfor9rh+GKqB/QXf&#xA;h+GKtr+g+3D8MVREf6N/Y4YqiE9D9njiqoKdsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiq&#xA;xvR/apiqHk/R37fDFUO/6E/a4fhiq0foLtw/DFVaP9E/s8PwxVER/VP2OOKqw49qYq3ir//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:B2DA437633C4E511823EEE3F056ABBBB</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:B2DA437633C4E511823EEE3F056ABBBB</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:A76B20BABA3CE311B10BEE41601A75CD</stRef:instanceID>
            <stRef:documentID>uuid:A66B20BABA3CE311B10BEE41601A75CD</stRef:documentID>
            <stRef:originalDocumentID>uuid:A66B20BABA3CE311B10BEE41601A75CD</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B2DA437633C4E511823EEE3F056ABBBB</stEvt:instanceID>
                  <stEvt:when>2016-01-26T16:25:02+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:OriginalDocumentID>uuid:A66B20BABA3CE311B10BEE41601A75CD</xmpMM:OriginalDocumentID>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>800.000000</stDim:w>
            <stDim:h>800.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=236 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>236</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=139 G=146 B=152 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>139</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>152</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=100</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>255</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=90</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>229</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=80</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>204</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=70</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>178</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=60</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>153</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=50</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>127</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=40</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>101</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=30</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>76</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=20</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>50</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=10</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>25</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=5</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>12</xmpG:gray>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -472.896 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 472.896 li
706.786 472.896 li
706.786 0 li
cp
clp
213.285 451.687 mo
213.285 463.398 165.539 472.896 106.643 472.896 cv
47.7456 472.896 0 463.398 0 451.687 cv
0 439.973 47.7456 430.475 106.643 430.475 cv
165.539 430.475 213.285 439.973 213.285 451.687 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
level3{
gsave
clp
[106.654 0 0 21.2088 106.643 451.686 ]ct
/0 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [.137255 .121569 .12549 ]
/N 2.01382 
>>
]
/Bounds []
/Encode [1 0 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[106.654 0 0 21.2088 106.643 451.686 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~+s\K`.4Zu&0JYFA2`Ni\4[25!6q'U:8k_rT:f:4l<`iL/>[CcG@Us%_BPD6uDJsK7F*2YMH$XgcIXcp#
K8#&8Ll.+LNK90`P*;/sQ^F21S=Q7DTV8-VV5C/hWN*##Xfek3Z*UgF[^W`U\[oDc]tV7s_8=+.`Poj;
aN;TJbKS5Vcd0tcdaQ[pe^i='f\+s3gY:N>h;7&Hi8NYSioB+\jlPXfkNM-ol0@R"lg4!*mI'E2n*oi:
naZ2@oCMSGo_%nMp@e4Sp\4IXq"X[\q>0saqYL*dqtp<hr;?KjrVc]nrVc]orr2orrr2orrr2orrr2or
~>
<~*ZuXP,pt,l/1rV21Gq'M3]fJh5XIk-7n?6G9i"S`;cQk#=^,-;?X[DSAS5[kCM[m,EH6,CG'J:YI!pHo
JV&Q/L51VCMiEaXOHPflQ'Rf*R[]h<T:hmPUSO``W2ZetXKAY/Yd(L?['d?O\@K2_]Y2%o^qmn*_o0O6
a2lBFb0/#RcHjh`dF-LmeCE.$f@\d0g=tB;h;-rFhr*JPioB([jQ5OdkND'ml0@R"lg4!*mI'E2n*fc8
naZ2@o(2JFo^qhLp%J+Qp\4FWq"X[\q>'m`qYL*dqtp<hr;?KjrVc]nrVc]orr2orrr2orrr2orrr2or
~>
<~+!DjT-7C>p/MAh61c@9Q4$5\l5sn%084cHJ:/=_c<*!('>$P???t*VWAnPgmCi+*0EH?5EGBeF\I"$Qq
JqJ`1LPUeFN/`jZOckomQC!u,R[fq?T:hmPUnsrdW2ZetXKAY/Yd(OA[C3QS\[f;`]Y2%o^qmn*`5Ta9
a2lBFbKS2TcHjkadF-LneCE.%f@\d0g=tE<h;7#Gi8ESQioB([jlPXekND'nl0@R"lg4!*mI'E2n*oi9
naZ2@o(2JFo^qhLp%J+Rp\4FWq"X[\q>'m`qYL*dqtp<hr;?KjrVc]nrVc]orr2orrr2orrr2orrr2or
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
705.372 409.265 mo
705.372 423.319 548.681 434.718 355.397 434.718 cv
162.109 434.718 5.41992 423.319 5.41992 409.265 cv
5.41992 395.21 162.109 383.812 355.397 383.812 cv
548.681 383.812 705.372 395.21 705.372 409.265 cv
cp
level3{
gsave
clp
[349.998 0 0 25.4514 355.396 409.265 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[349.998 0 0 25.4514 355.396 409.265 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
706.786 451.687 mo
706.786 463.398 659.04 472.896 600.145 472.896 cv
541.247 472.896 493.501 463.398 493.501 451.687 cv
493.501 439.973 541.247 430.475 600.145 430.475 cv
659.04 430.475 706.786 439.973 706.786 451.687 cv
cp
level3{
gsave
clp
[106.654 0 0 21.2088 600.144 451.686 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[106.654 0 0 21.2088 600.144 451.686 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
482.755 109.065 mo
236.038 109.065 li
228.266 109.065 221.967 102.766 221.967 94.9927 cv
236.038 64.0361 li
236.038 56.2637 242.338 49.9653 250.105 49.9653 cv
250.105 49.9653 304.989 44.334 360.332 44.334 cv
415.683 44.334 465.871 49.9653 465.871 49.9653 cv
473.64 49.9653 479.94 56.2637 479.94 64.0361 cv
496.826 94.9927 li
496.826 102.766 490.528 109.065 482.755 109.065 cv
cp
563.493 110.803 mo
552.558 84.25 528.605 43.7124 521.759 32.3174 cv
481.659 29.3442 434.07 27.8379 380.232 27.8379 cv
286.178 27.8379 201.386 32.4902 185.959 33.3887 cv
174.289 44.8286 159.44 72.6172 141.781 116.08 cv
141.125 117.704 140.614 118.959 140.273 119.772 cv
139.728 121.059 139.12 122.237 138.582 123.279 cv
138.375 123.686 138.117 124.182 137.884 124.653 cv
140.486 125.843 147.728 127.93 167.719 129.733 cv
184.232 131.216 236.958 132.039 316.162 132.039 cv
417.858 132.039 533.726 130.643 545.748 129.276 cv
549.565 128.844 553.2 128.682 556.408 128.54 cv
560.409 128.362 566.446 128.091 567.567 127.139 cv
567.633 127.026 568.968 124.102 563.493 110.803 cv
cp
.352941 .376471 .376471 rgb
f
143.402 438.332 mo
143.402 446.105 137.102 453.813 129.331 453.813 cv
87.1177 453.813 li
79.3394 453.813 74.4482 447.481 71.6411 438.332 cv
71.6411 438.332 67.9868 417.697 67.9868 379.236 cv
67.9868 351.32 68.8218 338.903 68.8218 338.903 cv
68.8218 331.121 77.9385 324.824 85.7104 324.824 cv
129.331 324.824 li
137.102 324.824 143.402 331.121 143.402 338.903 cv
143.402 438.332 li
cp
.0666667 .0666667 .0666667 rgb
f
563.297 438.332 mo
563.297 446.105 569.6 453.813 577.374 453.813 cv
619.583 453.813 li
627.351 453.813 632.249 447.481 635.062 438.332 cv
635.062 438.332 638.713 417.697 638.713 379.236 cv
638.713 351.32 637.875 338.903 637.875 338.903 cv
637.875 331.121 628.763 324.824 620.991 324.824 cv
577.374 324.824 li
569.6 324.824 563.297 331.121 563.297 338.903 cv
563.297 438.332 li
cp
f
585.01 154.56 mo
585.01 154.56 637.777 152.449 649.034 144.71 cv
660.289 136.971 662.397 117.278 640.589 113.05 cv
618.776 108.829 594.854 93.3506 601.188 136.265 cv
601.188 136.265 585.01 141.9 574.454 136.265 cv
585.01 154.56 li
cp
.871087 .871087 .871087 rgb
f
580.944 147.521 mo
585.01 154.56 li
585.01 154.56 637.777 152.449 649.034 144.71 cv
653.286 141.789 656.227 137.158 657.072 132.3 cv
640.716 142.538 599.033 146.33 580.944 147.521 cv
cp
.129412 .137255 .12549 rgb
f
123.321 154.56 mo
123.321 154.56 70.5527 152.449 59.2915 144.71 cv
48.0381 136.971 45.9263 117.278 67.7378 113.05 cv
89.5498 108.829 113.469 93.3506 107.134 136.265 cv
107.134 136.265 123.321 141.9 133.872 136.265 cv
123.321 154.56 li
cp
.871087 .871087 .871087 rgb
f
127.382 147.521 mo
123.321 154.56 li
123.321 154.56 70.5527 152.449 59.2915 144.71 cv
55.0454 141.789 52.0996 137.158 51.2515 132.3 cv
67.6128 142.538 109.296 146.33 127.382 147.521 cv
cp
.129412 .137255 .12549 rgb
f
354.388 412.057 mo
354.311 412.057 li
354.242 412.057 li
338.966 411.863 120.02 408.953 99.3975 400.811 cv
99.3975 400.811 75.1787 383.224 71.6152 374.777 cv
71.6152 374.777 62.3574 253.914 68.6933 225.607 cv
68.9322 224.541 69.1939 223.6 69.483 222.807 cv
77.3159 200.999 102.957 185.518 108.655 163.002 cv
114.354 140.488 152.814 58.8765 164.926 41.9908 cv
177.035 25.1039 189.856 9.83148 215.498 5.60783 cv
239.381 1.67877 340.471 .19003 354.242 .00141549 cv
354.242 0 li
354.311 .00141549 li
354.388 0 li
354.388 .00141549 li
368.16 .19003 469.243 1.67877 493.129 5.60783 cv
518.768 9.83148 531.591 25.1039 543.705 41.9908 cv
555.812 58.8765 594.274 140.488 599.969 163.002 cv
605.666 185.518 631.311 200.999 639.148 222.807 cv
639.431 223.6 639.693 224.541 639.932 225.607 cv
646.269 253.914 637.009 374.777 637.009 374.777 cv
633.447 383.224 609.227 400.811 609.227 400.811 cv
588.61 408.953 369.659 411.863 354.388 412.057 cv
502.903 268.696 mo
511.622 276.064 li
514.651 276.049 li
584.372 274.392 609.081 258.655 614.464 240.815 cv
619.145 227.906 613.207 213.713 606.582 202.871 cv
603.833 198.372 598.846 196.521 592.509 196.521 cv
590.465 196.521 588.28 196.714 585.984 197.072 cv
587.334 187.849 587.904 179.805 587.904 172.808 cv
587.921 137.622 573.57 128.728 573.376 128.632 cv
572.643 129.835 li
572.642 129.835 572.821 129.938 573.185 130.226 cv
573.555 130.509 574.084 130.959 574.726 131.617 cv
576.013 132.919 577.74 135.034 579.484 138.233 cv
582.972 144.633 586.494 155.4 586.494 172.808 cv
586.494 179.843 585.921 187.964 584.529 197.318 cv
555.355 202.623 509.865 232.771 505.203 235.898 cv
504.746 237.306 li
504.743 237.308 504.741 237.31 504.738 237.312 cv
496.847 261.601 li
496.846 261.602 496.846 261.602 496.846 261.602 cv
496.343 263.152 li
502.9 268.696 li
502.9 268.696 li
88.7991 240.88 mo
94.223 258.692 118.957 274.394 188.589 276.049 cv
191.622 276.064 li
200.339 268.696 li
200.343 268.696 200.343 268.696 200.343 268.696 cv
206.898 263.152 li
198.508 237.312 li
198.501 237.307 198.495 237.303 198.488 237.298 cv
198.033 235.898 li
192.922 232.468 138.669 196.521 110.73 196.521 cv
104.393 196.521 99.4058 198.372 96.6572 202.871 cv
90.0205 213.732 84.0732 227.953 88.7991 240.88 cv
380.232 27.838 mo
286.178 27.838 201.386 32.4901 185.959 33.3886 cv
174.288 44.8286 159.441 72.6172 141.781 116.08 cv
141.125 117.704 140.614 118.96 140.273 119.772 cv
139.728 121.059 139.12 122.237 138.582 123.279 cv
138.374 123.686 138.117 124.182 137.884 124.653 cv
140.486 125.843 147.727 127.93 167.719 129.733 cv
184.232 131.216 236.957 132.039 316.162 132.039 cv
417.858 132.039 533.725 130.643 545.748 129.276 cv
549.565 128.844 553.2 128.682 556.408 128.54 cv
560.409 128.362 566.446 128.091 567.567 127.139 cv
567.633 127.026 568.968 124.102 563.493 110.803 cv
552.558 84.2499 528.605 43.7123 521.759 32.3175 cv
481.659 29.3442 434.07 27.838 380.232 27.838 cv
level3{
gsave
clp
[-1.81229e-005 -414.603 414.603 -1.81229e-005 354.313 412.475 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.796078 .803922 .811765 ]
/C1 [1 1 1 ]
/N 1.31754 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.796078 .803922 .811765 ]
/C1 [1 1 1 ]
/N 1.1749 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [1 1 1 ]
/N 1 
>>
]
/Bounds [.483517 .989011 ]
/Encode [1 0 0 1 0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.81229e-005 -414.603 414.603 -1.81229e-005 354.313 412.475 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8Muqr;?HhqYL$_q"OOVp@\+No^h\Fo'u8>nF,i6md9E.m-F!&lKRQski_-kk2k^cjQ#:[io8qUi8EMM
hVR,Fh;$f?gY:H9g"G'2f[na,f%/C%e^W*ue'landa?Iid*U.ccd0q_cHa\Zc-=JVbfn8RbKJ)PbKJ)P
bKS2Sc-=MXcHa_]cd0tbd*^7gdaHRme'umse^`4$f%8O*f\"j0g"P06gY:N=gtgfChVR/Ii8EPPiSrkW
j5]4]jlPXek3(pkkiq?rlK[^$m-O-,mI'E2n*oi:naZ2@oCMVHp%A%Pp@n=Vq"aa^qYU0fr;HTmrr2rt
~>
<~s8Muqr;?HhqYL$`q"XUXp@e1Po^qbHo()>@nF5o8mdBK0m-O'(lK[Wul0.?okN:pgjlGL`j5].YiSibR
i8<GKhVR)Egt^]>gY1B8g"G$1f[na,f%/F&e^W*ue'ldpdaHRkdF$=fd*U+bcd0n^cHa\Zc-=MXc-=MX
c-FV[cHjh_d*U.edF$@idaHUne'umte^`7%f%8O*f\"j0g"P06gY:K<gtgfBhVR,Hhr*GNiSieUioB([
jQ,Fak2tjikNM-ol07Kulg*p(m-X3.mdKW5nF5u<o()ACoCV\Jp%A%Pp\4IXq>'j_qYU0fr;HTnrr2rt
~>
<~s8Muqr;?HhqYL$`q"XUXp@e4Qp%7nJoCDJBnaQ&:n*]W2mHs9,lg*j$l07Hrki_-kk2k^djQ,@]j5T(W
iS`YPhr!>JhVI#Dgt^Z=gY1B8g"G'2f\"g-f@JO(e^`4"eC;sre'landa?IidEp7ed*U+bcd0q`cd0q`
cd:%cd*^7gdF-Ike'ldqeC<%!e^i=&f@SX,f\"m1g"P06gY:K<gt^`AhVR,Hhr!AMiSibTio9"YjQ,C`
jlY^fkND$lkiq?rlK[^$lg4!*mI'E1n*fc8nF?&>o()DDo^qhLp%J+Rp\=OYq>'m`qtp9gr;HTnrr2rt
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
190.541 322.485 mo
190.541 322.485 300.299 299.029 521.683 319.668 cv
515.117 365.633 li
195.229 366.571 li
190.541 322.485 li
cp
.763726 .763726 .763726 rgb
f
213.084 333.271 mo
204.175 304.188 li
103.329 302.779 100.047 275.11 100.047 275.11 cv
94.8867 291.524 li
90.1997 293.402 82.2266 281.677 82.2266 281.677 cv
66.7217 280.678 li
67.7378 324.085 71.6152 374.777 71.6152 374.777 cv
75.1787 383.224 99.3975 400.811 99.3975 400.811 cv
112.368 405.939 203.842 408.988 273.708 410.596 cv
240.762 395.183 li
213.084 333.271 li
cp
637.571 281.677 mo
637.571 281.677 629.598 293.402 624.906 291.524 cv
619.749 275.11 li
619.749 275.11 616.467 302.779 515.621 304.188 cv
506.71 333.271 li
479.035 395.183 li
446.688 410.309 li
514.66 408.645 596.977 405.656 609.227 400.811 cv
609.227 400.811 633.447 383.224 637.009 374.777 cv
637.009 374.777 640.847 324.651 641.892 281.396 cv
637.571 281.677 li
cp
level3{
gsave
clp
[-4.66652e-006 106.758 -106.758 -4.66652e-006 354.306 304.366 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.788235 .796078 .803922 ]
/C1 [.780392 .784314 .792157 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-4.66652e-006 106.758 -106.758 -4.66652e-006 354.306 304.366 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~aiMQEaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HD
aN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HD
aN)?Aa2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@
a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@
~>
<~bK@uMb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lL
b0%lLb0%lLb0%lLb0%lLb0%lLb0%iJaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZH
aiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZHaiVZGaN2HDaN2HDaN2HDaN2HDaN2HD
aN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HDaN2HD
~>
<~c-4DUbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;T
bfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn8RbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)P
bKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)Ob0%lLb0%lLb0%lLb0%lLb0%lL
b0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lL
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
567.567 127.139 mo
566.446 128.091 560.409 128.362 556.408 128.54 cv
553.2 128.682 549.565 128.844 545.748 129.276 cv
533.726 130.643 417.858 132.039 316.162 132.039 cv
236.958 132.039 184.232 131.216 167.719 129.733 cv
147.728 127.93 140.486 125.843 137.884 124.653 cv
138.117 124.182 138.375 123.686 138.582 123.279 cv
139.12 122.237 139.728 121.059 140.273 119.772 cv
140.614 118.959 141.125 117.704 141.781 116.08 cv
159.44 72.6172 174.289 44.8286 185.959 33.3887 cv
201.386 32.4902 286.178 27.8379 380.232 27.8379 cv
434.07 27.8379 481.659 29.3442 521.759 32.3174 cv
528.605 43.7124 552.558 84.25 563.493 110.803 cv
568.968 124.102 567.633 127.026 567.567 127.139 cv
cp
569.996 108.125 mo
556.867 76.23 525.904 25.5757 525.904 25.5757 cv
380.035 14.3179 183.036 26.5122 183.036 26.5122 cv
161.93 44.8062 137.538 108.125 133.787 117.041 cv
130.035 125.952 120.181 132.515 167.093 136.738 cv
213.992 140.959 525.904 138.615 546.545 136.265 cv
567.184 133.923 583.132 140.02 569.996 108.125 cv
cp
.12549 .12549 .133333 rgb
f
599.778 324.824 mo
566.582 334.309 366.888 334.008 352.315 333.974 cv
352.218 333.974 li
352.127 333.974 li
337.552 334.008 137.855 334.309 104.658 324.824 cv
104.658 324.824 93.4014 361.409 130.69 371.261 cv
167.859 381.076 186.886 390.89 352.127 390.96 cv
352.218 390.96 li
352.315 390.96 li
517.556 390.89 536.582 381.076 573.745 371.261 cv
611.041 361.409 599.778 324.824 599.778 324.824 cv
cp
.129412 .137255 .12549 rgb
f
120.958 172.808 mo
120.936 137.622 135.287 128.728 135.484 128.632 cv
136.214 129.835 li
136.214 129.835 136.037 129.938 135.672 130.226 cv
135.306 130.509 134.777 130.959 134.135 131.617 cv
132.845 132.919 131.115 135.034 129.371 138.233 cv
125.89 144.633 122.367 155.4 122.367 172.808 cv
122.364 180.494 123.052 189.476 124.742 199.946 cv
123.353 200.17 li
121.655 189.637 120.958 180.578 120.958 172.808 cv
cp
.12549 .12549 .133333 rgb
f
587.904 172.808 mo
587.921 137.622 573.57 128.728 573.376 128.632 cv
572.643 129.835 li
572.642 129.835 572.821 129.938 573.185 130.226 cv
573.555 130.509 574.084 130.959 574.726 131.617 cv
576.013 132.919 577.74 135.034 579.484 138.233 cv
582.972 144.633 586.494 155.4 586.494 172.808 cv
586.494 180.494 585.81 189.476 584.121 199.946 cv
585.508 200.17 li
587.201 189.637 587.904 180.578 587.904 172.808 cv
f
142.631 114.009 mo
142.344 114.698 142.068 115.382 141.781 116.08 cv
141.125 117.704 140.614 118.959 140.273 119.772 cv
139.728 121.059 139.12 122.237 138.582 123.279 cv
138.375 123.686 138.117 124.182 137.884 124.653 cv
140.486 125.843 147.728 127.93 167.719 129.733 cv
184.232 131.216 236.958 132.039 316.162 132.039 cv
417.858 132.039 533.726 130.643 545.748 129.276 cv
549.565 128.844 553.2 128.682 556.408 128.54 cv
560.409 128.362 566.446 128.091 567.567 127.139 cv
567.633 127.026 568.882 124.213 563.874 111.755 cv
524.025 104.139 446.981 98.9819 358.46 98.9819 cv
261.453 98.9819 178.219 105.174 142.631 114.009 cv
cp
.180392 .203922 .188235 rgb
f
300.768 106.248 mo
229.472 106.248 li
243.542 51.3721 li
285.287 51.3721 li
300.768 106.248 li
cp
.12549 .12549 .133333 rgb
f
485.101 107.657 mo
413.803 107.657 li
427.881 52.7808 li
469.623 52.7808 li
485.101 107.657 li
cp
f
386.599 121.692 mo
386.599 124.325 384.464 126.458 381.837 126.458 cv
331.328 126.458 li
328.696 126.458 326.565 124.325 326.565 121.692 cv
326.565 98.8203 li
326.565 96.188 328.696 94.0562 331.328 94.0562 cv
381.837 94.0562 li
384.464 94.0562 386.599 96.188 386.599 98.8203 cv
386.599 121.692 li
cp
f
505.203 235.898 mo
496.812 261.739 li
512.091 274.649 li
515.118 274.636 li
633.787 271.817 622.06 228.2 606.582 202.871 cv
591.714 178.538 511.477 231.69 505.203 235.898 cv
0 0 0 rgb
f
504.738 237.312 mo
496.343 263.152 li
511.622 276.064 li
514.651 276.049 li
633.319 273.229 621.593 229.61 606.111 204.28 cv
591.245 179.945 511.008 233.1 504.738 237.312 cv
.16 .16 .16 rgb
f
495.461 264.197 mo
494.755 263.606 li
495.043 262.729 li
503.209 237.579 li
200.715 237.579 li
208.886 262.729 li
209.167 263.606 li
208.463 264.197 li
194.415 276.071 li
353.301 276.953 li
353.301 276.985 li
355.679 276.971 li
358.165 276.985 li
358.165 276.953 li
509.515 276.077 li
495.461 264.197 li
cp
.129412 .137255 .12549 rgb
f
599.349 235.472 mo
599.349 249.772 587.756 261.365 573.46 261.365 cv
559.162 261.365 547.566 249.772 547.566 235.472 cv
547.566 221.18 559.162 209.583 573.46 209.583 cv
587.756 209.583 599.349 221.18 599.349 235.472 cv
1 1 1 rgb
f
578.933 261.365 mo
578.008 261.365 577.095 261.317 576.196 261.222 cv
571.63 260.743 567.418 259.076 563.873 256.537 cv
567.733 255.183 571.305 253.804 574.569 252.451 cv
574.496 258.958 li
576.297 258.978 li
576.377 251.692 li
577.505 251.212 578.594 250.735 579.642 250.266 cv
581.124 258.218 li
582.895 257.89 li
581.333 249.498 li
582.499 248.962 583.61 248.437 584.667 247.925 cv
584.782 250.782 584.905 253.268 584.999 253.87 cv
586.777 253.575 li
586.692 253.097 586.561 250.234 586.438 247.054 cv
589.173 245.69 591.48 244.448 593.336 243.401 cv
594.947 247.129 596.027 250.759 596.727 254.247 cv
597.242 253.758 597.738 253.248 598.212 252.719 cv
598.209 252.735 598.207 252.748 598.203 252.765 cv
593.464 258.044 586.586 261.365 578.933 261.365 cv
560.103 253.245 mo
555.926 248.821 553.291 242.923 553.058 236.415 cv
553.291 242.926 555.929 248.819 560.106 253.245 cv
560.103 253.245 li
564.702 252.15 mo
564.3 244.172 574.029 238.441 574.029 238.441 cv
569.014 236.147 561.932 227.382 557.359 221.176 cv
554.667 225.223 553.079 230.068 553.042 235.282 cv
553.136 221.999 563.244 211.087 576.196 209.726 cv
577.095 209.632 578.008 209.583 578.933 209.583 cv
583.855 209.583 588.457 210.957 592.375 213.343 cv
593.632 215.619 594.797 218.087 595.801 220.748 cv
592.448 228.702 587.943 233.649 587.943 233.649 cv
590.048 236.741 591.73 239.794 593.066 242.786 cv
590.895 243.739 588.659 244.646 586.379 245.507 cv
586.231 241.496 586.106 237.508 586.105 237.501 cv
584.307 237.558 li
584.307 237.583 584.438 241.942 584.598 246.167 cv
583.395 246.604 582.176 247.031 580.951 247.444 cv
580.39 244.432 li
578.616 244.759 li
579.223 248.017 li
578.29 248.321 577.352 248.618 576.408 248.909 cv
576.518 238.903 li
574.723 238.883 li
574.603 249.456 li
571.344 250.427 568.031 251.324 564.702 252.15 cv
553.058 236.414 mo
553.057 236.399 553.057 236.384 553.056 236.37 cv
553.057 236.384 553.057 236.399 553.058 236.414 cv
553.056 236.365 mo
553.056 236.35 553.055 236.337 553.055 236.323 cv
553.055 236.337 553.056 236.351 553.056 236.365 cv
553.055 236.319 mo
553.053 236.257 553.051 236.196 553.049 236.134 cv
553.051 236.196 553.053 236.257 553.055 236.319 cv
553.049 236.126 mo
553.049 236.113 553.048 236.102 553.048 236.089 cv
553.048 236.101 553.049 236.114 553.049 236.126 cv
553.048 236.079 mo
553.048 236.067 553.047 236.055 553.047 236.043 cv
553.047 236.055 553.048 236.067 553.048 236.079 cv
553.047 236.032 mo
553.047 236.021 553.046 236.01 553.046 235.998 cv
553.046 236.01 553.047 236.021 553.047 236.032 cv
553.046 235.985 mo
553.046 235.974 553.046 235.963 553.045 235.952 cv
553.045 235.963 553.046 235.974 553.046 235.985 cv
553.045 235.94 mo
553.045 235.928 553.045 235.916 553.044 235.904 cv
553.045 235.916 553.045 235.928 553.045 235.94 cv
553.044 235.895 mo
553.044 235.865 553.043 235.834 553.043 235.804 cv
553.043 235.834 553.044 235.865 553.044 235.895 cv
553.043 235.795 mo
553.043 235.783 553.043 235.771 553.042 235.758 cv
553.043 235.771 553.043 235.782 553.043 235.795 cv
553.042 235.746 mo
553.042 235.735 553.042 235.725 553.042 235.714 cv
553.042 235.725 553.042 235.735 553.042 235.746 cv
553.042 235.698 mo
553.042 235.688 553.042 235.678 553.042 235.669 cv
553.042 235.678 553.042 235.688 553.042 235.698 cv
553.042 235.652 mo
553.042 235.642 553.041 235.634 553.041 235.625 cv
553.041 235.634 553.042 235.643 553.042 235.652 cv
553.041 235.606 mo
553.041 235.598 553.041 235.587 553.041 235.578 cv
553.041 235.587 553.041 235.597 553.041 235.606 cv
553.041 235.562 mo
553.041 235.551 553.041 235.54 553.041 235.529 cv
553.041 235.54 553.041 235.551 553.041 235.562 cv
553.041 235.517 mo
553.041 235.502 553.041 235.487 553.041 235.472 cv
553.041 235.487 553.041 235.502 553.041 235.517 cv
553.041 235.472 mo
553.041 235.472 li
553.041 235.453 553.041 235.434 553.041 235.416 cv
553.041 235.434 553.041 235.453 553.041 235.472 cv
553.041 235.404 mo
553.041 235.365 553.041 235.328 553.042 235.29 cv
553.041 235.328 553.041 235.366 553.041 235.404 cv
level3{
gsave
clp
[25.8911 0 0 25.8911 578.933 235.474 ]ct
/3 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.647059 .654902 .666667 ]
/C1 [.388235 .392157 .4 ]
/N 1.1749 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[25.8911 0 0 25.8911 578.933 235.474 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~V50o_Unjf^USFTZUSFQXU8"BUTqS0RTV.sNTV%jKT:_^HSt;LDSXl=AS=H+=S"#n:R[T\6R@0J2R$a8.
R$X/+Q^3r'QBd`#Q'@MtP`q;pPEM)lP*(lhOcYZdOH5H`O,f6\NfB$XNJrgTN/NUPMMd:KM2@(GLkpkC
LPLY>L5(G:KnY56KS4u1K7ec-JqAQ)JUi9$J:E&uIsuiqI=6NlI!g<gH[C*cH?sj^H$OXZG^"@UGBS.Q
F`hhLFEDVGF)uDCEcQ/>EH#l9E,TZ5DJj?0D/F-+Ci!m&CMR["C2%BrBkV0nB4kjhAnGXdAS#C_A7K+Z
~>
<~Vl$>gVP^5fV5:#bV50o_Unjf]USFTZU8"BVU7n9STqJ'OTV.pLT:_^HSt;OESXl=AS=H+>S"#n:R[T\6
R@0J2R$a8.Q^=&*QBmi&Q'IW"Pa%DsPEV2oP*1ukOcbcgOH>QcO,o?^NfK-ZNK&pVN/W^RMi3IMMMd7I
M2@%ELkgb@LPCP<L4t>8KS5#3K7ef.JqAT*JUr?%J:N-!It)orIXQWmI=-EiH[C*cH?sm_H$OXZG^+FV
GBS.QG'.qMFEDVGF)uDCEcQ/>EH,r:E,TZ5DJj?0D/F-+Ci!m&CMR["C2%BrBP;'lB4kjhAnGUcARo=^
~>
<~Wi;tsWMukrW2QYnW2HPkVl-DhVP^5eV5:#bUnjf^Una][US=KWU8"?TTqS-PTV.sMT:_aISt;OESXl=A
S=H+=S"#n9R[T\5R@0J1R$a8-Q^=&)QBmi%Q'IW!Pa%AqPEV/mP*1riOcb`eOH5H`O,f6\NfB$XN/W^S
Mi3LOMMd:JM2@(FLkphALPLV=L4t>8KnP,4KS+o0JqAT*JUrB&J:N-!It)orIXQWmI=-EiH[C*cH?sm_
H$OXZG^+FVGBS.QF`hhLFEDVGF)uABEcQ/>EH#l9Df9Q3DJj?/D/F**Chmg%C2.KuBk_9pBP;$kB4baf
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
596.727 254.247 mo
596.027 250.759 594.947 247.129 593.336 243.401 cv
596.984 241.342 598.891 240.036 598.891 240.036 cv
597.006 240.994 595.063 241.91 593.066 242.786 cv
591.73 239.794 590.048 236.741 587.943 233.649 cv
587.943 233.649 592.448 228.702 595.801 220.748 cv
599.058 229.38 600.628 240.038 598.212 252.719 cv
597.738 253.248 597.242 253.758 596.727 254.247 cv
560.106 253.245 mo
555.929 248.819 553.291 242.926 553.058 236.415 cv
553.058 236.414 li
553.057 236.399 553.057 236.384 553.056 236.37 cv
553.056 236.368 553.056 236.367 553.056 236.365 cv
553.056 236.351 553.055 236.337 553.055 236.323 cv
553.055 236.321 553.055 236.32 553.055 236.319 cv
553.053 236.257 553.051 236.196 553.049 236.134 cv
553.049 236.132 553.049 236.129 553.049 236.126 cv
553.049 236.114 553.048 236.101 553.048 236.089 cv
553.048 236.085 553.048 236.082 553.048 236.079 cv
553.048 236.067 553.047 236.055 553.047 236.043 cv
553.047 236.04 553.047 236.036 553.047 236.032 cv
553.047 236.021 553.046 236.01 553.046 235.998 cv
553.046 235.994 553.046 235.99 553.046 235.985 cv
553.046 235.974 553.045 235.963 553.045 235.952 cv
553.045 235.948 553.045 235.944 553.045 235.94 cv
553.045 235.928 553.045 235.916 553.044 235.904 cv
553.044 235.901 553.044 235.898 553.044 235.895 cv
553.044 235.865 553.043 235.834 553.043 235.804 cv
553.043 235.801 553.043 235.798 553.043 235.795 cv
553.043 235.782 553.043 235.771 553.042 235.758 cv
553.042 235.754 553.042 235.75 553.042 235.746 cv
553.042 235.735 553.042 235.725 553.042 235.714 cv
553.042 235.709 553.042 235.703 553.042 235.698 cv
553.042 235.688 553.042 235.678 553.042 235.669 cv
553.042 235.663 553.042 235.657 553.042 235.652 cv
553.042 235.643 553.041 235.634 553.041 235.625 cv
553.041 235.618 553.041 235.613 553.041 235.606 cv
553.041 235.597 553.041 235.587 553.041 235.578 cv
553.041 235.572 553.041 235.567 553.041 235.562 cv
553.041 235.551 553.041 235.54 553.041 235.529 cv
553.041 235.525 553.041 235.521 553.041 235.517 cv
553.041 235.502 553.041 235.487 553.041 235.472 cv
553.041 235.472 li
553.041 235.472 li
553.041 235.453 553.041 235.434 553.041 235.416 cv
553.041 235.412 553.041 235.408 553.041 235.404 cv
553.041 235.366 553.041 235.328 553.042 235.29 cv
553.042 235.287 553.042 235.285 553.042 235.282 cv
553.079 230.068 554.667 225.223 557.359 221.176 cv
561.932 227.382 569.014 236.147 574.029 238.441 cv
574.029 238.441 564.3 244.172 564.702 252.15 cv
563.171 252.53 561.642 252.894 560.106 253.245 cv
level3{
gsave
clp
[-3.99567e-006 -91.4102 91.4102 -3.99567e-006 578.933 291.725 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [.490196 .494118 .505882 ]
/N 1.31754 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [.6 .607843 .619608 ]
/N 1.1749 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.6 .607843 .619608 ]
/C1 [.6 .607843 .619608 ]
/N 1 
>>
]
/Bounds [.483517 .989011 ]
/Encode [1 0 0 1 0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.99567e-006 -91.4102 91.4102 -3.99567e-006 578.933 291.725 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~I"$QrJqJc3LP^nINK0*_P*;/sQ^O;3SXuIHU8+N]Vl6SqXKAY0Z*L^C[^WcW]"G_j^VI\'`5Ta:aN;TK
c-FY^dF-Lne^i@)g"P39h;7&IiSrnYjlYail0@U#m-X60nF?&>oCV\Jp@n=Vq>'maqu$BjrVlfqrr2oq
rVZTjqYL$`q"XUWp@\(MoCDJBnF5o7mHs9+lg!`uki_*ijlGI]io/hQhqm2EgY:H8f[na+e^W'sda?Ff
cHa\YbK@rKaN)<>`5BL0_8*h"]tM(j]",>[[^NTNZa-j?YHP+2XK/A#W2HMiV50l\TqJ$LSXc1=R[KS3
~>
<~I=Hd!K7nu7Ll.+LNfT9bPE_B"R$sM7SY)RKU84W_W2ZetXKJb2Z*UgF[^WfY]=bhk^qmn*`5Ta;ai_fN
c-FY^dF-Lof%8R-g=tE=hV[8MioB([jlYail0@U$m-X60nF?&>oCV\Jp@n=Vq>'maqu$BjrVlfqrr2oq
rVZTjqtg-aq"XUWp@\+NoCMPCnaQ#8md9B-lg!d"ki_-kjlGL_io/kShqm5GgtUT;g"=p.f%&:!e'cXj
cd0n]bfe/OaiMNB`Pod5_SO%'^V7Co]=PSa\@8oS['[0FZ*:F7Xf\\*Wi;qpVPU,bUS=HTT:VUDS=?";
~>
<~JV&N.L51SBMi<[WOHPflQC!u,S"-%@TV8*TV5C/hWiN5'Y->1:Za@0M\@K2_]Y;.r_8=+.`lH0Bb0/#R
cHjkbdaQ^sf@\d1gYCW@hV[8MioB+]k3(sml0@U$mI'H3nF?)?oCV_Kp@n@Wq>'maqu$BjrVlfqrr2oq
rVZTjqtg0bq"XUXp@\+No^hYEnaQ&:mdBK/m-Es$l0.<nk2k[bj5T(Wi8<GKh;$f?g=b03f@JL&eC2jo
dEp4bcHXSVb0%iIa2Z-<`5BI._8*h"]tM(j]",>\\$i]OZa-mAYck43XK8J&WMl_lVPU)`U7n6PT:VXG
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
584.063 235.132 mo
584.063 237.214 582.382 238.896 580.301 238.896 cv
578.225 238.896 576.538 237.214 576.538 235.132 cv
576.538 233.053 578.225 231.371 580.301 231.371 cv
582.382 231.371 584.063 233.053 584.063 235.132 cv
cp
level3{
gsave
clp
[-7.77351e-007 -17.7837 17.7837 -7.77351e-007 580.3 245.889 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-7.77351e-007 -17.7837 17.7837 -7.77351e-007 580.3 245.889 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
574.496 258.958 mo
574.723 238.883 li
576.518 238.903 li
576.297 258.978 li
574.496 258.958 li
.83 .83 .83 rgb
f
578.616 244.759 mo
580.39 244.432 li
582.895 257.89 li
581.124 258.218 li
578.616 244.759 li
f
584.307 237.558 mo
586.105 237.501 li
586.107 237.514 586.571 252.426 586.777 253.575 cv
584.999 253.87 li
584.75 252.283 584.307 237.603 584.307 237.558 cv
f
566.517 215.969 mo
568.304 215.739 li
570.584 233.529 li
568.801 233.764 li
566.517 215.969 li
cp
f
572.669 214.54 mo
574.471 214.428 li
575.383 229.257 li
573.583 229.37 li
572.669 214.54 li
cp
f
579.514 230.164 mo
580.658 213.508 li
582.45 213.633 li
581.306 230.289 li
579.514 230.164 li
cp
f
583.184 227.513 mo
586.154 214.966 li
587.905 215.377 li
584.935 227.928 li
583.184 227.513 li
cp
f
522.132 271.289 mo
518.209 271.289 514.567 270.08 511.559 268.016 cv
513.982 267.779 516.364 267.508 518.701 267.205 cv
518.675 269.545 li
520.471 269.564 li
520.501 266.965 li
521.346 266.849 522.177 266.73 523.011 266.606 cv
523.469 269.06 li
525.239 268.732 li
524.792 266.333 li
528.173 265.803 531.458 265.209 534.638 264.565 cv
534.767 265.096 534.884 265.623 534.989 266.145 cv
535.657 265.512 536.279 264.83 536.848 264.106 cv
536.857 264.104 536.867 264.102 536.876 264.1 cv
533.451 268.476 528.12 271.289 522.132 271.289 cv
505.454 261.062 mo
504.186 258.574 503.459 255.766 503.427 252.79 cv
503.459 255.766 504.188 258.574 505.458 261.062 cv
505.454 261.062 li
512.885 260.456 mo
514.781 256.971 518.592 254.728 518.592 254.728 cv
514.971 253.071 509.85 246.736 506.545 242.25 cv
504.613 245.153 503.472 248.622 503.427 252.357 cv
503.549 242.131 511.878 233.878 522.132 233.878 cv
532.441 233.878 540.804 242.215 540.842 252.514 cv
540.823 247.351 538.707 242.681 535.308 239.312 cv
532.914 246.575 528.642 251.264 528.642 251.264 cv
530.247 253.621 531.512 255.947 532.501 258.223 cv
530.886 258.447 529.295 258.657 527.726 258.855 cv
527.636 256.318 527.564 254.042 527.562 254.038 cv
525.762 254.094 li
525.765 254.117 525.836 256.468 525.93 259.077 cv
525.111 259.177 524.298 259.273 523.494 259.366 cv
523.428 259.009 li
521.655 259.342 li
521.698 259.569 li
521.326 259.611 520.954 259.651 520.586 259.691 cv
520.641 255.059 li
518.839 255.038 li
518.784 259.883 li
516.748 260.095 514.779 260.285 512.885 260.456 cv
540.299 257.059 mo
540.644 255.665 540.831 254.209 540.841 252.71 cv
540.831 254.208 540.645 255.664 540.303 257.059 cv
540.301 257.059 540.301 257.059 540.299 257.059 cv
503.427 252.784 mo
503.427 252.775 503.427 252.767 503.427 252.758 cv
503.427 252.767 503.427 252.775 503.427 252.784 cv
503.427 252.749 mo
503.426 252.742 503.426 252.732 503.426 252.725 cv
503.426 252.733 503.426 252.741 503.427 252.749 cv
503.426 252.715 mo
503.426 252.708 503.426 252.701 503.426 252.694 cv
503.426 252.701 503.426 252.708 503.426 252.715 cv
540.841 252.709 mo
540.841 252.699 540.841 252.689 540.841 252.679 cv
540.841 252.689 540.841 252.699 540.841 252.709 cv
503.426 252.681 mo
503.426 252.674 503.426 252.668 503.426 252.661 cv
503.426 252.667 503.426 252.675 503.426 252.681 cv
540.841 252.678 mo
540.841 252.67 540.842 252.662 540.842 252.654 cv
540.842 252.662 540.841 252.67 540.841 252.678 cv
503.426 252.649 mo
503.426 252.642 503.426 252.635 503.426 252.628 cv
503.426 252.635 503.426 252.642 503.426 252.649 cv
540.842 252.646 mo
540.842 252.639 540.842 252.633 540.842 252.627 cv
540.842 252.633 540.842 252.639 540.842 252.646 cv
503.426 252.616 mo
503.426 252.605 503.426 252.595 503.426 252.584 cv
503.426 252.595 503.426 252.605 503.426 252.616 cv
540.842 252.615 mo
540.842 252.604 540.842 252.594 540.842 252.584 cv
540.842 252.594 540.842 252.604 540.842 252.615 cv
503.426 252.584 mo
503.426 252.584 li
503.426 252.571 503.426 252.557 503.426 252.544 cv
503.426 252.558 503.426 252.571 503.426 252.584 cv
503.426 252.534 mo
503.426 252.507 503.426 252.48 503.426 252.454 cv
503.426 252.48 503.426 252.507 503.426 252.534 cv
503.426 252.445 mo
503.427 252.418 503.427 252.39 503.427 252.363 cv
503.427 252.39 503.427 252.418 503.426 252.445 cv
level3{
gsave
clp
[18.707 0 0 18.707 522.134 252.583 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[18.707 0 0 18.707 522.134 252.583 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
534.989 266.145 mo
534.884 265.623 534.767 265.096 534.638 264.565 cv
535.38 264.415 536.117 264.262 536.848 264.106 cv
536.279 264.83 535.657 265.512 534.989 266.145 cv
505.458 261.062 mo
504.188 258.574 503.459 255.766 503.427 252.79 cv
503.427 252.788 503.427 252.786 503.427 252.784 cv
503.427 252.775 503.427 252.767 503.427 252.758 cv
503.427 252.755 503.427 252.752 503.427 252.749 cv
503.426 252.741 503.426 252.733 503.426 252.725 cv
503.426 252.722 503.426 252.718 503.426 252.715 cv
503.426 252.708 503.426 252.701 503.426 252.694 cv
503.426 252.69 503.426 252.686 503.426 252.681 cv
503.426 252.675 503.426 252.667 503.426 252.661 cv
503.426 252.657 503.426 252.653 503.426 252.649 cv
503.426 252.642 503.426 252.635 503.426 252.628 cv
503.426 252.624 503.426 252.62 503.426 252.616 cv
503.426 252.605 503.426 252.595 503.426 252.584 cv
503.426 252.584 li
503.426 252.584 li
503.426 252.571 503.426 252.558 503.426 252.544 cv
503.426 252.541 503.426 252.537 503.426 252.534 cv
503.426 252.507 503.426 252.48 503.426 252.454 cv
503.426 252.451 503.426 252.448 503.426 252.445 cv
503.427 252.418 503.427 252.39 503.427 252.363 cv
503.427 252.361 503.427 252.359 503.427 252.357 cv
503.472 248.622 504.613 245.153 506.545 242.25 cv
509.85 246.736 514.971 253.071 518.592 254.728 cv
518.592 254.728 514.781 256.971 512.885 260.456 cv
510.25 260.693 507.764 260.893 505.458 261.062 cv
532.501 258.223 mo
531.512 255.947 530.247 253.621 528.642 251.264 cv
528.642 251.264 532.914 246.575 535.308 239.312 cv
538.707 242.681 540.823 247.351 540.842 252.514 cv
540.842 252.537 540.842 252.561 540.842 252.584 cv
540.842 252.584 li
540.842 252.584 li
540.842 252.584 li
540.842 252.594 540.842 252.604 540.842 252.615 cv
540.842 252.619 540.842 252.623 540.842 252.627 cv
540.842 252.633 540.842 252.639 540.842 252.646 cv
540.842 252.648 540.842 252.651 540.842 252.654 cv
540.842 252.662 540.841 252.67 540.841 252.678 cv
540.841 252.678 540.841 252.678 540.841 252.679 cv
540.841 252.689 540.841 252.699 540.841 252.709 cv
540.841 252.709 540.841 252.71 540.841 252.71 cv
540.831 254.209 540.644 255.665 540.299 257.059 cv
537.659 257.483 535.052 257.87 532.501 258.223 cv
level3{
gsave
clp
[-2.88624e-006 -66.0294 66.0294 -2.88624e-006 522.134 293.217 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.88624e-006 -66.0294 66.0294 -2.88624e-006 522.134 293.217 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
525.838 252.334 mo
525.838 253.837 524.623 255.052 523.12 255.052 cv
521.618 255.052 520.402 253.837 520.402 252.334 cv
520.402 250.836 521.618 249.615 523.12 249.615 cv
524.623 249.615 525.838 250.836 525.838 252.334 cv
cp
level3{
gsave
clp
[-5.6165e-007 -12.8491 12.8491 -5.6165e-007 523.12 260.104 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-5.6165e-007 -12.8491 12.8491 -5.6165e-007 523.12 260.104 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
518.675 269.545 mo
518.839 255.038 li
520.641 255.059 li
520.471 269.564 li
518.675 269.545 li
.83 .83 .83 rgb
f
521.655 259.342 mo
523.428 259.009 li
525.239 268.732 li
523.469 269.06 li
521.655 259.342 li
f
525.762 254.094 mo
527.562 254.038 li
527.567 254.048 527.9 264.849 528.046 265.617 cv
526.27 265.916 li
526.08 264.704 525.77 254.143 525.762 254.094 cv
f
512.914 238.523 mo
514.702 238.292 li
516.349 251.149 li
514.563 251.378 li
512.914 238.523 li
cp
f
517.355 237.472 mo
519.155 237.361 li
519.814 248.079 li
518.016 248.187 li
517.355 237.472 li
cp
f
522.302 248.729 mo
523.13 236.697 li
524.924 236.824 li
524.099 248.854 li
522.302 248.729 li
cp
f
524.96 246.77 mo
527.11 237.705 li
528.859 238.117 li
526.714 247.186 li
524.96 246.77 li
cp
f
606.111 204.28 mo
605.312 202.972 604.322 201.887 603.166 201.007 cv
604.323 201.887 605.312 202.971 606.111 204.28 cv
.501961 .501961 .501961 rgb
f
596.144 260.966 mo
597.018 258.145 597.698 255.41 598.203 252.765 cv
602.275 248.23 604.768 242.251 604.822 235.69 cv
604.822 235.689 604.822 235.688 604.822 235.688 cv
604.822 235.675 604.823 235.663 604.823 235.65 cv
604.823 235.648 604.823 235.646 604.823 235.644 cv
604.823 235.63 604.823 235.618 604.823 235.604 cv
604.823 235.603 604.823 235.602 604.823 235.602 cv
604.823 235.589 604.823 235.578 604.823 235.566 cv
604.823 235.563 604.823 235.56 604.823 235.558 cv
604.823 235.544 604.823 235.53 604.823 235.516 cv
604.823 235.515 li
604.823 235.5 604.823 235.487 604.823 235.472 cv
604.823 235.472 li
604.823 235.472 li
604.823 235.472 li
604.823 235.416 604.823 235.36 604.823 235.304 cv
604.823 235.296 604.823 235.288 604.822 235.28 cv
604.822 235.274 604.822 235.268 604.822 235.262 cv
604.822 235.255 604.822 235.249 604.822 235.242 cv
604.822 235.235 604.822 235.227 604.822 235.22 cv
604.822 235.214 604.822 235.208 604.822 235.202 cv
604.822 235.194 604.822 235.186 604.822 235.178 cv
604.821 235.172 604.821 235.166 604.821 235.16 cv
604.821 235.153 604.821 235.144 604.821 235.137 cv
604.821 235.127 604.821 235.119 604.821 235.11 cv
604.821 235.105 604.821 235.1 604.82 235.095 cv
604.82 235.086 604.82 235.077 604.82 235.068 cv
604.82 235.063 604.82 235.058 604.82 235.053 cv
604.82 235.046 604.82 235.039 604.82 235.032 cv
604.819 235.025 604.819 235.018 604.819 235.011 cv
604.819 235.005 604.819 235 604.819 234.994 cv
604.819 234.986 604.819 234.978 604.818 234.969 cv
604.818 234.963 604.818 234.958 604.818 234.953 cv
604.818 234.944 604.818 234.936 604.818 234.927 cv
604.817 234.922 604.817 234.917 604.817 234.912 cv
604.817 234.902 604.817 234.895 604.817 234.885 cv
604.817 234.88 604.816 234.876 604.816 234.871 cv
604.816 234.862 604.816 234.853 604.816 234.843 cv
604.816 234.839 604.815 234.834 604.815 234.829 cv
604.815 234.82 604.815 234.811 604.815 234.802 cv
604.815 234.795 604.814 234.789 604.814 234.783 cv
604.814 234.775 604.814 234.768 604.814 234.76 cv
604.813 234.754 604.813 234.748 604.813 234.741 cv
604.813 234.733 604.813 234.726 604.812 234.719 cv
604.812 234.713 604.812 234.707 604.812 234.702 cv
604.812 234.693 604.811 234.685 604.811 234.677 cv
604.811 234.671 604.811 234.666 604.811 234.661 cv
604.81 234.652 604.81 234.644 604.81 234.635 cv
604.81 234.629 604.81 234.623 604.809 234.617 cv
604.809 234.609 604.809 234.601 604.809 234.594 cv
604.808 234.588 604.808 234.582 604.808 234.577 cv
604.808 234.568 604.807 234.56 604.807 234.551 cv
604.807 234.547 604.807 234.542 604.807 234.538 cv
604.806 234.528 604.806 234.519 604.806 234.509 cv
604.805 234.506 604.805 234.502 604.805 234.499 cv
604.805 234.488 604.804 234.478 604.804 234.468 cv
604.804 234.464 604.804 234.459 604.804 234.455 cv
604.803 234.445 604.803 234.436 604.802 234.427 cv
604.802 234.422 604.802 234.417 604.802 234.413 cv
604.802 234.404 604.801 234.393 604.801 234.385 cv
604.801 234.381 604.8 234.377 604.8 234.373 cv
604.8 234.363 604.799 234.353 604.799 234.343 cv
604.799 234.339 604.799 234.336 604.799 234.333 cv
604.798 234.322 604.798 234.312 604.797 234.301 cv
604.797 234.298 604.797 234.294 604.797 234.291 cv
604.796 234.28 604.796 234.271 604.795 234.259 cv
604.795 234.257 604.795 234.254 604.795 234.252 cv
604.794 234.24 604.794 234.228 604.793 234.217 cv
604.793 234.216 604.793 234.215 604.793 234.214 cv
604.793 234.202 604.792 234.187 604.791 234.175 cv
604.791 234.175 604.791 234.174 604.791 234.174 cv
604.791 234.161 604.79 234.147 604.789 234.134 cv
604.789 234.133 604.789 234.131 604.789 234.13 cv
604.788 234.118 604.788 234.105 604.787 234.093 cv
604.787 234.091 604.787 234.09 604.787 234.088 cv
604.786 234.076 604.785 234.063 604.785 234.051 cv
604.785 234.05 604.785 234.048 604.785 234.046 cv
604.784 234.034 604.783 234.022 604.783 234.009 cv
604.782 234.009 604.782 234.008 604.782 234.007 cv
604.782 233.993 604.781 233.982 604.78 233.968 cv
604.78 233.967 604.78 233.966 604.78 233.965 cv
604.779 233.952 604.779 233.939 604.778 233.926 cv
604.778 233.926 604.778 233.925 604.778 233.925 cv
604.777 233.911 604.776 233.898 604.775 233.885 cv
604.775 233.884 li
604.248 225.177 599.414 217.628 592.375 213.343 cv
589.018 207.266 584.998 202.561 581.599 199.229 cv
585.349 198.4 588.869 197.935 592.048 197.935 cv
596.539 197.935 600.35 198.863 603.166 201.007 cv
604.322 201.887 605.312 202.972 606.111 204.28 cv
606.111 204.28 li
616.243 220.864 624.767 245.288 596.144 260.966 cv
.580392 .580392 .580392 rgb
f
598.203 252.765 mo
598.207 252.748 598.209 252.735 598.212 252.719 cv
602.27 248.191 604.768 242.239 604.822 235.69 cv
604.768 242.251 602.275 248.23 598.203 252.765 cv
604.822 235.688 mo
604.822 235.675 604.823 235.663 604.823 235.65 cv
604.823 235.663 604.822 235.675 604.822 235.688 cv
604.823 235.644 mo
604.823 235.631 604.823 235.617 604.823 235.604 cv
604.823 235.618 604.823 235.63 604.823 235.644 cv
604.823 235.602 mo
604.823 235.589 604.823 235.578 604.823 235.566 cv
604.823 235.578 604.823 235.589 604.823 235.602 cv
604.823 235.558 mo
604.823 235.544 604.823 235.53 604.823 235.516 cv
604.823 235.53 604.823 235.544 604.823 235.558 cv
604.823 235.515 mo
604.823 235.501 604.823 235.486 604.823 235.472 cv
604.823 235.487 604.823 235.5 604.823 235.515 cv
604.823 235.472 mo
604.823 235.416 604.823 235.36 604.823 235.304 cv
604.823 235.36 604.823 235.416 604.823 235.472 cv
604.823 235.472 li
604.822 235.28 mo
604.822 235.274 604.822 235.268 604.822 235.262 cv
604.822 235.268 604.822 235.274 604.822 235.28 cv
604.822 235.242 mo
604.822 235.235 604.822 235.227 604.822 235.22 cv
604.822 235.227 604.822 235.235 604.822 235.242 cv
604.822 235.202 mo
604.822 235.194 604.822 235.186 604.822 235.178 cv
604.822 235.186 604.822 235.194 604.822 235.202 cv
604.821 235.16 mo
604.821 235.153 604.821 235.145 604.821 235.137 cv
604.821 235.144 604.821 235.153 604.821 235.16 cv
604.821 235.11 mo
604.821 235.105 604.821 235.1 604.82 235.095 cv
604.821 235.1 604.821 235.105 604.821 235.11 cv
604.82 235.068 mo
604.82 235.063 604.82 235.058 604.82 235.053 cv
604.82 235.058 604.82 235.063 604.82 235.068 cv
604.82 235.032 mo
604.819 235.025 604.819 235.018 604.819 235.011 cv
604.819 235.018 604.819 235.025 604.82 235.032 cv
604.819 234.994 mo
604.819 234.986 604.819 234.977 604.818 234.969 cv
604.819 234.978 604.819 234.986 604.819 234.994 cv
604.818 234.953 mo
604.818 234.944 604.818 234.935 604.818 234.927 cv
604.818 234.936 604.818 234.944 604.818 234.953 cv
604.817 234.912 mo
604.817 234.903 604.817 234.894 604.817 234.885 cv
604.817 234.895 604.817 234.902 604.817 234.912 cv
604.816 234.871 mo
604.816 234.862 604.816 234.852 604.816 234.843 cv
604.816 234.853 604.816 234.862 604.816 234.871 cv
604.815 234.829 mo
604.815 234.82 604.815 234.811 604.815 234.802 cv
604.815 234.811 604.815 234.82 604.815 234.829 cv
604.814 234.783 mo
604.814 234.775 604.814 234.768 604.814 234.76 cv
604.814 234.768 604.814 234.775 604.814 234.783 cv
604.813 234.741 mo
604.813 234.734 604.813 234.726 604.812 234.719 cv
604.813 234.726 604.813 234.733 604.813 234.741 cv
604.812 234.702 mo
604.812 234.693 604.811 234.685 604.811 234.677 cv
604.811 234.685 604.812 234.693 604.812 234.702 cv
604.811 234.661 mo
604.81 234.652 604.81 234.644 604.81 234.635 cv
604.81 234.644 604.81 234.652 604.811 234.661 cv
604.809 234.617 mo
604.809 234.609 604.809 234.602 604.809 234.594 cv
604.809 234.601 604.809 234.609 604.809 234.617 cv
604.808 234.577 mo
604.808 234.568 604.807 234.56 604.807 234.551 cv
604.807 234.56 604.808 234.568 604.808 234.577 cv
604.807 234.538 mo
604.806 234.528 604.806 234.519 604.806 234.509 cv
604.806 234.519 604.806 234.528 604.807 234.538 cv
604.805 234.499 mo
604.805 234.488 604.804 234.478 604.804 234.468 cv
604.804 234.478 604.805 234.488 604.805 234.499 cv
604.804 234.455 mo
604.803 234.445 604.803 234.436 604.802 234.427 cv
604.803 234.436 604.803 234.445 604.804 234.455 cv
604.802 234.413 mo
604.802 234.403 604.801 234.394 604.801 234.385 cv
604.801 234.393 604.802 234.404 604.802 234.413 cv
604.8 234.373 mo
604.8 234.363 604.799 234.353 604.799 234.343 cv
604.799 234.353 604.8 234.363 604.8 234.373 cv
604.799 234.333 mo
604.798 234.322 604.798 234.312 604.797 234.301 cv
604.798 234.312 604.798 234.322 604.799 234.333 cv
604.797 234.291 mo
604.796 234.281 604.796 234.27 604.795 234.259 cv
604.796 234.271 604.796 234.28 604.797 234.291 cv
604.795 234.252 mo
604.794 234.24 604.794 234.229 604.793 234.217 cv
604.794 234.228 604.794 234.24 604.795 234.252 cv
604.793 234.214 mo
604.792 234.201 604.792 234.188 604.791 234.175 cv
604.792 234.187 604.793 234.202 604.793 234.214 cv
604.791 234.174 mo
604.791 234.16 604.79 234.148 604.789 234.134 cv
604.79 234.147 604.791 234.161 604.791 234.174 cv
604.789 234.13 mo
604.788 234.118 604.788 234.105 604.787 234.093 cv
604.788 234.105 604.788 234.118 604.789 234.13 cv
604.787 234.088 mo
604.786 234.076 604.785 234.063 604.785 234.051 cv
604.785 234.063 604.786 234.076 604.787 234.088 cv
604.785 234.046 mo
604.784 234.034 604.783 234.022 604.783 234.009 cv
604.783 234.022 604.784 234.034 604.785 234.046 cv
604.782 234.007 mo
604.782 233.994 604.781 233.981 604.78 233.968 cv
604.781 233.982 604.782 233.993 604.782 234.007 cv
604.78 233.965 mo
604.779 233.952 604.779 233.939 604.778 233.926 cv
604.779 233.939 604.779 233.952 604.78 233.965 cv
604.778 233.925 mo
604.777 233.911 604.776 233.898 604.775 233.885 cv
604.776 233.898 604.777 233.911 604.778 233.925 cv
604.775 233.884 mo
604.379 227.335 601.546 221.446 597.171 217.101 cv
596.75 218.376 596.288 219.594 595.801 220.748 cv
594.797 218.087 593.632 215.619 592.375 213.343 cv
599.414 217.628 604.248 225.177 604.775 233.884 cv
level3{
gsave
clp
[25.8911 0 0 25.8911 578.933 235.474 ]ct
/5 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.823529 .827451 .835294 ]
/C1 [.694118 .698039 .701961 ]
/N 1.1749 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[25.8911 0 0 25.8911 578.933 235.474 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~dF$@hdF$@hdF$@hdF$=fd*U.dd*U.dcd0q`cd0q`cd0n^cHa_\cHa_[c-=MXc-=MXbfn;Tbfn;TbKJ)P
bKJ)PbK@uMb0%lLb/qcIaiVZHaiMQEaN2HDaN)?Aa2c6@a2Z-=`l?$<`l5p9`Pog8`5KU4`5KU4_o'C0
_o'C/_SX1,_SX1+_83t(_83q&^qdb$^q[Y!^V@Ou^V7Fr^:q=q]tM+m]tM+l]Y(ni]Y(kg]=Y\e]=PSb
]"5Ja\[f8]\[f8\\@B&Y\@8rV\$riU[^NWQ[^NWP[C*EM[C*BK['[3I['R*FZa7!DZEgdAZEga?Z*CR=
~>
<~daHRldaHRldaHRldaHOjdF$@hdF$@hd*U.dd*U.dd*U+bcd0q`cd0q_cHa_\cHa_\c-=MXc-=MXbfn;T
bfn;Tbfe2QbKJ)PbK@uMb0%lLb/qcIaiVZHaiMQEaN2HDaN)?Aa2c6@a2Z-=`l?$<`Pog8`Pog8`5KU4
`5KU3_o'C0_o'C/_SX1,_SX.*_83t(_8*k%^qdb$^q[Y!^V@Ou^:q=q^:q=p]tM+m]tM(k]Y(ni]Xtef
]=Y\e]"5Ja]"5J`\[f8]\[]/Z\@B&Y\$riU\$riT[^NWQ[^NTO[C*EM[C!<J['[3HZa7!EZa6sCZEgdA
~>
<~eC<!teC<!teC<!teC2mqe'ldpe'ldodaHRldaHRlda?IidF$@hdF$=fd*U.dd*U.ccd0q`cd0q_cHa_\
cHa_[c-=MXc-=MWbfn;Tbfn;SbKJ)PbKJ)Ob0%lLb0%iJaiVZHaiVWFaN2HDaN)?Aa2c6@a2Z-=`l?$<
`Pog8`Pog7`5KU4`5KR2_o'C0_ns:-_SX1,_SO()_83t'^qdb$^qd_"^V@Ou^V7Fr^:q=q]tM+m]tM+l
]Y(ni]Y(kg]=Y\e]"5Ja]"5J`\[f8]\[f5[\@B&Y\$riU\$riT[^NWQ[^ENN[C*EM['[3I['[0GZa7!E
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
598.212 252.719 mo
600.628 240.038 599.058 229.38 595.801 220.748 cv
596.288 219.594 596.75 218.376 597.171 217.101 cv
601.546 221.446 604.379 227.335 604.775 233.884 cv
604.775 233.885 li
604.776 233.898 604.777 233.911 604.778 233.925 cv
604.778 233.925 604.778 233.926 604.778 233.926 cv
604.779 233.939 604.779 233.952 604.78 233.965 cv
604.78 233.966 604.78 233.967 604.78 233.968 cv
604.781 233.981 604.782 233.994 604.782 234.007 cv
604.782 234.008 604.782 234.009 604.783 234.009 cv
604.783 234.022 604.784 234.034 604.785 234.046 cv
604.785 234.048 604.785 234.05 604.785 234.051 cv
604.785 234.063 604.786 234.076 604.787 234.088 cv
604.787 234.09 604.787 234.091 604.787 234.093 cv
604.788 234.105 604.788 234.118 604.789 234.13 cv
604.789 234.131 604.789 234.133 604.789 234.134 cv
604.79 234.148 604.791 234.16 604.791 234.174 cv
604.791 234.174 604.791 234.175 604.791 234.175 cv
604.792 234.188 604.792 234.201 604.793 234.214 cv
604.793 234.215 604.793 234.216 604.793 234.217 cv
604.794 234.229 604.794 234.24 604.795 234.252 cv
604.795 234.254 604.795 234.257 604.795 234.259 cv
604.796 234.27 604.796 234.281 604.797 234.291 cv
604.797 234.294 604.797 234.298 604.797 234.301 cv
604.798 234.312 604.798 234.322 604.799 234.333 cv
604.799 234.336 604.799 234.339 604.799 234.343 cv
604.799 234.353 604.8 234.363 604.8 234.373 cv
604.8 234.377 604.801 234.381 604.801 234.385 cv
604.801 234.394 604.802 234.403 604.802 234.413 cv
604.802 234.417 604.802 234.422 604.802 234.427 cv
604.803 234.436 604.803 234.445 604.804 234.455 cv
604.804 234.459 604.804 234.464 604.804 234.468 cv
604.804 234.478 604.805 234.488 604.805 234.499 cv
604.805 234.502 604.805 234.506 604.806 234.509 cv
604.806 234.519 604.806 234.528 604.807 234.538 cv
604.807 234.542 604.807 234.547 604.807 234.551 cv
604.807 234.56 604.808 234.568 604.808 234.577 cv
604.808 234.582 604.808 234.588 604.809 234.594 cv
604.809 234.602 604.809 234.609 604.809 234.617 cv
604.81 234.623 604.81 234.629 604.81 234.635 cv
604.81 234.644 604.81 234.652 604.811 234.661 cv
604.811 234.666 604.811 234.671 604.811 234.677 cv
604.811 234.685 604.812 234.693 604.812 234.702 cv
604.812 234.707 604.812 234.713 604.812 234.719 cv
604.813 234.726 604.813 234.734 604.813 234.741 cv
604.813 234.748 604.813 234.754 604.814 234.76 cv
604.814 234.768 604.814 234.775 604.814 234.783 cv
604.814 234.789 604.815 234.795 604.815 234.802 cv
604.815 234.811 604.815 234.82 604.815 234.829 cv
604.815 234.834 604.816 234.839 604.816 234.843 cv
604.816 234.852 604.816 234.862 604.816 234.871 cv
604.816 234.876 604.817 234.88 604.817 234.885 cv
604.817 234.894 604.817 234.903 604.817 234.912 cv
604.817 234.917 604.817 234.922 604.818 234.927 cv
604.818 234.935 604.818 234.944 604.818 234.953 cv
604.818 234.958 604.818 234.963 604.818 234.969 cv
604.819 234.977 604.819 234.986 604.819 234.994 cv
604.819 235 604.819 235.005 604.819 235.011 cv
604.819 235.018 604.819 235.025 604.82 235.032 cv
604.82 235.039 604.82 235.046 604.82 235.053 cv
604.82 235.058 604.82 235.063 604.82 235.068 cv
604.82 235.077 604.82 235.086 604.82 235.095 cv
604.821 235.1 604.821 235.105 604.821 235.11 cv
604.821 235.119 604.821 235.127 604.821 235.137 cv
604.821 235.145 604.821 235.153 604.821 235.16 cv
604.821 235.166 604.821 235.172 604.822 235.178 cv
604.822 235.186 604.822 235.194 604.822 235.202 cv
604.822 235.208 604.822 235.214 604.822 235.22 cv
604.822 235.227 604.822 235.235 604.822 235.242 cv
604.822 235.249 604.822 235.255 604.822 235.262 cv
604.822 235.268 604.822 235.274 604.822 235.28 cv
604.823 235.288 604.823 235.296 604.823 235.304 cv
604.823 235.36 604.823 235.416 604.823 235.472 cv
604.823 235.472 li
604.823 235.472 li
604.823 235.486 604.823 235.501 604.823 235.515 cv
604.823 235.516 li
604.823 235.53 604.823 235.544 604.823 235.558 cv
604.823 235.56 604.823 235.563 604.823 235.566 cv
604.823 235.578 604.823 235.589 604.823 235.602 cv
604.823 235.602 604.823 235.603 604.823 235.604 cv
604.823 235.617 604.823 235.631 604.823 235.644 cv
604.823 235.646 604.823 235.648 604.823 235.65 cv
604.823 235.663 604.822 235.675 604.822 235.688 cv
604.822 235.688 604.822 235.689 604.822 235.69 cv
604.768 242.239 602.27 248.191 598.212 252.719 cv
level3{
gsave
clp
[-3.99567e-006 -91.4102 91.4102 -3.99567e-006 578.933 291.725 ]ct
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [.745098 .74902 .752941 ]
/N 1.31754 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [.8 .803922 .811765 ]
/N 1.1749 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.8 .803922 .811765 ]
/C1 [.8 .803922 .811765 ]
/N 1 
>>
]
/Bounds [.483517 .989011 ]
/Encode [1 0 0 1 0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.99567e-006 -91.4102 91.4102 -3.99567e-006 578.933 291.725 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~]tV7s^qmn)_o0L4`l?'?aN;TIbKS2TcHab^d*^7he'lgse^i='f\"m1g=tB;gtgiDhr!ANiSrkWj5f:_
k2tjikih9qlK[^$m-O-,mdBQ4nF5u<o()DDo^qhLp%J+Rp\=OYq>'j_qYU0er;?KkrVc]orr2orrr2or
rr)for;?Kjqtp9eqYL$`q=sa[p\4FUp@e1Pp%7nJoCMPDo'u8>nF5o8n*]W2mHs9,lg*m%lKRQtkih3m
k2tgfjlGL`j5].YiSibRi8<GKhVR)Egt^Z=g=k96g"=s/f@SU)e^`1!e'landa?Ihd*L%`cHXVYbfn8R
~>
<~^;%J"_8=+-`5T^8a2c9Cai_cLbfn>WcHjkadF$Cke'upuf%/I*f\+s3gY:N=h;7#Ghr*GOio9"YjQ,Fa
k3(pkkiq?slKdd&m-X3.mdKW6nF?&>o()DDo^qhLp@e4Sp\=OYq>'m`qYU0er;?KkrVc]orr2orrr2or
rr)forVZTkqtp9eqYL'aq>'g\q"OOVp@e1Pp%7nKoCMSEo'u8?nF5r9n*]W3mHs<-m-F!'lK[Wul0.?o
kND!ijlPRajQ#:[io8qUi8EMMhqm5Gh;$f@gY:H9g"G'2f[na+f%/C%eC;srdaHRkdEp7dcd'h\c-=JV
~>
<~^VI\&_Sa:0`Poj;a2lBEb0.uPc-=PZcd:%ddaHUneCE+#f%8R,g"G*6gYCT?h;7&Hi8ESQioB([jQ5Lc
k3(pkkiq?slg*p(mHs?0mdKW6nF?&>o(2JFo^qhLp@e7Tp\=OYq>'m`qYU0er;?KkrVc]orr2orrr2or
rr)forVZTkr;6BgqYL'aq>'g\q"OOWp@e4Qp%@tLo^h\Go()AAnaZ,<n*f`5mdBK0m-O*)lg*j$l07Hr
ki_-lk2tgfjlGL`j5].Yio/kSi8<GLhVR)Eh;$f?gY:H9g"G$1f[na+f%&=$eC;srdaHRkdEp7dcd0n^
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
548.252 232.334 mo
548.252 237.499 544.064 241.687 538.899 241.687 cv
533.73 241.687 529.544 237.499 529.544 232.334 cv
529.544 227.169 533.73 222.98 538.899 222.98 cv
544.064 222.98 548.252 227.169 548.252 232.334 cv
cp
.764706 .737255 .764706 rgb
f
545.684 225.914 mo
543.982 224.111 541.575 222.98 538.899 222.98 cv
534.799 222.98 531.324 225.624 530.063 229.288 cv
538.899 232.334 li
545.684 225.914 li
cp
538.718 233.392 mo
532.569 239.21 li
534.238 240.741 536.455 241.687 538.899 241.687 cv
542.622 241.687 545.827 239.509 547.332 236.359 cv
538.718 233.392 li
cp
.501961 .427451 .403922 rgb
f
502.9 268.696 mo
496.343 263.152 li
502.903 268.696 li
502.9 268.696 502.9 268.696 502.9 268.696 cv
496.343 263.152 mo
496.846 261.602 li
496.846 261.602 li
496.343 263.152 li
level3{
gsave
clp
[-1.81229e-005 -414.603 414.603 -1.81229e-005 354.313 412.475 ]ct
/7 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.898039 .901961 .905882 ]
/C1 [1 1 1 ]
/N 1.31754 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.898039 .901961 .905882 ]
/C1 [1 1 1 ]
/N 1.1749 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [1 1 1 ]
/N 1 
>>
]
/Bounds [.483517 .989011 ]
/Encode [1 0 0 1 0 1 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.81229e-005 -414.603 414.603 -1.81229e-005 354.313 412.475 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8N#srVc]nr;?Kiqtp9eqYL'aq>'j]q"XXYp\4FUp@e4Qp%A"Mo^qeIoCMSEo()AAnaZ/=nF5r:n*f`6
mdBN2md9E/mHs9,m-O*)lg*m&lK[["lKRQtl07Eqkih6okND$kkND$jk2tggk2tdejlPUcjlPUcjlPUc
jlPUck2tggk2tghkND$kkNM-nkih6pl07HslK[["lKdd%lg*m'm-O**mHs<.mI'E1mdBQ4n*f`7nF5r;
naZ/>o()ABo(2JEoCV\Io^qhLp%A%Pp@e4Sp\4FWq"XXZq>'j^qYL'bqYU0equ$Bir;HTmrVlfqrr2rt
~>
<~s8N#srVc]nr;?Kjqtp9fqYL'bq>'j^q"XXZp\4FVp@e4Rp%A"No^qeJo^h\GoCDJCo'u8?naZ,<nF5r9
n*f`5mdBN2mHs<.mHj3+m-O'(lg*m&lK[["lKRQtl07Hskih6okih3mkND$kkND!ik2tggk2tggk2tgg
k2tggk3(pjkND$lkih6okih9ql07HtlK[["lKdd%lg*m'm-O**mHs<.mI'E1mdBN3n*f`6nF5r:nF?&=
naZ2@o()DDoCMSGo^qeJp%A"Np%J+Qp@n=Up\4IXq"XX[q>'j_qYL'bqtp9fr;?Kjr;HTmrVlfqrr2rt
~>
<~s8N#srVc]nr;?Kjqtp9fqYL'bqYBs_q=sa[q"OOWp\+=Sp@e1Pp%@tLo^qeIoCMSEo()ABnaZ/>naQ&;
nF,i7n*f`5mdBN2mHs<.mHj3+m-O*)lg*m&lg!d#lK[[!l07Hsl07Eqkih6oki_-lkND$kkND$kkND$k
kND$kkNM-nkih6ol07Hsl07KulK[["lg*m&lg*p(m-O**mHs<.mHs?0mdBN3n*f`6nF5r:nF5u<naZ/?
o()ABoCMSFoCV\Io^qhLp%A"Op@e4Rp\4FVp\=OYq"X[\q>'m`qYL'cqtp9fr;?KjrVc]nrVlfqrr2rt
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
502.903 268.696 mo
496.343 263.152 li
496.847 261.601 li
499.299 261.474 502.197 261.3 505.454 261.062 cv
506.879 263.859 508.987 266.251 511.559 268.016 cv
508.729 268.292 505.843 268.521 502.9 268.696 cv
536.876 264.1 mo
538.478 262.052 539.663 259.663 540.303 257.059 cv
545.314 256.255 550.454 255.32 555.613 254.231 cv
557.025 255.575 558.591 256.763 560.278 257.763 cv
553.306 260.071 545.481 262.266 536.876 264.1 cv
.580392 .580392 .580392 rgb
f
560.278 257.763 mo
558.591 256.763 557.025 255.575 555.613 254.231 cv
557.109 253.916 558.607 253.587 560.103 253.245 cv
561.25 254.459 562.512 255.563 563.873 256.537 cv
562.7 256.949 561.504 257.357 560.278 257.763 cv
1 1 1 rgb
f
563.873 256.537 mo
562.512 255.563 561.25 254.459 560.103 253.245 cv
560.106 253.245 li
560.864 254.048 561.673 254.803 562.527 255.505 cv
564.385 255.741 565.587 255.777 565.587 255.777 cv
565.035 254.528 564.76 253.315 564.702 252.15 cv
568.031 251.324 571.344 250.427 574.603 249.456 cv
574.569 252.451 li
571.305 253.804 567.733 255.183 563.873 256.537 cv
576.377 251.692 mo
576.408 248.909 li
577.352 248.618 578.29 248.321 579.223 248.017 cv
579.642 250.266 li
578.594 250.735 577.505 251.212 576.377 251.692 cv
581.333 249.498 mo
580.951 247.444 li
582.176 247.031 583.395 246.604 584.598 246.167 cv
584.62 246.76 584.643 247.35 584.667 247.925 cv
583.61 248.437 582.499 248.962 581.333 249.498 cv
586.438 247.054 mo
586.418 246.544 586.398 246.025 586.379 245.507 cv
588.659 244.646 590.895 243.739 593.066 242.786 cv
593.158 242.991 593.248 243.196 593.336 243.401 cv
591.48 244.448 589.173 245.69 586.438 247.054 cv
level3{
gsave
clp
[25.8911 0 0 25.8911 578.933 235.474 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[25.8911 0 0 25.8911 578.933 235.474 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
565.587 255.777 mo
565.587 255.777 564.385 255.741 562.527 255.505 cv
561.673 254.803 560.864 254.048 560.106 253.245 cv
561.642 252.894 563.171 252.53 564.702 252.15 cv
564.76 253.315 565.035 254.528 565.587 255.777 cv
593.336 243.401 mo
593.248 243.196 593.158 242.991 593.066 242.786 cv
595.063 241.91 597.006 240.994 598.891 240.036 cv
598.891 240.036 596.984 241.342 593.336 243.401 cv
level3{
gsave
clp
[-3.99567e-006 -91.4102 91.4102 -3.99567e-006 578.933 291.725 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.99567e-006 -91.4102 91.4102 -3.99567e-006 578.933 291.725 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
574.569 252.451 mo
574.603 249.456 li
575.207 249.276 575.808 249.094 576.408 248.909 cv
576.377 251.692 li
575.786 251.944 575.183 252.197 574.569 252.451 cv
.917647 .917647 .917647 rgb
f
579.642 250.266 mo
579.223 248.017 li
579.801 247.828 580.377 247.637 580.951 247.444 cv
581.333 249.498 li
580.781 249.752 580.219 250.008 579.642 250.266 cv
f
584.667 247.925 mo
584.643 247.35 584.62 246.76 584.598 246.167 cv
585.196 245.949 585.787 245.73 586.379 245.507 cv
586.398 246.025 586.418 246.544 586.438 247.054 cv
585.867 247.339 585.275 247.63 584.667 247.925 cv
f
511.559 268.016 mo
508.987 266.251 506.879 263.859 505.454 261.062 cv
505.458 261.062 li
506.64 263.379 508.291 265.417 510.284 267.054 cv
511.622 267.226 512.487 267.25 512.487 267.25 cv
511.369 264.717 511.831 262.394 512.885 260.456 cv
514.779 260.285 516.748 260.095 518.784 259.883 cv
518.701 267.205 li
516.364 267.508 513.982 267.779 511.559 268.016 cv
520.501 266.965 mo
520.586 259.691 li
520.954 259.651 521.326 259.611 521.698 259.569 cv
523.011 266.606 li
522.177 266.73 521.346 266.849 520.501 266.965 cv
524.792 266.333 mo
523.494 259.366 li
524.298 259.273 525.111 259.177 525.93 259.077 cv
526.035 262.013 526.17 265.274 526.27 265.916 cv
528.046 265.617 li
527.967 265.201 527.833 261.847 527.726 258.855 cv
529.295 258.657 530.886 258.447 532.501 258.223 cv
533.443 260.388 534.136 262.508 534.638 264.565 cv
531.458 265.209 528.173 265.803 524.792 266.333 cv
536.848 264.106 mo
538.459 262.057 539.654 259.667 540.299 257.059 cv
540.301 257.059 540.301 257.059 540.303 257.059 cv
539.663 259.663 538.478 262.052 536.876 264.1 cv
536.867 264.102 536.857 264.104 536.848 264.106 cv
level3{
gsave
clp
[18.707 0 0 18.707 522.134 252.583 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[18.707 0 0 18.707 522.134 252.583 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
512.487 267.25 mo
512.487 267.25 511.622 267.226 510.284 267.054 cv
508.291 265.417 506.64 263.379 505.458 261.062 cv
507.764 260.893 510.25 260.693 512.885 260.456 cv
511.831 262.394 511.369 264.717 512.487 267.25 cv
534.638 264.565 mo
534.136 262.508 533.443 260.388 532.501 258.223 cv
535.052 257.87 537.659 257.483 540.299 257.059 cv
539.654 259.667 538.459 262.057 536.848 264.106 cv
536.117 264.262 535.38 264.415 534.638 264.565 cv
level3{
gsave
clp
[-2.88624e-006 -66.0294 66.0294 -2.88624e-006 522.134 293.217 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.88624e-006 -66.0294 66.0294 -2.88624e-006 522.134 293.217 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
518.701 267.205 mo
518.784 259.883 li
519.379 259.821 519.98 259.757 520.586 259.691 cv
520.501 266.965 li
519.906 267.047 519.302 267.128 518.701 267.205 cv
.917647 .917647 .917647 rgb
f
523.011 266.606 mo
521.698 259.569 li
522.293 259.503 522.889 259.436 523.494 259.366 cv
524.792 266.333 li
524.201 266.426 523.608 266.517 523.011 266.606 cv
f
526.27 265.916 mo
526.17 265.274 526.035 262.013 525.93 259.077 cv
526.523 259.005 527.125 258.931 527.726 258.855 cv
527.833 261.847 527.967 265.201 528.046 265.617 cv
526.27 265.916 li
f
198.033 235.898 mo
206.431 261.739 li
191.155 274.649 li
188.121 274.636 li
69.4527 271.817 81.1786 228.2 96.6572 202.871 cv
111.524 178.538 191.763 231.69 198.033 235.898 cv
0 0 0 rgb
f
198.508 237.312 mo
206.898 263.152 li
191.622 276.064 li
188.589 276.049 li
69.9228 273.229 81.6523 229.61 97.1314 204.28 cv
111.998 179.945 192.234 233.1 198.508 237.312 cv
.16 .16 .16 rgb
f
103.896 235.472 mo
103.896 249.772 115.487 261.365 129.784 261.365 cv
144.083 261.365 155.675 249.772 155.675 235.472 cv
155.675 221.18 144.083 209.583 129.784 209.583 cv
115.487 209.583 103.896 221.18 103.896 235.472 cv
1 1 1 rgb
f
124.312 261.365 mo
116.658 261.365 109.779 258.043 105.038 252.762 cv
105.035 252.75 105.033 252.738 105.031 252.725 cv
105.503 253.252 105.997 253.76 106.511 254.247 cv
107.213 250.759 108.293 247.128 109.905 243.4 cv
111.761 244.447 114.066 245.689 116.803 247.054 cv
116.679 250.233 116.547 253.094 116.462 253.571 cv
118.238 253.872 li
118.333 253.27 118.456 250.782 118.572 247.923 cv
119.629 248.436 120.739 248.961 121.907 249.498 cv
120.344 257.89 li
122.117 258.218 li
123.598 250.265 li
124.648 250.735 125.733 251.21 126.863 251.691 cv
126.945 258.978 li
128.746 258.958 li
128.671 252.451 li
131.935 253.803 135.509 255.182 139.369 256.537 cv
135.824 259.076 131.612 260.743 127.048 261.222 cv
126.148 261.317 125.236 261.365 124.312 261.365 cv
143.138 253.245 mo
143.136 253.245 li
145.548 250.691 147.445 247.648 148.664 244.279 cv
147.445 247.648 145.548 250.692 143.138 253.245 cv
138.538 252.15 mo
135.209 251.323 131.895 250.427 128.636 249.456 cv
128.515 238.883 li
126.719 238.903 li
126.832 248.909 li
125.888 248.617 124.95 248.32 124.017 248.016 cv
124.623 244.759 li
122.851 244.432 li
122.29 247.443 li
121.062 247.029 119.845 246.603 118.64 246.165 cv
118.801 241.941 118.933 237.582 118.937 237.554 cv
117.137 237.501 li
117.139 237.51 117.013 241.498 116.863 245.507 cv
114.581 244.645 112.348 243.739 110.175 242.785 cv
111.511 239.794 113.193 236.741 115.298 233.649 cv
115.298 233.649 110.795 228.703 107.44 220.75 cv
108.443 218.089 109.607 215.622 110.864 213.346 cv
114.784 210.958 119.387 209.583 124.312 209.583 cv
125.236 209.583 126.148 209.632 127.048 209.726 cv
139.996 211.087 150.103 222 150.199 235.282 cv
150.162 230.068 148.575 225.223 145.886 221.176 cv
141.309 227.382 134.23 236.147 129.212 238.441 cv
129.212 238.441 138.939 244.173 138.538 252.15 cv
148.666 244.273 mo
148.67 244.262 148.674 244.252 148.677 244.242 cv
148.674 244.252 148.67 244.262 148.666 244.273 cv
148.681 244.23 mo
148.684 244.224 148.686 244.217 148.688 244.211 cv
148.686 244.218 148.684 244.223 148.681 244.23 cv
150.184 236.39 mo
150.184 236.39 li
150.184 236.39 li
150.186 236.348 mo
150.186 236.348 li
150.186 236.348 li
150.187 236.307 mo
150.187 236.306 li
150.187 236.307 li
150.192 236.144 mo
150.192 236.143 150.192 236.141 150.192 236.139 cv
150.192 236.141 150.192 236.143 150.192 236.144 cv
150.193 236.108 mo
150.193 236.104 150.193 236.099 150.193 236.095 cv
150.193 236.099 150.193 236.104 150.193 236.108 cv
150.193 236.066 mo
150.194 236.061 150.194 236.056 150.194 236.051 cv
150.194 236.056 150.194 236.061 150.193 236.066 cv
150.194 236.023 mo
150.195 236.017 150.195 236.012 150.195 236.006 cv
150.195 236.011 150.195 236.018 150.194 236.023 cv
150.195 235.98 mo
150.195 235.974 150.196 235.968 150.196 235.962 cv
150.196 235.968 150.195 235.974 150.195 235.98 cv
150.196 235.936 mo
150.196 235.93 150.196 235.923 150.196 235.917 cv
150.196 235.923 150.196 235.929 150.196 235.936 cv
150.197 235.892 mo
150.197 235.885 150.197 235.879 150.197 235.872 cv
150.197 235.879 150.197 235.885 150.197 235.892 cv
150.198 235.836 mo
150.198 235.825 150.198 235.815 150.198 235.805 cv
150.198 235.815 150.198 235.825 150.198 235.836 cv
150.198 235.789 mo
150.198 235.779 150.198 235.77 150.199 235.76 cv
150.198 235.77 150.198 235.78 150.198 235.789 cv
150.199 235.742 mo
150.199 235.733 150.199 235.724 150.199 235.715 cv
150.199 235.723 150.199 235.733 150.199 235.742 cv
150.199 235.696 mo
150.199 235.688 150.199 235.679 150.199 235.671 cv
150.199 235.679 150.199 235.688 150.199 235.696 cv
150.2 235.651 mo
150.2 235.642 150.2 235.633 150.2 235.624 cv
150.2 235.633 150.2 235.642 150.2 235.651 cv
150.2 235.607 mo
150.2 235.597 150.2 235.587 150.2 235.577 cv
150.2 235.588 150.2 235.596 150.2 235.607 cv
150.2 235.562 mo
150.2 235.551 150.2 235.54 150.2 235.529 cv
150.2 235.54 150.2 235.551 150.2 235.562 cv
150.2 235.517 mo
150.2 235.502 150.2 235.487 150.2 235.472 cv
150.2 235.487 150.2 235.502 150.2 235.517 cv
150.2 235.472 mo
150.2 235.453 150.2 235.434 150.2 235.416 cv
150.2 235.434 150.2 235.453 150.2 235.472 cv
150.2 235.472 li
150.2 235.404 mo
150.2 235.366 150.2 235.328 150.2 235.29 cv
150.2 235.328 150.2 235.365 150.2 235.404 cv
level3{
gsave
clp
[-25.8914 0 0 25.8914 124.309 235.474 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-25.8914 0 0 25.8914 124.309 235.474 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
106.511 254.247 mo
105.997 253.76 105.503 253.252 105.031 252.725 cv
102.613 240.042 104.182 229.382 107.44 220.75 cv
110.795 228.703 115.298 233.649 115.298 233.649 cv
113.193 236.741 111.511 239.794 110.175 242.785 cv
108.18 241.91 106.235 240.993 104.352 240.036 cv
104.352 240.036 106.259 241.342 109.905 243.4 cv
108.293 247.128 107.213 250.759 106.511 254.247 cv
143.136 253.245 mo
141.599 252.894 140.069 252.53 138.538 252.15 cv
138.939 244.173 129.212 238.441 129.212 238.441 cv
134.23 236.147 141.309 227.382 145.886 221.176 cv
148.575 225.223 150.162 230.068 150.199 235.282 cv
150.2 235.285 150.2 235.287 150.2 235.29 cv
150.2 235.328 150.2 235.366 150.2 235.404 cv
150.2 235.408 150.2 235.412 150.2 235.416 cv
150.2 235.434 150.2 235.453 150.2 235.472 cv
150.2 235.472 li
150.2 235.472 li
150.2 235.487 150.2 235.502 150.2 235.517 cv
150.2 235.521 150.2 235.525 150.2 235.529 cv
150.2 235.54 150.2 235.551 150.2 235.562 cv
150.2 235.567 150.2 235.572 150.2 235.577 cv
150.2 235.587 150.2 235.597 150.2 235.607 cv
150.2 235.613 150.2 235.618 150.2 235.624 cv
150.2 235.633 150.2 235.642 150.2 235.651 cv
150.2 235.658 150.199 235.664 150.199 235.671 cv
150.199 235.679 150.199 235.688 150.199 235.696 cv
150.199 235.703 150.199 235.708 150.199 235.715 cv
150.199 235.724 150.199 235.733 150.199 235.742 cv
150.199 235.748 150.199 235.754 150.199 235.76 cv
150.198 235.77 150.198 235.779 150.198 235.789 cv
150.198 235.794 150.198 235.8 150.198 235.805 cv
150.198 235.815 150.198 235.825 150.198 235.836 cv
150.197 235.848 150.197 235.86 150.197 235.872 cv
150.197 235.879 150.197 235.885 150.197 235.892 cv
150.197 235.9 150.197 235.909 150.196 235.917 cv
150.196 235.923 150.196 235.93 150.196 235.936 cv
150.196 235.944 150.196 235.953 150.196 235.962 cv
150.196 235.968 150.195 235.974 150.195 235.98 cv
150.195 235.988 150.195 235.998 150.195 236.006 cv
150.195 236.012 150.195 236.017 150.194 236.023 cv
150.194 236.032 150.194 236.042 150.194 236.051 cv
150.194 236.056 150.194 236.061 150.193 236.066 cv
150.193 236.076 150.193 236.085 150.193 236.095 cv
150.193 236.099 150.193 236.104 150.193 236.108 cv
150.192 236.119 150.192 236.129 150.192 236.139 cv
150.192 236.141 150.192 236.143 150.192 236.144 cv
150.19 236.199 150.189 236.252 150.187 236.306 cv
150.187 236.307 li
150.187 236.32 150.186 236.334 150.186 236.348 cv
150.186 236.348 li
150.185 236.362 150.185 236.376 150.184 236.39 cv
150.184 236.39 li
150.089 239.127 149.569 241.755 148.688 244.211 cv
148.686 244.217 148.684 244.224 148.681 244.23 cv
148.68 244.234 148.679 244.238 148.677 244.242 cv
148.674 244.252 148.67 244.262 148.666 244.273 cv
148.665 244.275 148.665 244.277 148.664 244.279 cv
147.445 247.648 145.548 250.691 143.136 253.245 cv
level3{
gsave
clp
[3.99582e-006 -91.4137 -91.4137 -3.99582e-006 124.309 291.728 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.99582e-006 -91.4137 -91.4137 -3.99582e-006 124.309 291.728 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
119.177 235.132 mo
119.177 237.214 120.862 238.896 122.941 238.896 cv
125.018 238.896 126.706 237.214 126.706 235.132 cv
126.706 233.053 125.018 231.371 122.941 231.371 cv
120.862 231.371 119.177 233.053 119.177 235.132 cv
cp
level3{
gsave
clp
[7.77351e-007 -17.7837 -17.7837 -7.77351e-007 122.942 245.89 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.77351e-007 -17.7837 -17.7837 -7.77351e-007 122.942 245.89 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
126.719 238.903 mo
128.515 238.883 li
128.746 258.958 li
126.945 258.978 li
126.719 238.903 li
.83 .83 .83 rgb
f
120.344 257.89 mo
122.851 244.432 li
124.623 244.759 li
122.117 258.218 li
120.344 257.89 li
f
116.462 253.571 mo
116.665 252.426 117.142 237.519 117.137 237.501 cv
118.937 237.554 li
118.93 237.605 118.489 252.285 118.238 253.872 cv
116.462 253.571 li
f
132.654 233.529 mo
134.936 215.739 li
136.722 215.969 li
134.44 233.764 li
132.654 233.529 li
cp
f
127.86 229.257 mo
128.771 214.428 li
130.567 214.54 li
129.656 229.37 li
127.86 229.257 li
cp
f
120.791 213.637 mo
122.587 213.511 li
123.723 230.165 li
121.926 230.286 li
120.791 213.637 li
cp
f
115.335 215.377 mo
117.089 214.966 li
120.053 227.513 li
118.3 227.928 li
115.335 215.377 li
cp
f
181.106 271.289 mo
175.122 271.289 169.794 268.476 166.37 264.101 cv
166.379 264.103 166.383 264.104 166.392 264.106 cv
166.962 264.83 167.583 265.512 168.252 266.145 cv
168.357 265.623 168.474 265.096 168.604 264.565 cv
171.784 265.209 175.067 265.802 178.448 266.333 cv
178.001 268.732 li
179.771 269.06 li
180.228 266.605 li
181.058 266.729 181.894 266.849 182.736 266.964 cv
182.765 269.564 li
184.562 269.545 li
184.536 267.205 li
186.876 267.508 189.257 267.779 191.684 268.016 cv
188.675 270.08 185.032 271.289 181.106 271.289 cv
197.79 261.062 mo
197.787 261.062 li
199.032 258.622 199.757 255.873 199.815 252.96 cv
199.757 255.873 199.034 258.622 197.79 261.062 cv
190.358 260.456 mo
188.464 260.285 186.491 260.095 184.454 259.883 cv
184.4 255.038 li
182.603 255.059 li
182.655 259.691 li
182.285 259.651 181.912 259.61 181.538 259.569 cv
181.58 259.342 li
179.811 259.009 li
179.745 259.366 li
178.941 259.273 178.13 259.177 177.311 259.077 cv
177.405 256.467 177.476 254.115 177.478 254.092 cv
175.68 254.04 li
175.68 254.043 175.608 256.319 175.516 258.855 cv
173.947 258.657 172.356 258.447 170.741 258.224 cv
171.731 255.948 172.995 253.621 174.6 251.264 cv
174.6 251.264 170.331 246.575 167.932 239.312 cv
164.539 242.681 162.424 247.351 162.405 252.514 cv
162.443 242.215 170.803 233.878 181.106 233.878 cv
191.395 233.878 199.745 242.179 199.818 252.448 cv
199.791 248.678 198.642 245.177 196.697 242.25 cv
193.392 246.736 188.275 253.071 184.654 254.728 cv
184.654 254.728 188.465 256.972 190.358 260.456 cv
162.947 257.06 mo
162.944 257.06 li
162.606 255.684 162.421 254.249 162.406 252.772 cv
162.421 254.25 162.607 255.685 162.947 257.06 cv
199.815 252.958 mo
199.815 252.948 199.815 252.938 199.815 252.928 cv
199.815 252.938 199.815 252.948 199.815 252.958 cv
199.815 252.923 mo
199.816 252.879 199.817 252.835 199.817 252.791 cv
199.817 252.835 199.816 252.879 199.815 252.923 cv
199.817 252.784 mo
199.817 252.775 199.817 252.766 199.818 252.758 cv
199.817 252.767 199.817 252.775 199.817 252.784 cv
162.406 252.771 mo
162.406 252.762 162.406 252.752 162.406 252.743 cv
162.406 252.752 162.406 252.762 162.406 252.771 cv
199.818 252.749 mo
199.818 252.741 199.818 252.734 199.818 252.726 cv
199.818 252.734 199.818 252.741 199.818 252.749 cv
162.406 252.74 mo
162.406 252.732 162.406 252.722 162.406 252.714 cv
162.406 252.722 162.406 252.731 162.406 252.74 cv
199.818 252.715 mo
199.818 252.707 199.818 252.7 199.818 252.693 cv
199.818 252.7 199.818 252.708 199.818 252.715 cv
162.406 252.708 mo
162.406 252.701 162.406 252.693 162.406 252.685 cv
162.406 252.693 162.406 252.701 162.406 252.708 cv
199.818 252.682 mo
199.818 252.675 199.818 252.668 199.818 252.661 cv
199.818 252.668 199.818 252.675 199.818 252.682 cv
162.405 252.677 mo
162.405 252.67 162.405 252.662 162.405 252.655 cv
162.405 252.662 162.405 252.67 162.405 252.677 cv
199.818 252.649 mo
199.818 252.642 199.818 252.635 199.818 252.628 cv
199.818 252.635 199.818 252.642 199.818 252.649 cv
162.405 252.646 mo
162.405 252.639 162.405 252.633 162.405 252.627 cv
162.405 252.633 162.405 252.639 162.405 252.646 cv
199.818 252.616 mo
199.818 252.605 199.818 252.595 199.818 252.584 cv
199.818 252.595 199.818 252.605 199.818 252.616 cv
162.405 252.615 mo
162.405 252.604 162.405 252.594 162.405 252.584 cv
162.405 252.594 162.405 252.604 162.405 252.615 cv
199.818 252.584 mo
199.818 252.571 199.818 252.558 199.818 252.544 cv
199.818 252.558 199.818 252.571 199.818 252.584 cv
199.818 252.584 li
199.818 252.534 mo
199.818 252.507 199.818 252.479 199.818 252.452 cv
199.818 252.479 199.818 252.506 199.818 252.534 cv
level3{
gsave
clp
[-18.7063 0 0 18.7063 181.112 252.583 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-18.7063 0 0 18.7063 181.112 252.583 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
168.252 266.145 mo
167.583 265.512 166.962 264.83 166.392 264.106 cv
167.123 264.261 167.862 264.415 168.604 264.565 cv
168.474 265.096 168.357 265.623 168.252 266.145 cv
197.787 261.062 mo
195.48 260.894 192.995 260.694 190.358 260.456 cv
188.465 256.972 184.654 254.728 184.654 254.728 cv
188.275 253.071 193.392 246.736 196.697 242.25 cv
198.642 245.177 199.791 248.678 199.818 252.448 cv
199.818 252.449 199.818 252.45 199.818 252.452 cv
199.818 252.479 199.818 252.507 199.818 252.534 cv
199.818 252.537 199.818 252.541 199.818 252.544 cv
199.818 252.558 199.818 252.571 199.818 252.584 cv
199.818 252.584 li
199.818 252.584 li
199.818 252.595 199.818 252.605 199.818 252.616 cv
199.818 252.62 199.818 252.624 199.818 252.628 cv
199.818 252.635 199.818 252.642 199.818 252.649 cv
199.818 252.653 199.818 252.657 199.818 252.661 cv
199.818 252.668 199.818 252.675 199.818 252.682 cv
199.818 252.685 199.818 252.689 199.818 252.693 cv
199.818 252.7 199.818 252.707 199.818 252.715 cv
199.818 252.718 199.818 252.723 199.818 252.726 cv
199.818 252.734 199.818 252.741 199.818 252.749 cv
199.818 252.752 199.818 252.755 199.818 252.758 cv
199.817 252.766 199.817 252.775 199.817 252.784 cv
199.817 252.786 199.817 252.788 199.817 252.791 cv
199.817 252.835 199.816 252.879 199.815 252.923 cv
199.815 252.925 199.815 252.926 199.815 252.928 cv
199.815 252.938 199.815 252.948 199.815 252.958 cv
199.815 252.959 199.815 252.959 199.815 252.96 cv
199.757 255.873 199.032 258.622 197.787 261.062 cv
170.741 258.224 mo
168.19 257.87 165.586 257.483 162.947 257.06 cv
162.607 255.685 162.421 254.25 162.406 252.772 cv
162.406 252.772 162.406 252.772 162.406 252.771 cv
162.406 252.762 162.406 252.752 162.406 252.743 cv
162.406 252.742 162.406 252.741 162.406 252.74 cv
162.406 252.731 162.406 252.722 162.406 252.714 cv
162.406 252.712 162.406 252.71 162.406 252.708 cv
162.406 252.701 162.406 252.693 162.406 252.685 cv
162.406 252.682 162.406 252.68 162.405 252.677 cv
162.405 252.67 162.405 252.662 162.405 252.655 cv
162.405 252.652 162.405 252.649 162.405 252.646 cv
162.405 252.639 162.405 252.633 162.405 252.627 cv
162.405 252.623 162.405 252.619 162.405 252.615 cv
162.405 252.604 162.405 252.594 162.405 252.584 cv
162.405 252.584 li
162.405 252.584 li
162.405 252.584 li
162.405 252.561 162.405 252.537 162.405 252.514 cv
162.424 247.351 164.539 242.681 167.932 239.312 cv
170.331 246.575 174.6 251.264 174.6 251.264 cv
172.995 253.621 171.731 255.948 170.741 258.224 cv
level3{
gsave
clp
[2.88624e-006 -66.0294 -66.0294 -2.88624e-006 181.112 293.218 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.88624e-006 -66.0294 -66.0294 -2.88624e-006 181.112 293.218 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
177.402 252.334 mo
177.402 253.837 178.62 255.052 180.119 255.052 cv
181.624 255.052 182.839 253.837 182.839 252.334 cv
182.839 250.836 181.624 249.615 180.119 249.615 cv
178.62 249.615 177.402 250.836 177.402 252.334 cv
cp
level3{
gsave
clp
[5.6165e-007 -12.8491 -12.8491 -5.6165e-007 180.121 260.105 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.6165e-007 -12.8491 -12.8491 -5.6165e-007 180.121 260.105 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
182.603 255.059 mo
184.4 255.038 li
184.562 269.545 li
182.765 269.564 li
182.603 255.059 li
.83 .83 .83 rgb
f
178.001 268.732 mo
179.811 259.009 li
181.58 259.342 li
179.771 269.06 li
178.001 268.732 li
f
175.196 265.619 mo
175.337 264.848 175.68 254.047 175.68 254.04 cv
177.478 254.092 li
177.474 254.141 177.159 264.705 176.973 265.911 cv
176.973 265.917 li
175.196 265.619 li
f
186.891 251.149 mo
188.538 238.292 li
190.326 238.523 li
188.679 251.378 li
186.891 251.149 li
cp
f
183.426 248.079 mo
184.083 237.361 li
185.881 237.472 li
185.224 248.187 li
183.426 248.079 li
cp
f
178.313 236.824 mo
180.108 236.697 li
180.936 248.729 li
179.141 248.854 li
178.313 236.824 li
cp
f
174.38 238.117 mo
176.136 237.705 li
178.278 246.77 li
176.527 247.186 li
174.38 238.117 li
cp
f
88.7008 223.459 mo
88.7011 223.458 li
88.7008 223.459 li
88.7056 223.439 mo
90.3687 216.576 93.6548 209.968 97.1314 204.28 cv
93.6556 209.968 90.3694 216.576 88.7056 223.439 cv
97.1314 204.28 mo
98.4481 202.122 100.28 200.575 102.529 199.548 cv
100.281 200.576 98.4489 202.124 97.1314 204.28 cv
.501961 .501961 .501961 rgb
f
107.097 260.966 mo
88.2996 250.67 85.5216 236.601 88.7008 223.459 cv
88.7011 223.458 li
88.7026 223.452 88.7041 223.445 88.7056 223.439 cv
90.3694 216.576 93.6556 209.968 97.1314 204.28 cv
97.1314 204.28 li
97.1314 204.28 li
98.4489 202.124 100.281 200.576 102.529 199.548 cv
104.968 198.435 107.898 197.935 111.194 197.935 cv
114.374 197.935 117.894 198.4 121.644 199.229 cv
118.242 202.562 114.221 207.268 110.864 213.346 cv
109.12 214.408 107.51 215.672 106.069 217.103 cv
106.068 217.102 106.068 217.101 106.068 217.101 cv
105.314 217.851 104.605 218.647 103.947 219.485 cv
100.549 223.805 98.4961 229.232 98.4201 235.133 cv
98.4201 235.134 98.4201 235.135 98.4201 235.136 cv
98.4197 235.163 98.4194 235.188 98.4192 235.215 cv
98.4192 235.216 98.4192 235.218 98.4191 235.22 cv
98.419 235.233 98.4189 235.246 98.4188 235.259 cv
98.4188 235.26 98.4188 235.261 98.4188 235.262 cv
98.4187 235.269 98.4186 235.279 98.4186 235.287 cv
98.4185 235.293 98.4185 235.298 98.4185 235.304 cv
98.4184 235.307 98.4184 235.31 98.4184 235.313 cv
98.4184 235.324 98.4183 235.335 98.4182 235.346 cv
98.4182 235.353 98.4182 235.36 98.4182 235.367 cv
98.4181 235.374 98.4181 235.381 98.4181 235.388 cv
98.418 235.416 98.4179 235.444 98.4179 235.472 cv
98.4179 235.472 li
98.4179 235.472 li
98.4179 235.472 li
98.4179 235.486 98.4179 235.501 98.418 235.515 cv
98.418 235.518 98.418 235.521 98.418 235.525 cv
98.418 235.536 98.418 235.546 98.4181 235.557 cv
98.4181 235.562 98.4181 235.567 98.4181 235.572 cv
98.4182 235.581 98.4182 235.59 98.4182 235.6 cv
98.4183 235.605 98.4183 235.609 98.4183 235.613 cv
98.4184 235.624 98.4184 235.633 98.4185 235.643 cv
98.4185 235.646 98.4185 235.65 98.4186 235.653 cv
98.4186 235.664 98.4187 235.676 98.4188 235.687 cv
98.4188 235.689 98.4188 235.691 98.4189 235.693 cv
98.419 235.706 98.4191 235.718 98.4192 235.731 cv
98.4192 235.732 98.4192 235.733 98.4192 235.734 cv
98.484 242.277 100.976 248.238 105.038 252.762 cv
105.544 255.409 106.223 258.143 107.097 260.966 cv
.580392 .580392 .580392 rgb
f
105.038 252.762 mo
100.976 248.238 98.484 242.277 98.4192 235.734 cv
98.4841 242.269 100.979 248.206 105.031 252.725 cv
105.033 252.738 105.035 252.75 105.038 252.762 cv
98.4192 235.731 mo
98.4191 235.718 98.419 235.706 98.4189 235.693 cv
98.419 235.705 98.4191 235.718 98.4192 235.731 cv
98.4188 235.687 mo
98.4187 235.676 98.4186 235.664 98.4186 235.653 cv
98.4186 235.664 98.4187 235.676 98.4188 235.687 cv
98.4185 235.643 mo
98.4184 235.633 98.4184 235.624 98.4183 235.613 cv
98.4184 235.623 98.4184 235.633 98.4185 235.643 cv
98.4182 235.6 mo
98.4182 235.59 98.4182 235.581 98.4181 235.572 cv
98.4182 235.581 98.4182 235.591 98.4182 235.6 cv
98.4181 235.557 mo
98.418 235.546 98.418 235.536 98.418 235.525 cv
98.418 235.535 98.418 235.546 98.4181 235.557 cv
98.418 235.515 mo
98.4179 235.501 98.4179 235.486 98.4179 235.472 cv
98.4179 235.486 98.4179 235.5 98.418 235.515 cv
98.4179 235.472 mo
98.4179 235.472 li
98.4179 235.444 98.418 235.416 98.4181 235.388 cv
98.418 235.416 98.4179 235.444 98.4179 235.472 cv
98.4182 235.367 mo
98.4182 235.36 98.4182 235.353 98.4182 235.346 cv
98.4182 235.353 98.4182 235.36 98.4182 235.367 cv
98.4184 235.313 mo
98.4184 235.31 98.4184 235.307 98.4185 235.304 cv
98.4184 235.307 98.4184 235.31 98.4184 235.313 cv
98.4186 235.287 mo
98.4186 235.279 98.4187 235.269 98.4188 235.262 cv
98.4187 235.27 98.4186 235.278 98.4186 235.287 cv
98.4188 235.259 mo
98.4189 235.246 98.419 235.233 98.4191 235.22 cv
98.419 235.233 98.4189 235.246 98.4188 235.259 cv
98.4192 235.215 mo
98.4194 235.188 98.4197 235.163 98.4201 235.136 cv
98.4197 235.162 98.4194 235.188 98.4192 235.215 cv
98.4201 235.133 mo
98.4961 229.232 100.549 223.805 103.947 219.485 cv
100.551 223.806 98.4959 229.23 98.4201 235.133 cv
107.44 220.75 mo
106.953 219.595 106.49 218.378 106.069 217.103 cv
107.51 215.672 109.12 214.408 110.864 213.346 cv
109.607 215.622 108.443 218.089 107.44 220.75 cv
level3{
gsave
clp
[-25.8914 0 0 25.8914 124.309 235.474 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-25.8914 0 0 25.8914 124.309 235.474 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
105.031 252.725 mo
100.979 248.206 98.4841 242.269 98.4192 235.734 cv
98.4192 235.733 98.4192 235.732 98.4192 235.731 cv
98.4191 235.718 98.419 235.705 98.4189 235.693 cv
98.4188 235.691 98.4188 235.689 98.4188 235.687 cv
98.4187 235.676 98.4186 235.664 98.4186 235.653 cv
98.4185 235.65 98.4185 235.646 98.4185 235.643 cv
98.4184 235.633 98.4184 235.623 98.4183 235.613 cv
98.4183 235.609 98.4183 235.605 98.4182 235.6 cv
98.4182 235.591 98.4182 235.581 98.4181 235.572 cv
98.4181 235.567 98.4181 235.562 98.4181 235.557 cv
98.418 235.546 98.418 235.535 98.418 235.525 cv
98.418 235.521 98.418 235.518 98.418 235.515 cv
98.4179 235.5 98.4179 235.486 98.4179 235.472 cv
98.4179 235.472 li
98.4179 235.472 li
98.4179 235.444 98.418 235.416 98.4181 235.388 cv
98.4181 235.381 98.4181 235.374 98.4182 235.367 cv
98.4182 235.36 98.4182 235.353 98.4182 235.346 cv
98.4183 235.335 98.4184 235.324 98.4184 235.313 cv
98.4184 235.31 98.4184 235.307 98.4185 235.304 cv
98.4185 235.298 98.4185 235.293 98.4186 235.287 cv
98.4186 235.278 98.4187 235.27 98.4188 235.262 cv
98.4188 235.261 98.4188 235.26 98.4188 235.259 cv
98.4189 235.246 98.419 235.233 98.4191 235.22 cv
98.4192 235.218 98.4192 235.216 98.4192 235.215 cv
98.4194 235.188 98.4197 235.162 98.4201 235.136 cv
98.4201 235.135 98.4201 235.134 98.4201 235.133 cv
98.4959 229.23 100.551 223.806 103.947 219.485 cv
104.605 218.647 105.314 217.851 106.068 217.101 cv
106.068 217.101 106.068 217.102 106.069 217.103 cv
106.49 218.378 106.953 219.595 107.44 220.75 cv
104.182 229.382 102.613 240.042 105.031 252.725 cv
level3{
gsave
clp
[3.99582e-006 -91.4137 -91.4137 -3.99582e-006 124.309 291.728 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.99582e-006 -91.4137 -91.4137 -3.99582e-006 124.309 291.728 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
154.992 232.334 mo
154.992 237.499 159.181 241.687 164.342 241.687 cv
169.508 241.687 173.695 237.499 173.695 232.334 cv
173.695 227.169 169.508 222.98 164.342 222.98 cv
159.181 222.98 154.992 227.169 154.992 232.334 cv
cp
.764706 .737255 .764706 rgb
f
164.342 232.334 mo
173.179 229.288 li
171.915 225.624 168.443 222.98 164.342 222.98 cv
161.669 222.98 159.261 224.111 157.556 225.914 cv
164.342 232.334 li
cp
155.913 236.359 mo
157.419 239.509 160.623 241.687 164.342 241.687 cv
166.79 241.687 169.009 240.741 170.673 239.21 cv
164.527 233.392 li
155.913 236.359 li
cp
.501961 .427451 .403922 rgb
f
200.343 268.696 mo
197.4 268.521 194.514 268.292 191.684 268.016 cv
194.256 266.25 196.364 263.859 197.79 261.062 cv
201.045 261.3 203.94 261.474 206.393 261.602 cv
206.898 263.152 li
200.339 268.696 li
.580392 .580392 .580392 rgb
f
191.684 268.016 mo
189.257 267.779 186.876 267.508 184.536 267.205 cv
184.454 259.883 li
186.491 260.095 188.464 260.285 190.358 260.456 cv
191.412 262.395 191.872 264.717 190.752 267.25 cv
190.752 267.25 191.622 267.226 192.964 267.054 cv
194.956 265.417 196.606 263.379 197.787 261.062 cv
197.79 261.062 li
196.364 263.859 194.256 266.25 191.684 268.016 cv
level3{
gsave
clp
[-18.7063 0 0 18.7063 181.112 252.583 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-18.7063 0 0 18.7063 181.112 252.583 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
190.752 267.25 mo
191.872 264.717 191.412 262.395 190.358 260.456 cv
192.995 260.694 195.48 260.894 197.787 261.062 cv
196.606 263.379 194.956 265.417 192.964 267.054 cv
191.622 267.226 190.752 267.25 190.752 267.25 cv
level3{
gsave
clp
[2.88624e-006 -66.0294 -66.0294 -2.88624e-006 181.112 293.218 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.88624e-006 -66.0294 -66.0294 -2.88624e-006 181.112 293.218 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
182.736 266.964 mo
181.894 266.849 181.058 266.729 180.228 266.605 cv
181.538 259.569 li
181.912 259.61 182.285 259.651 182.655 259.691 cv
182.736 266.964 li
level3{
gsave
clp
[-18.7063 0 0 18.7063 181.112 252.583 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-18.7063 0 0 18.7063 181.112 252.583 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
166.37 264.101 mo
157.765 262.267 149.937 260.071 142.965 257.763 cv
144.653 256.763 146.217 255.576 147.63 254.232 cv
152.791 255.32 157.931 256.256 162.944 257.06 cv
163.584 259.664 164.768 262.053 166.37 264.101 cv
.580392 .580392 .580392 rgb
f
142.965 257.763 mo
141.739 257.357 140.541 256.948 139.369 256.537 cv
140.729 255.562 141.992 254.459 143.138 253.245 cv
144.634 253.587 146.134 253.916 147.63 254.232 cv
146.217 255.576 144.653 256.763 142.965 257.763 cv
1 1 1 rgb
f
139.369 256.537 mo
135.509 255.182 131.935 253.803 128.671 252.451 cv
128.636 249.456 li
131.895 250.427 135.209 251.323 138.538 252.15 cv
138.48 253.315 138.205 254.527 137.653 255.777 cv
137.653 255.777 138.859 255.741 140.712 255.505 cv
141.567 254.803 142.377 254.048 143.136 253.245 cv
143.138 253.245 li
141.992 254.459 140.729 255.562 139.369 256.537 cv
126.863 251.691 mo
125.733 251.21 124.648 250.735 123.598 250.265 cv
124.017 248.016 li
124.95 248.32 125.888 248.617 126.832 248.909 cv
126.863 251.691 li
121.907 249.498 mo
120.739 248.961 119.629 248.436 118.572 247.923 cv
118.595 247.348 118.618 246.758 118.64 246.165 cv
119.845 246.603 121.062 247.029 122.29 247.443 cv
121.907 249.498 li
116.803 247.054 mo
114.066 245.689 111.761 244.447 109.905 243.4 cv
109.993 243.195 110.083 242.99 110.175 242.785 cv
112.348 243.739 114.581 244.645 116.863 245.507 cv
116.843 246.025 116.823 246.543 116.803 247.054 cv
level3{
gsave
clp
[-25.8914 0 0 25.8914 124.309 235.474 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-25.8914 0 0 25.8914 124.309 235.474 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
137.653 255.777 mo
138.205 254.527 138.48 253.315 138.538 252.15 cv
140.069 252.53 141.599 252.894 143.136 253.245 cv
142.377 254.048 141.567 254.803 140.712 255.505 cv
138.859 255.741 137.653 255.777 137.653 255.777 cv
109.905 243.4 mo
106.259 241.342 104.352 240.036 104.352 240.036 cv
106.235 240.993 108.18 241.91 110.175 242.785 cv
110.083 242.99 109.993 243.195 109.905 243.4 cv
level3{
gsave
clp
[3.99582e-006 -91.4137 -91.4137 -3.99582e-006 124.309 291.728 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.99582e-006 -91.4137 -91.4137 -3.99582e-006 124.309 291.728 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
128.671 252.451 mo
128.058 252.197 127.454 251.943 126.863 251.691 cv
126.832 248.909 li
127.432 249.094 128.032 249.276 128.636 249.456 cv
128.671 252.451 li
.917647 .917647 .917647 rgb
f
123.598 250.265 mo
123.023 250.007 122.457 249.751 121.907 249.498 cv
122.29 247.443 li
122.863 247.637 123.439 247.828 124.017 248.016 cv
123.598 250.265 li
f
118.572 247.923 mo
117.965 247.629 117.373 247.338 116.803 247.054 cv
116.823 246.543 116.843 246.025 116.863 245.507 cv
117.452 245.729 118.045 245.949 118.64 246.165 cv
118.618 246.758 118.595 247.348 118.572 247.923 cv
f
178.448 266.333 mo
175.067 265.802 171.784 265.209 168.604 264.565 cv
169.106 262.508 169.8 260.389 170.741 258.224 cv
172.356 258.447 173.947 258.657 175.516 258.855 cv
175.408 261.847 175.272 265.202 175.196 265.619 cv
176.973 265.917 li
176.973 265.911 li
177.071 265.273 177.206 262.012 177.311 259.077 cv
178.13 259.177 178.941 259.273 179.745 259.366 cv
178.448 266.333 li
166.392 264.106 mo
166.383 264.104 166.379 264.103 166.37 264.101 cv
164.768 262.053 163.584 259.664 162.944 257.06 cv
162.947 257.06 li
163.59 259.667 164.782 262.057 166.392 264.106 cv
level3{
gsave
clp
[-18.7063 0 0 18.7063 181.112 252.583 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-18.7063 0 0 18.7063 181.112 252.583 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
168.604 264.565 mo
167.862 264.415 167.123 264.261 166.392 264.106 cv
164.782 262.057 163.59 259.667 162.947 257.06 cv
165.586 257.483 168.19 257.87 170.741 258.224 cv
169.8 260.389 169.106 262.508 168.604 264.565 cv
level3{
gsave
clp
[2.88624e-006 -66.0294 -66.0294 -2.88624e-006 181.112 293.218 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.88624e-006 -66.0294 -66.0294 -2.88624e-006 181.112 293.218 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
184.536 267.205 mo
183.934 267.127 183.331 267.046 182.736 266.964 cv
182.655 259.691 li
183.261 259.757 183.859 259.821 184.454 259.883 cv
184.536 267.205 li
.917647 .917647 .917647 rgb
f
180.228 266.605 mo
179.631 266.516 179.039 266.426 178.448 266.333 cv
179.745 259.366 li
180.348 259.435 180.944 259.503 181.538 259.569 cv
180.228 266.605 li
f
176.973 265.917 mo
175.196 265.619 li
175.272 265.202 175.408 261.847 175.516 258.855 cv
176.117 258.931 176.718 259.005 177.311 259.077 cv
177.206 262.012 177.071 265.273 176.973 265.911 cv
176.973 265.917 li
f
201.843 273.377 mo
353.283 274.245 li
355.7 274.229 li
358.185 274.245 li
358.146 274.218 li
502.086 273.381 li
496.64 268.779 li
207.286 268.779 li
201.843 273.377 li
cp
0 0 0 rgb
f
205.112 242.25 mo
206.391 246.194 li
497.532 246.194 li
498.815 242.25 li
205.112 242.25 li
cp
211.165 260.896 mo
492.759 260.896 li
494.919 254.24 li
209.003 254.24 li
211.165 260.896 li
cp
f
352.315 333.974 mo
352.218 333.974 li
352.127 333.974 li
343.863 333.991 276.056 334.097 212.843 332.455 cv
218.201 348.309 233.392 381.003 267.895 382.38 cv
298.729 383.613 338.316 383.804 360.738 383.799 cv
383.167 383.804 422.748 383.613 453.584 382.38 cv
488.453 380.985 503.598 347.618 508.803 331.955 cv
441.307 334.117 361.333 333.996 352.315 333.974 cv
cp
.0117647 .0117647 .0117647 rgb
f
360.057 376.22 mo
313.759 376.22 274.535 374.854 246.887 373.482 cv
244.723 373.377 242.639 373.269 240.618 373.165 cv
241.341 373.677 242.081 374.173 242.839 374.646 cv
270.663 376.083 311.465 377.589 360.057 377.589 cv
408.004 377.589 449.592 376.12 478.562 374.705 cv
479.316 374.229 480.061 373.736 480.783 373.226 cv
479.069 373.314 477.313 373.396 475.504 373.482 cv
446.715 374.854 406.347 376.22 360.057 376.22 cv
cp
.196078 .196078 .196078 rgb
f
360.057 368.009 mo
313.759 368.009 274.535 366.639 246.887 365.271 cv
240.986 364.98 235.619 364.688 230.823 364.407 cv
231.265 364.899 231.717 365.382 232.179 365.858 cv
259.658 367.433 304.825 369.377 360.057 369.377 cv
414.25 369.377 460.309 367.506 489.22 365.948 cv
489.681 365.468 490.139 364.991 490.583 364.504 cv
485.996 364.754 480.962 365.012 475.504 365.271 cv
446.715 366.639 406.347 368.009 360.057 368.009 cv
cp
f
475.504 340.633 mo
446.715 342.008 406.347 343.375 360.057 343.371 cv
313.759 343.375 274.535 342.008 246.887 340.633 cv
233.382 339.968 222.661 339.303 215.21 338.791 cv
215.4 339.255 215.601 339.728 215.801 340.204 cv
238.937 341.771 291.817 344.742 360.057 344.742 cv
426.092 344.742 480.054 341.958 505.615 340.361 cv
505.82 339.886 506.011 339.415 506.199 338.953 cv
498.513 339.439 488.125 340.037 475.504 340.633 cv
cp
f
360.057 351.583 mo
313.759 351.583 274.535 350.215 246.887 348.846 cv
235.594 348.288 226.24 347.729 219.124 347.267 cv
219.368 347.735 219.612 348.211 219.873 348.688 cv
244.774 350.299 295.55 352.953 360.057 352.953 cv
422.757 352.953 474.57 350.444 501.53 348.82 cv
501.782 348.351 502.035 347.881 502.278 347.408 cv
495.109 347.845 486.098 348.344 475.504 348.846 cv
446.715 350.215 406.347 351.583 360.057 351.583 cv
cp
f
360.057 359.798 mo
313.759 359.798 274.535 358.428 246.887 357.058 cv
238.081 356.623 230.455 356.188 224.15 355.799 cv
224.469 356.276 224.787 356.749 225.123 357.229 cv
251.52 358.85 299.798 361.168 360.057 361.168 cv
418.894 361.168 468.148 358.955 496.271 357.345 cv
496.604 356.871 496.932 356.395 497.252 355.914 cv
491.041 356.276 483.754 356.663 475.504 357.058 cv
446.715 358.428 406.347 359.798 360.057 359.798 cv
cp
f
498.979 381.011 mo
521.168 378.095 549.16 372.334 562.493 368.652 cv
565.714 367.764 568.955 366.864 572.353 365.967 cv
581.867 363.452 588.578 358.803 592.307 352.151 cv
596.373 344.879 596.2 336.541 595.518 331.376 cv
582.511 333.741 558.851 335.417 531.133 336.608 cv
528.542 347.44 525.668 373.825 498.979 381.011 cv
cp
.0392157 .0392157 .0392157 rgb
f
518.208 369.686 mo
524.854 356.938 528.77 345.279 531.036 336.643 cv
557.057 335.476 576.322 333.99 588.446 332.212 cv
588.555 336.557 587.93 341.667 585.383 346.205 cv
582.226 351.855 576.364 355.843 567.965 358.062 cv
564.869 358.881 561.893 359.703 558.953 360.512 cv
558.065 360.756 li
546.411 363.979 535.321 367.043 518.208 369.686 cv
cp
.0784314 .0784314 .0784314 rgb
f
524.675 355.687 mo
546.02 354.024 565.392 352.233 582.08 350.54 cv
582.563 350.052 583.002 349.545 583.429 349.024 cv
566.582 350.744 546.933 352.57 525.231 354.267 cv
525.042 354.744 524.872 355.204 524.675 355.687 cv
cp
528.311 345.79 mo
528.149 346.264 528.005 346.719 527.838 347.203 cv
550.17 345.425 570.255 343.522 587.246 341.762 cv
587.391 341.287 587.523 340.817 587.633 340.343 cv
570.692 342.108 550.627 344.01 528.311 345.79 cv
cp
.196078 .196078 .196078 rgb
f
207.184 381.011 mo
184.995 378.095 157.003 372.334 143.67 368.652 cv
140.452 367.764 137.204 366.864 133.812 365.967 cv
124.294 363.452 117.579 358.803 113.854 352.151 cv
109.789 344.879 109.96 336.541 110.64 331.376 cv
123.654 333.741 147.308 335.417 175.026 336.608 cv
177.616 347.44 180.494 373.825 207.184 381.011 cv
cp
.0392157 .0392157 .0392157 rgb
f
187.95 369.686 mo
181.305 356.938 177.393 345.279 175.126 336.643 cv
149.106 335.476 129.841 333.99 117.711 332.212 cv
117.604 336.557 118.235 341.667 120.777 346.205 cv
123.939 351.855 129.801 355.843 138.199 358.062 cv
141.291 358.881 144.266 359.703 147.207 360.512 cv
148.094 360.756 li
159.75 363.979 170.839 367.043 187.95 369.686 cv
cp
.0784314 .0784314 .0784314 rgb
f
180.932 354.267 mo
159.228 352.57 139.577 350.744 122.731 349.024 cv
123.155 349.545 123.598 350.052 124.08 350.54 cv
140.771 352.233 160.147 354.024 181.486 355.687 cv
181.291 355.204 181.119 354.744 180.932 354.267 cv
cp
118.526 340.343 mo
118.638 340.817 118.771 341.287 118.915 341.762 cv
135.903 343.522 155.989 345.425 178.32 347.203 cv
178.156 346.719 178.011 346.264 177.854 345.79 cv
155.539 344.01 135.472 342.108 118.526 340.343 cv
cp
.196078 .196078 .196078 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 16.0.0
%%For: (Robertas) ()
%%Title: (white-vector-car.eps)
%%CreationDate: 1/26/2016 4:25 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6CQBdNOWaM6Jc62Q`INpU*FpqIHl.J>c?".ER^$;Im*9(F0RBP'h7HRoct\R/gg>Qkboi3qcDdu;=L,!+;H:'o0_pN4]H_n!
%ZbqP?hLGLlr>uLkrnh'HI*m0.iJ[=^G/HZeQe/Eip9XeqmPf(!Y9+[+F17)=?c65T;BOimYZmuEKFc>>f_#h@H2@$\&)Y*Ls68,W
%5CE.tqsTRf^A79gqd2N,s5VB$LOX^C#PcK3L]@2DRr:Lgl/D-VS$2fEHtNBhl$&J<hn6XMq"X6G:ClKgUX%hBo\k;q*^0`0i:#/[
%rU(cAKs'=IrU^CC#@lfS5Pr^_+8dX_QeKdcf5KOFiSF7#5/-jbm_er%r<n!prsp=brS+g=^#;2k@)%*QU&>u1pi(QVq_p`eo82B#
%OIq,35Q0RBL\Q??Ie=`THr$@QiC,o;:)a/5T<1K8(Hqba+'\c"^P<%R$%C4(Iso1X"FabF*b'^c#PgX"H3*a;S0j(Sps3lnrU-.6
%TAJ!.L=H$;I0=_b:H4?G"LF!mI\_Ys+!YmLF895$rqj=:J,89EIsq4VlaIttr:V3srV#(I#Nmpf*I^ZUDgqKDmDj^%s6^P:e4=uq
%DuDnLq"jA:Yd"&qb;XA'0\s>(s74)m^\RY[\"<XM5CE&)mee`o>Q3lBDng\k+)_b:H?mW9^3fbVT0N6tRckR2#bW."nR78o2c&\3
%gPt5Q_81j$@Hiss'^SIgLM=dX0>PtS/:G]pBCfm=_I%_=pP3t]J,)Osa5,)Crd6H9Ddf&H!S+sbq!RGVWDe&/q1#cYh<_ilrK\26
%IXM"ap:W)X&&14*UP&A[pQ*).=e+B!IJiRd*mFBRcN?H0HU*7&55[_GRf>['K->^=:6n<h^\ao>n:>fPET#HPre^Y5s6eLrquD6E
%qi;hJq!K6\s8Kq%=$PSlrScYj55b/a?[_e?&WZ_RLL:#7s+,[tio0'RNt;9gn]b,h#5m5IftD\*h(NXS#j_E`p4<5NT;@%Scemd/
%HTht]$MR"2J:#W2s8D=D+22du>L/f5?U+IL2]ofHBCK8XoB-"@Nt:jf)uIg&rsjO("'_']c[C!H$W-I9C_D/PSuH%9jT5+R]3b0m
%di[PGIJa$0mqm1GB/Ou&]P#=Crl;MJp>MKbhg]DDqB#P4cImVlqsjWghX`Qgrp]k.+9))RLMu`Qn,r6ZI)mBonRm;-0<p::07Z:d
%GR$IIq<"/jJ,&g$]0F%,W\o7cn+NK8ce\go?dZ$chH9d!?FKjOO6Je77-Cc2_<&.WelSL>m@W6_qWa,\^&6X*2]pqj]n))d]YAsj
%*_>e<Dh!$+l"rVf&)VhkSD1r"s7k_<m)CD+m`@S/qAg+Q:B8-(iq9AEE-UgX`8?&loCY2<0>Do0q7jRls5mOqq>VRC5V?K<AiF]a
%LTb("qHpF5rS?d@LB+HSem[<?W1BoYh![aJ#AO+T58S#)IY'KGJX>":r!EC!qm[`@"o3Z#pX$M5K&=r#cq_cH^5pG<L0<_eL,M=:
%TqqqFXX-:QQE^!SLYq]751B7?50aE0hW'CRH(O/\^([^cE?=6rp[m99(\g0]4&)X)YGU?%J@:6b^uNm#NR6)fTaaqfH>),ZTlu06
%)NW5T\1F!]%$-GOV\5[4@i3,L=(=I<A!\gp:?`&OOC7Vc-BcB%?P2"R!jk/anH/(t:XG-K%aao/@@R<-)M,GO&)c%N"10\(_Zea3
%g'QIFg&]oV=9_mi!7Mus.Kd=mJ<(-6'qf\:(G=4_Y@!!)3/&Ru3$*hPIgL1H-&7U$:68e<*tJ(r6gLuL(MN"27.#ftodfm\i'W:S
%0@XTK[#P#T/Q%GU#&6FBIs'OQ^ZmH$cJ=?2;;+=i?J8;bg"KsG%g:gQI\p_8Xpmf-<U4^Y&c&nKqgoD=s70M&9+1+@)qH1hc&?k"
%Di$/"$Jm5WASaF@[Qt"c@Z3[%>6rhm`AbZAhXIW\9KO3-m/bQ,Jo(eOKPdo"&[i.+D1H=:_D]?=,N7?MfJX>=NIkl'D&n.`a0c"u
%"&:#J/VIss?s=h&MZBW1F,FmKBT-q$fRO'O1Z#r@%.a\?4?,>$_G5%\Z0q\&\&SXSf$0(tKQi5?4lY::JaYC&T&SN;2YJ7q#Ju/Q
%h?5JL*TeN,/,#Ou)mKqD04Wp,fU)+=?3jZ%i8YD'O7BESn;f;cs*lH$%l%uUR"t\`$3/p1J_spjIi7t^!OH1,@G_t%O8*oO0_*(`
%#k3-c/6q3[j5;*u3&;$o/il*7%IXQ1@Dicdis%EmR+W;C/tDbo@]A?,;n?;Dk$n+0B'^194?*cA1_5'K*WhW;KSP,]<W%^+GS+1K
%S4%`e#WC]BOnOchQ%S!>rZ?.N!gF5cncTeT'YIZV.ne)Sgr++6TKp#DR!Hf`$(-!G=pS6A#^.sd9SB+Q?mpC)INk(!KduMI1=#BK
%pc/q8-GWEPNe!rH@B%;p^#8*F=IP1,&rsj/'h=NM16*Q$>RX7]Ng;Mb0X\^D"5p-+a#01",QUOQ7sh"o4lRl;T++_[R8sr\.]1K+
%Plsc,/6+a!?qP3,=j]isX,<Z":FuTRpDYrqUm0o>XXW>hY]SN229fstk[,<&&#[;G:iAB?@%_i(DbiVsB:tn0%_Et0>Qb.kf/s.a
%/O\h)EKE\`A/"KjN#=lR!>cNE;$lGa:Gh<(Zj8\,82-%MHkIK]iHGj#4V:CkKR8U[OYB_-)Fu:miR!rF$OgSJ>msMe^sOPhr#h*L
%APNSUj[='M+^luuhk,)h7&s6#0'GO]jBb=RgDNknPj[-+\*X=F^X-hFKUWisB`Li>('EJeV#,OkgO5b7s%!j^JijuLL&ksU,+8Nh
%JG?c?d?>5?Q4&7k&(ilR"WE5-7(S$cl3K@s6HV_R/.g,FM8kOnN@s7_n/eRfM.koQ\QC*h6ou&RPS6pF"`B8$;;;g^?][ZI.Re58
%$E]nMI`!/aVEpLhAQku"5j_/*7I!)KDk;VP5`T7rro"uI4`V8RPcfl;+K6<)P"9To8dH)%$]@RD#EU<.cqq0c&Ac0J"Bj1S`DO,c
%'.sg`8RsQ;=htUL<Iror#jl^n6b=<j6unC-+`!!015`G0lqqH9A]%trJgA4k8+GmJm7[t6P2h7P(D9@b^IZ4=1r^b"NRUd@V_'%r
%MC*e(.@b(E'7QLO?*M"k77<7jaYOP%1C;?>@O]SJ17X2t3Km(n9FMXlBP11dS8!7]R3[a40@6m1[u1gV9.s"mmE6V(>"dF;e9V"M
%ISSI+f,!!376=K9QlD"*^R^h\I%rR5@)S$X`DYc@L]b5KXc0;"fIFC'fLf<X_H4Y*N3/&>)-[t['jDPW)-[t[&R0gi,&CP@@qAn.
%YAc?^#$1gu$!T?.2;F+j7#V.F!DA'dm>S(ZiTam^H8Jm?(p5Wk%L&_)MQ)-&J?+F(Vl+#S@-O)0b@BgV"]H5Te:V2pa^aW%<reIj
%KrOh,l*A<-^s_97ii->M;t9K5N2:aYkU&_E*&WT\=R'nuE!&THO/#0A#E]dYSrseUEV*d$g95I;(*#JRi+QYI.Ti-Zo[oh7_dho0
%aS.!@hPR2<5u/k(:BaBINjc06$V.\1eDk5WU8H%OFLk(=:J+>3/:@_;C:&'j95>N\L8A`jqU<@1q!bWI*BoW`#/)"nZ3*+*J`!+>
%h$JO3p)^pQg+/0q?%0k;i=guF2C>E.k\^K#m+N4#k_HVUc@f0dn%G[a=LH2L5#qh>,^?%UJlRY?;*5%[F.eC''pf:ZD'<Hs@K@r>
%cZFa2FFgQtYbPK4rqc1%(i6H2)6mR&nFA%^0"nXe_EsP4ZP14Lo+e*'CF-[d[/OAGQ%Q%q8)&ejp42nr`&duRhr/bi@Q!OCOSrQ%
%mS!s4h%<]f?=Zj_fD8BMll]+^0))omJ.8;PbPSW[f&]fe=M(/Q0GUb-J1?+_;*X=1c_=g]OA\a'*il\%UbY;+a,sFuGCq8W2+6*n
%@I6bBiWa5o*>kg,2at^1[6O3I7lOnZ["Ah>[F;73f,S+N8%LbUFLf\=oo=,K8%>_llL$;Gh2,dSmd^-<!&7T35YOEs&eGW,;]mCf
%Le@sT,$d//&NTn`>)5R@5d1l_Y5q0s:HHc/%!2QFG5q]S!'-R*3$oc4"'c*0&_7GU3Whf4!dWT(WL\V,,)_tA&.`=@m`;V\,,<ju
%%+q>BXOV"(k%QSE?X<Q#eiqR:7p5^SCZj6?M:h@PH1_i593Am/4g4iaXF@0Mh`"T^laPCH$dd;dfBZeIriYp4XSoZ6p=@>E<tB)-
%ea!+d0CJ2ooP+!kl.c&Cm<&=qcWf_MG5f`,.#9\GJ[cOBF"U:!kG`JL87LKci_#kuc+OrN7s5mQ`]&^9j@%"MfpOFEQn-MD-?((P
%aQs<XJX"7@'Q@Sq!&JesOeXi[jDec%:L`VXg!%Oeeep$#;b#6S,c6E7Oq:!6Ql_9"BOE<njooZs:t7>W,[2U;Kf/]\momDC8XqDZ
%2?A^J=H,t3m3!@4HJV(M`4V#be2saTZ#m!:U6Hb@:t1nq#[##S2b-`mX4%3@K%+3qbs/_5P:>hJd).1OUjl[D[Qf[9k?t/f^U$N*
%2S-Tp8paUeDc-hsBA$GDgUt/RH8DfJ$e+rSmBJu,n3s_-%&kK!dobrkIcil6DhZ]>HRrcML0*3og%IGWqcpY-W%!+kD_eF,gnkLj
%`+KXrA]D(C@^6^1&T85=%YBJa0QMN4bq.>cfdb"+n#G9OBn.?8HIf8A*=)/6&aeEtQ%17c##tk`,2f+d!)_3V-/Bi`s$6d;(A\+^
%croEO74#EeK)S1QEJ"qnB2Xu#lAa;2-HluGaFg]hK)BEdr)$GP(D>G)?rr&N$L'%3Mc_Uk3"+`e6a-jA_DdD/.W2SSI5/R,`G$'\
%<GY\j=bPd,r,k?.mIS$'XS]ZDbIZ$m0(V:(?06PVZ^N]=ZKuX5R,C0/Z=IlGP-ZT-<%XgO&QOO`U6:`_VY%C+c_ncH&'qN,=*D*.
%jDp#WON`S4f]Nm1n)*03mBOJ_nm8QH>Hllj/4Y9Q8RVAZ/e_T:".Eqr1GnD]f=QG!5'uD7/e+mM=m"NAj>\Yt<e!CM9,UeF*`C\m
%-(?"9]Gja5($_9(cd>k,!Q/2P\&2/;\tAg0:KHnZ%JSefndd)2m6qJY3noL=?l/Bh/N'tB6Xu&Ng:cceiTdq7qak.GpA+j4i*B^@
%"dgg?LaJQZFqiYW&_^6-TunD,8frkc;6BJ9Xd97SaK'[uj9'dMeg%To:@p];B)5'`<P9OPXI$A`cD4q=g2g.JR%cms/Yc68WNAhV
%b;6"oJXJu?TCsXR,ka6&]kX%gL=N>uk,9!r:,,T?kA@2I8-*Bf8Z)2:'qhRSZDoFU\QI+o.NVXYTPBCdMWT9+roUKX1cHLtoe0[n
%cV?W/#P"n]baVjca_.n$N.n4NK&2p.k>^+*U0bS`l4Hs31S)a"f?^o^Oo+3eF6hM6ok_`c?s\,lX'"ZM>0_;4Xu=b_]ANMXq\eSq
%SRogcq8,h3\)OdKg\#r4cF._@UO$0`=+>p)J)C\nUpUiKm!\G)410"\$+9!rU1N_fRHtL;p\$8)/m/G0;$SU8oZs<?RI+@[*8.N>
%AkI"_9s+*>J)S)/?oh`WhW!dos2k-o\+aO<XUO3hkp14fUK6R%XNg60E[U#q2i5IIEZiG6^$%,0::d#j$6)Ou.\mI#2%S]$-\2jR
%I@cu[p*)-AlB7KV-Cq\`P0=6eI'E@21;1h[I4aEf26LSRoenpjOY0Ybgk9,H-AC.nr%+SD^GUdA@IE(OGhNR5(1+Z;_Q7&X-BE"t
%!3a71T7sgc0dRE)2\R]c+9q8(RH*;of7bS^2]]5-c/<s\rrG?:gN0l(D_Hg%>'RZh*GEY^XJ;3&/U*mG#H+(K9$O4\286?[c-]g0
%G2p)_8N`.HAoo72$NOC,JEG*-9SM0L_WJ<@)-bD)MmI%;ZkWhn)h6eV".e8a)[7bfi$,MoAY.Q(:O3WRhogsSoR5,4MfG[3he\fX
%@^#1]S3jVjfi3+`]Sat51QuBZoHFGfUO8Z`6"WRJ9:8eOf-&)WkYR/DlR1)\0;;BH91hu.X*0_[C!t7`6<a#uMX^HWC!oXI!o"@3
%RQqd6eZ#038g]#jVt49AWL-\^iNI&ZC>%![_44KBn*N2>b<HOVp#=6akB>RH;nZ,=AsFjH"1gI&]8O-]ZtJOqD'_F?D;ha<8<1:g
%^j$_;=0`GW[iaQ@JDlC/L<-n(gHD?YSTH"HgL7#Ll[M$Eq<n2c$H;1G,j3F$R).js#1N^g^6%"<ld>TqRj$O4g!\Vu@.Na$ZZcO)
%XP<#>87E`u<@AK[?tH(*>pFYijK$gh2.<ni>.cl#h]&[-ejd$;=1@:eeSR?2+'U6!cpV[C?IioCHs8o1bto$m'Y=HS_7crpat!<-
%$8Kd;$p:A+_^\GG$08-aYG6+tA#h_nJA!kn.W6^/PI8:i%DLV0H<\oY45Z^9Y`5!XiPI4M2^P[RV.JH8`Aalm2f.KLRr)9HWtfm5
%FF=V#<Od15X6E2(;0*aZ<mk4\XM>4K[Mi@9gK)(*Y2Za$W?sY,'I?uKYBhZT/CjEmcrsf\raag;PUrJ!+/A?'KoBNmW,.7[+_)^Q
%\>Qe&<MO&/.W0Q>Eq28]Hbq;Yl_hm<N[72%0=N]%Q:CGnn>MIMC2a;aP!mEUR)R1[8>::-KLdgJl3s6Zd[SpB`VW\G8lU4S<#Jbt
%Cg+kuffM(f31Hd81JRbUQ>^s8/Dgj(4ICpa3ob[NGOiR.XBaW%jXj`j-BKf3-YLsRYmBi.1b6A8&BRURBY8!D9iKNP@rLCO_)kjF
%?snnQ]^t"S9q/2)D`fW@c@&XP,O7ftB\WCS9%L(KblO95?r[s-6CcT_W;0<.\4tMBWHiSLG+RGLQi;]5F7A1]$@eoLGj/R:HP[1F
%]+-`Lq6.ZIn4oG/gJ?Xn]KbL!aZdOs\l1$4c/aMFL#P8OD+DYBAArXDgeSI^<&c!5pq1O>MP/Wa0aK.kKG3?NgQrmchE*uBk(O/F
%mSR4a9-HOPSj^=@Oq^99oZR1md!hM75>s[C46$L>_2n/>YS2,8AKOq/&*41%$kED,GrHS#:(hltS=t5._N'T9J[80*$h;e!`T@#_
%IBV0kq^=(3lCt2NibWLiUU_k;_]H&`R1W8]/A!KG1"$GmV;Qdq@O,1\fn$Eq`-7b0@)fu:3H.tU(q.:In(*N#pLLNlR>O-.KG6pG
%fp0^Rmmo;5Sp`%f'")MQmYnHVQR;U=_#R@qigrioNcDXO8%,($'2GPJa\%uupVa+"=<V^d(s/3m?Fr@HVKfL!']FMBG@a3dEZFi`
%V74F#Vd$1c.[&T!UA6/uPo=u3MfM8*qM6Ldj123?;bKuPN:@f;eO&Hlj9>QG(B0DYR%a$'Eu"rV'Yc/1<boZ_j(Cafn+gaYYaJ0d
%]NA.Xb5&t8ko<V<L%il_Flq(%rk!3lM!"8k3V"bNS?,E"E)'>Zk]T=ck+RQ;_D:cjHb'\#*FOn'pa$(@,tp&P1VafKBmBspoCT9Z
%]/0slPP&`ZZI0/QS-Jh/QtQCYbbSe8G"YNb17,a,*N!sR4Y#<CLUc^10F'PMk8B?D#/Do'\;Y<a1G,@@5r=rg.Hq8!_]5ZI')S9K
%P:eZ(*CoE:L1/]SdJKt,_dMJi!Z4/^,6<$K4oiB9?K!lgOh.Em?Uk"u#)YN<5OAI+]ghVXA$t*0`jeBJKHMIU3o/Fe:P4=?f2'oF
%FWimg&9Kn&e@[?gLnC:!83>AH1L/@UC4&KqHso9iUtn`&mY>cqHKn=f2""B_hZn0W>'F#%De!/+<ia2=P*^oq8/W+Q.Uo;F?%h0;
%0r7i0Q6B'n[YQ.&#;["Sn>F[HLJEQLcr^L.'fdGCVi^ZZ;$KA[&Q1R1ljMo<Th97%g2YXe='r]l@TS!MW]F8eb7<]V6>.)!iZ_Oi
%-]%d-EPjnB"M.(4SgAomZUe/T8AAU+9AN]Q,ZQsDHNMk,"7c"lDo%[^%7<BJ8`#88#-t)gXTj?9E49GNJQ2h/VIt*:=7(qhhFHpm
%o7-_=oS.DuY_I_JU6jUg&Bp\j=@#1]"+,OgO#kb<[k"Ku;WZ`2B6napg3[j2,S:BQ3@*CJ:3W8nJ\jnIRJ,e-./>+3#E\Jec6/gj
%*Nsh=3Bobg!R(9o\i^T1kLAfn>0gAJ4'@<J=jNTl?V`hWqcQ$h41bN>a\>9N@=Fs5'E?VV67eC4?9KWZ%V7:U'g;h;n&'#"_b<W=
%(73uF3oRCJOg9P#c#"8K\k"YfDZRfZH-e/D9dbId*Zuj3jQlnRc2]9o?t1CQ^&tUp*LqS3dpCs[:P?\!E-;H@4MgF>*sRgN-TM%A
%@EUdIE[,6W&R71NOVX^'CoRp`G8m!$WQ=4i3s./e^I%Am\b:U0p4+.Oo7/*Yg)U*6g'fUg$I=Xr^bUG'g2>i$b18J'(ksE1l%\^>
%cLb78oDj.4\:E<!kNP*JDk6&sVo`RChX"$&9c#&\B6s;TWpStfktLDAD$83LnPmn-j*=G.#b\m&<*M@FC,anq^UC<dCTZWZ6J&Dj
%q"WZ(D]aE1*H/Y@]Poe.!hsWYH\Z8!I,5A%*Fd6=5s![2DH,L)Z9`h!J9QD\>dfC?o`)&#IOTVtd)C:+>Z3Wt;.eZB?ULC-K0qhQ
%eZ5(.2>cYB'$n.tJeFTo$RJhOpVJiCH6l.Vfu4rC8jP"4/?:P-k7+*u(t1!O?#SUHgJlmbI*Z3O,E16Wdk^*nYkktMAWl`9Q-mb2
%-C<LpbC=)]S[r?,k+OofDNfC1*f>URlU2H?c"??0.5rbi%pZZF/=Z?j[Uria>.A?T^KS0oj;U&8\_3jDDdBqumrWriO(LAO6)O0b
%jmD!gH?<m2:Gn#pqEtu%B>LY9<-MHCi(UgI-D,KrO\lKm[c+?Z6,gqNp+A>jN-CsY3(VEg'YK&"&"KMlnmio;O94bdd8`*d4JZW3
%D5b!9#K^mD;C.3sMT#\^PYrq%,[I'r3f8=-Z$<\M@9A5Nm]0/uc:4Bro$e4Weh++*angZ^1^F^:9tDLm-T[E\JdrR+60MS$'4(g`
%DjFZZbbs?]'QEd9Ma\KJWZlEiRMB]@A3rIHAaZ'#0'cJ-c3>mhAaD[p8tu.eH^:t'1Y!o<h5Y)8L`f*X7I&<On!R]>ZpN2uCd#9H
%Fq`iBY`f>SLnHg:\q[G[L#W0Gk7h*$H89*;)%2F+BYZ+gMA=^QZ-)5mRmY9Xl=-uMM#M0E_QNo?kub>Qfbjd>5M>Kq9:0[=:9S:c
%A+B;M9kTdC.=9>:mmrC)PRs,X4g!L;8j@gT*20.H=_]2R`.^W'_dfVOrj.%O)+WJ>Y2#&E>Xr#H2\FWGd!U'rc5c^erK(0(J@UP.
%Zm`\^FUVNo*f]pceI-mM>GNJ7rtbQG2%*/3_NJC/B328Z>.&t=eLEP8A?]@?7qI?/=c>r[/1[MGg!7P^L*EaVmZ#ItU-ku]$X.VF
%?A$7(P#Pq3%EonpEhG"eUG.I<p.*OcmMkCmEjZRDF+@T`V7P#Wf!uskXJK$`Fsm@\MS*Hh:<_=jfB>Z5)GW5614L&$E7b7YSQ[lS
%=#*9Ojqr\NT<`31-drM"$<-OGEjg^!JknA@*0KNeCUBb@0@&-9-gQu[Ck5p":=l'*>5Bb$rO^lRB'Sc*!;;(J>[na$1hT9EE4.3=
%]pMC5`XT\Y#p]a2P9u[YJE'>8@HiQ&+mkTVD3N:&+O=p0/qaS&meR'Q2&R/S#XW3\+(F,',Q.p^/%q&sc"-C"4"F@JVp@'L,:2JE
%+D*Fk]!G"^?l/KoRI\<jq-p4K0iPfR.::;`pPelVVL1*s^6gALC.qeaB$.m&1]:N8;dMCLhDSh,7d,0qFXpBUWuKnMqSYTr`R-0;
%-<]n9<*<KS"e+`<Es*aCFN=AWL!$RIZa0K-W,WEoR$)+WHIRa'IcW4FT5:'\L`&i^PX044ijH2_DWd'L18[oBKt\=6Q0,Sk`fcae
%;j4XR5+%V;&k0;X=al6IcZLpW&J&`HI4Q+PZuEmfNE)IJ2QtgYjYCl2=7&hlUGeT;lcEYa:.77VG4CP&KZrGHKTG7rILWGKQO1]8
%`13L.%QZ0^#1R3LKe@EdJ.[/)n*_[LeZl`XG>OP]k9Al@M0c$$]hPAAUfO_5cR2kfFU\^9X9]6r8o2rRl'1An:Xl#ESGt'*Cb`s@
%%1Ld78=D6jBMB-HjBAp'CJr^gCV)Ybc!S<c(+a#hN?b^\"kk1-`:A8Bld)bST_tqbqgmbd%rRF`r+e$U2&>8&Q%,Rda]<PuKerD:
%>uU[+IoDMq]!]8,HQ1qtOP+lF7V8K1F=N0qAQ%&nRB2_Dl#Ois72->dWL.;'etVG\/[[a@Pu-#8M!b!`p=V`P^9Z`hOrD6?hNPO$
%di,8r88n=1h"!HW[oBQ,>9<:`DL&nXmn70':)9C!$ER-GA(7%0ZIhc[HuaMh\so[X8WO1B=mK%PFf:m*lhrE`<-./?mA$\n9];i5
%Y%0#c"\h&uXt;+&b61N!>4kl1@4DX>On+F\R/fmn5aZ.,Ap)^Ze6Tae/nZ$UPEP6&N'"opZL^X%>,]_uUBG2$+YAf@C(akRKJiE*
%?tCTNfq.X$PGj`OK!J8')rf\hh>lUIJCK.`)]%EXd(A7'rW#+W"!mFg5nB03<a?q@65#&?'Z(=c<KnNo5VRi2*QU/^&sTW0'>BK8
%i\OC05>`TtT0;227GZ+J[&rYjV*143gTY^D1M8Z,<U0c.j2rG#DKFWA`)WG1jIY+TZQ71XSBrF+!_>4G]hJ"KakG.2R!Pm;hqkAQ
%/lMES@<Il.JEgu/MU.QrBPjshXEe8H%"roejd%:W^Q-kTY3fNTWh^#J^+E5[Ga;S;\W*bgU;`i9\VWP<D^G;2Q-C$_]U8_dD^WYF
%>.3#6@C,@E7\&fDR/,C\8Iou5d/m:Xc=(!/>Lk:2FZ*p2DBT,C[URae?*`H9X'XAk'/6./@'U,/Pq]:o;+6GD@TXMclBkh&BcrOl
%]IABNWUc:=1C)B2YeD=ELak7tXK4Do76Oa-T`tC]7!FbL7n)FaJn,D:4CdM14^YC?YKDO)8fDmDfAr:E-lPPZ]?jB_h1C/eOUp4r
%go0j6<k>]FR'6I$ekf`XNJMXXqu.u`jK_tlD0eu-LC=KjQ=In('Tf&(e^6Yb/*V('W=g+ArKY5e!>0;Ak:NWo1tRr@Al?-p_Slb4
%%OWj$)OKQCQ#q5@hNdI<?aLas%NB9`GGD/linCYbm9\YHZajn9di?bkm8)N3b>$\Ae9V#%(4C'WUVL_2kH^W;3Xp&ma'KN\ga]4H
%YNhZs"eT@]IC\p.^`H]P%JVP`9$iL*+Q!3Us,?om'^^GDAdW%o._bLq)*Po[`,`_6_f*P3p$+oGk*oY)iYKDnWdl-1^LFEVmjNER
%36N.SB/.kq&$X5if\\jZCBB1WL$q"<:?"GafL+H11M5C>SP-8$B=UBD[p\ACTJ>;o-b;0J\1o3N2+XpX7sI\t%cQg-dCmX#KeqP?
%_q`]mLc6GK1B;K8"60:"GG!`=I-WNCA"&b/Jm)9<koJZ#*D'PD1R*oZ.9pS/+N&i!*D2AY2%P^ZJC(o%mP4L)1D9+EH=X^nQHL3n
%RD+r,'0YmCJkYa!):>_rXVfP<m<#tN.c?A%=2&(\Vg_WW]OAaJV7n&'E5YED\]qK<CE<(r%S7T_BRp-9*N;SiIFTXc4.-7FP?g5;
%Q1^;D%VE+q=WN8ANb+r]l-7K:HFYg`GW)".E)jE/4HHfp.,0>Q:T3t0Y:E:W'cM/\Q)f7]fC%,EY>\r>Jf4%6Ip\Pc['/?&n%KI6
%$MrunOGA5Je<aH%Mm@eT#48^FAr@l`adUq+)V2#hcucA4MRVF$)RoL`m6F.eM:OfS(/I$IjEi\l>]S?g`I5+>8mU"2@q9@h]9)7-
%Lpt+$b[NHhUIVgSi]V(lg9/URFp"?^qFHg=HL*<Xi].nEBu@(TQk&&4\/n0Ki<+P8jr:S\(F$(S5Jh6VlVSl(%\u*F)brnEjBP+=
%c&UKjfgf4a[]UT1rlsq6SSo<:U4+602`Xl>jW\IZb=QM$*bS!JVe_g[JPt$>%A-;2f&DTWen$)L_NC/Ed$9WmF!]DG(LKe?X3.1I
%fb+B"6'=-0S#k^LPI]VI[R8G9d8q'XXIA[nVo&6c]-n38;7Ud55</OMmB.G*GSPuQPU.3Q2*LO=%(jWlV).LZ`>JYfHR[75gk.-(
%!8gD`3cZk7TEG^6(W[BU%W"',8sP'a/S7..M-Yn1I#rU!M<p#WN!dVPPL_.F`&(?`%T4m9oFr*Qjr-^pmOT"8GsYf%7Bie]q''d,
%'MDmX)\9QbU-+4"Z+\/^&nOE.fjL*eL2k_M*]a3ul9k4IfrRW^Kq[(C:JocGZ,SFTlR>d<JniQb3E(SZ2Wh<1Bk?L.W(db61W7SL
%]gu3X,Q;sY1gS8RB]C*b[@=dd;pJ9h<u]jfni?R_*msh,PB=cJmEm]HB1npoQ]rR8Qes+65=U9E]WQ6.Xi+_,j0Z+)=4Rnlh,g#N
%n$%;lY/\c?(hBJ2!b#tN5eIi5<>ALb+Jf%,MAYPn$*0hW9.NPI%9$nMN@%ud6+fXFFbMD?8@FDD-%pLFD[X\[9587`<I79FL&h6O
%>=975Lt&l=Q;,:K,&0%mc`F"!S?#iBL9]'VZ6S.a%4c2tB<)FjhU8ue1k;gA\oCnWeW"Xs6FODT2V5@e[C3]Ui(^=kl^3$R3-B]e
%)_=?^"`nL6c.9?4FUE<t%sM",N3$u1O`a^7-L@k.YCOC>YD/a$_$l#8%bWJTE-RIr*fGY?Kh$_cW[<rR1IL?Zhj&5[GMPAk^@#P=
%6\hY/QRR)dThNoX!)O31deL03`7XPeLId2U&9b#2WM6GcD+LXm*6)P--tjWm)q!<tj2X5Ui8&GUDp$hJ%(cLIk3FN^@2-hIN^;nq
%7d/jIWQ_7doJBOF3R%TpdjR6$a06N@<B`_F'1U@Xi[N5!E1f$t\7#/%14Dm_qLj.&"9!h>[UGP3fc_1r$un3:I@3G"3Q@8n4ltnf
%\4_67_U7hl.>I#;W-VR6.K#<_l;>9lX\TtYXh='66iJNC3J'WD=:a_hG-HAHWsSL@c1!`JHZEEXG$4-ti0Gm#0>T4n_(@=V/MFpl
%0>T4n_(@=V/MFpl0>T4n_(@=V/_@c*1Q>a#HG9Tl]EG^V"Ll#H\%DjQ]EG^V"Ll#H\%DjQ]EG^V"Ll#H\,=d;p_)BQ'&<$jh!u*5
%ne0aK'&7LR+N8cs&YUV6*oZ7;pT4=.HO4S8$#Y"pDKuP+GmSA6m+9F:0-fah?\2KgJm2Q5>@)nc?@lBfJm2Q5>@)nc?@lBfJm85o
%Jm8)F*Spkr<S:'n$0jBHRfAZ.c&US=%G-\-67o-hNJ(PILN'4">r[Y5g0c\6C/ukgEQ7F6pXF^%E>`8119I<7MJ5511/ue]fjs/:
%*jpkHPm!B.Y-q$Q5Y,7sWYi22CgXJ^R<3&Hl!76;0kmG0m78Z&CmZR/aD@4V74Dq]@Z?h3eNc6[Ql]p8-ZV6-eO4Q^UQr'GR+=Q=
%kf(4&NU+09^ufcCa$Ir8':Fhk--jU>=/'hadDXn:OrfT/6LGXfjGP0!eUbS6*_9!r`8-ZHUBMED88(8@\c;+E:hM4,X./,Q3CDAt
%nlq,#<u&r?'4c5kUlmQeNYrM9C,.:eZ[.cKPbt$''U0@5Ue47&$!0"G_:4\s;c@k:VA)I1knjo?Oqj4YR]Ma:lkl<HUUfXH@p$m6
%ei-<Lj;M*d7J3h][5i0[Qm[V6WX:m)7;u%#r`4s73]!?8+CiBd2e$Y@%J=N1X1!-QQZXPh19]N;I]J-8BiO\928IjR-ajG!Z6*jO
%Y6UL0&lHe#&MY;7r`%KpT#MhndmU8cEWSf!"#3C[d#5FGcf.+*@*10Fdt1@ai:dHr!"36dfqde^D!M@H5sBrlW-Q[dN:V/.)`J%@
%go+;6?_n3LmCB\!4)=V6S$09pa=b00Nts#fED^i<>rVm`0&;WLT\r]hj?i!efuF8""JC\Mo?hn;g.3MsMpC?aq"VHHs(<h_1Dn>N
%9G2oss.:SY6lVf$r[(r8\K0c2#Pil*NinoUiLu)EjOmWZVfK\mW&3/;hRKaq9TadPNq1@JIUu7+_<goC\pDrA'D3*0CQ.T@H=/70
%'uL(h$Y`WO5(:I[=7VV[g@/^2=ZMUE,>c%q8/E[[T?[rk>%H.>g$OA[6s8#T(%^]8?8&7>Y_ZA?GNBYiNIQ7JZmu_F,%jTlR#L])
%^a-(^;2;`dE(t,gkN_TJcM182$Zd#[`,PjePkE%;:&4BmACKo3@<LDrTcgXV1:otg:IK/jKXM1!Fj9`g`QL[nY[l4*ED1ur<j"$'
%FO>,+/6qD"EMhqG[V\_S+32od,=)CJ_+C#g5S,WE56](V8W;(cZ#1qH9H)iZ?S"b"^TMo+XJ1Np?_sPLfrMVO9lebNWMV"*bgEY(
%E7)$.@pW[UE#Ai'7XZsdjLn%WRm6ICfk?n("\/--&Kb(Rg(\ocOcL]T78UA4+h1+`,%ep:$FpEcM[o;45s>q&idZj,+!9n1j*NV_
%a2d`FW#^`AiJ8KE@`WOKHdVdEV#QuW#<\.$2j,e\>8/1FJ]-5,,&PXE@aPcp85IHh(NC/(ie'>-^\YOZIuUk35O87835Nq?msb3D
%!>8JE$gp'nbu9;e>=X(sIu95,"CZ+kEeX8I,iS[,VgIGL<s%1[\"6bTTXFbI>3m-ZMOpW<AO/<c2CalM\!tDLUR0bDH.,Hu<*'%I
%5Z>F%i5..#_.O\Wl!dcK&Ao-<@=oB62FCIrXb>u0b'tLS4Jed:1.pO?PhG4_1!h:g#@ch`'+<%(5+e'FZE^,`)el=(ZanPEU<ueC
%L1eJjn`nJPmQ"FHL+E7sCAY"_<L\&k/s#*Hg_s<kgVJ03@9U^_NQ/H1ij91odr[0aZ5+0uNt$<BFlJe%VChi\n"dfHnR0&Z0#]#o
%%(#kp8qn632)pKEM)A(A8TA\]JY3[]TGN#U&?V0Tr^s>QY)u.[9Uh6Uj&aLR)?lK*U/#]--TG"dDk5lYP8qg]'Y5ZOVb;2$6mN.j
%=Thtt#X"Lt=Jii@jt/Z'mR8B`RYLDXU7pj3#I!/m3EQ%[(tkIckrME5'$2^M-O)RB?REl\`-mmk=HfP!(l@n0P/^p+";/c8RFs<m
%2.#U.7j>$mBTA-!4s,XN?I8Y3s%iOF+\N,p)TaeAR]8_eL6N@0+KMLpJOf62,pl^G?=n\T*Cf19+BKClPlp9:R9cDOH#DJ*>=-J9
%iT8#j'h/[B(YTG>77ibM;id(W7tknVXYbo5BdrSY9("Ms&UY0A,lBH7$fm0`%APnE"iPBfW7Vcuc.p!'/A*gO;n#o19rF]iF(O\Q
%@+-67]eW]]`QCl?ZHDM&C1alt`<bB_dPV_0e&NVt3Rg4t>A*Y&Dfp1`l6QH%66lP28LJRF3_1t(?5u@l8UV:W?/=Y'*A`EYf^0m(
%g6aYAQF.R9M[QQ1!VZ"<\:L]6J44Fj-3R<FW=PRQ6L&VW4ZW;hp/29sf:=WDWnO-mV\R9j<&pVa$n58EQDNQgigj8EimJH?DH4)3
%bM&LuY+2Q2hFqhJZ#I"kN`Mk4dP<B6,dr5[S-*4%4uBN!5l:b8G61MRJ*@S,(T^:M:DlT;)fU__#@VO?ieL%^%#H'\X)LgE5>cWY
%Ljg*63WO:BRli6P<F-`$KUrs542g_#/8d@%S5U[\MdblUE`-#t9_"<0#&)sFE=?lS@06kJZOgWmmP;s<!itISDOt^h-]82HL4s5Q
%>A/>\iE%&7CAD#YhdR-5dJao$Op&M.+seallH7i-3Gl0eajK84m13N%h%rp.$+4`k>ZG!VE]+l.FX#nA=Z6V3?]]<Q<2?inp79,U
%5J#P5pYrLWjaGZtehM2%b1X.\4jBgM/k&au]F4YbUX`0kV+Nb;@Qmjn.hr9hF"&,f9.lm-S]n:)92:`:P<2GrX!Ht/<Le600_Hk9
%p6#Vr[\QO;'V`e\G0[#JA?*uSF"&V)LnP2"NFPc@?6HASBA+%5g_]%5('h5<mbe.O]$R_l5@p',h`K"N`o1KoF',`c0]S<Z<81Q-
%Z<+%]/k35,>_uD^+jTq[XAN/8#),?7P-qg/gpop`6eGsc,$UDFCnZKAcWR?;F-C2g<i6i>9BWciHI$U9)p[)['TFHrKX7m!3Km<J
%AqK/p,2[4O#$hD9_.Na#ErbAS^c<'I0=aDl7@K!WWSGeKR:qlS\%t01a$B3qNY9aJctu"p](AZ__*Xkei`X@A104VT[]C5'B#e^s
%S`;]%P[C!-1S%V01E;a^j4dVOWFp5[hj:Wc&QW1m[P+].G*6H/<f'79of<DV2Zd>F""06//b*i0$p9Yg^F)So'3SMe%p@HV\lcF=
%L5WNA-9;Y-)GJG`S_&#sRJbXi.O-n._St4MZ+?\V+ZN+%an;\/]^A?\0N&OmHtHS5.uj;r\J=A/@<IM"7;JH!HZ`Y1VlWJ7[Ok5:
%$tb;fD#lCY(NECl<bW>.FX+oNVgm!nS%<?F^G)#4!iG;^iRC]MBl2O&ccJ]!/$.^6&0-Vi>o!'dd)qa<!8_*l]2NlMT]Fjql!((X
%-s>(??JZD*CL0#iT!Efu/ooF%$q71Qam0S/l\_a,dl#\A)WUrYAldKZH66^11IF5=M.I\PDQJ'mTVioY>1ZG`/,]Cb)(2%2Xml-g
%e(Zdh(5#esW)qM7^so_*6#:PA<C,(YD25U%^U>o'Ms$A-=mqOLp?ZubG9@ln.(RhKlslOMeQoY@511qGcOACTMUq?6CF\hl11+3U
%Blt*j?H-j4lcY0u@sp4<T#A&EYI'mi8S2fET-q(?^4&LOJa6@dlY8MbZ9)!>9[+B>Xf($!l7Jp1rO]M*R_<g^h_Ji#%*jjD&9-#R
%3*UASDt(3D9@Z5:?-<%dE`$^Q6c"&Alo@)CD8U%pZ9)F"4>4X&Q^L5\4p3KZB[_`e\89hifO(78mGt&Hh9T,u%Gb)eCI@nnf\[/+
%g'iNmDQkr&Q>qNprcDdeDmMSKp:&i3]XsfF^\^OfDt:3XL*YpTf?#^^#tDgFl7+QEa6bP()s>Fc(s?8Bb`q9^dMC)hk@]&#cFq(=
%+N<H$C0]1<RHr!FFa/YcoPTT[SR;C7,F[&pSNj0G4mS,9#Jc.=k->rB%]bP"Q7E>V`7gm]pmO'8bQ/XW=?kX]_AhUYC^N/J]=W,S
%D?\@r]DL8]"SsS8n)s-+7\C7Xn$DF7EcUJNHV`>N'>VE>]DJu6FaP+H`n,&Yg*BD-aD>T\<6ecoi&jD:Co+4;Q:\8)CLSD-:NIF$
%fk91+]\C$X[-,*j<!+Fk-R57lhO7*Qn,B/?X>k1<(ENpLB.8]G</.!4W4H$[i$\c1Y&PUul8cXVZ<):<1:VpAY^DHdkIJtUfCl77
%)NsW(mHiC1kD6bSnJK)C,jQUlHB,8g9PKDFGH$'Tl8FHfTj($>fHbs8"\Q5_(<\?I_pe1l2YW#4_95>!eF<mt145BB.OZ4-,rZX>
%4H+2oUp$q!o;L]WQ9dJ;2oh=Vp;5?3":#TO+W69Oe'&Ak].<h;2`('g9I(g+/BQBSF(hqd!*[&K^OeRtR6/VqB(,NC3i>D^hG_Db
%Rra3^'/96iH#Is-Xhe2OU:cN!#+.V8@+Yfsp7mi:Y319`F5Vt7ST<3*U:)#?lB[@8&QcUsC[8s=m'=K'@qmiqgo<OLX6<sZ6WG'R
%=.MZ=q"aiWgfQL7@bGq9'Pb@gbL;gLo/W(JOgVYq>Ae#3Y&j??_L*[0?5\1@$M&%FmVQtUF;llR_]HkIh0W!b8E$l=D=XtOZ55][
%nb##aIO?$7cfBb)\[EGYnegtI0MgdsJ'"a]pP!jm^P\DVlVU5hQTmK38cN2+'7WF?-TC>@!0?cRd3nNR)A)';rM/&(S'a4!?[Ys#
%a-HUR]dVl"mbNfAmRAG(j_:tk"6KO]]Z?DIZi#qF>8Psj]3Y%>?-=n%l=O+U&NeGOe,)8O_[]5):N+_Y.t.t`MWnOfG24iG`>`'k
%3-4S)LU:9KcTbD&o<T:D5BXRUrP88<#:Jm@:0N.tfbCS8f'u]uNmMn-#dru#&R>;Dm?pI,Ok[gSB%UDV][\QP^'L,[>;ILLhl$lC
%8-$#G`Mt697b8u&RFb`G*Q/\)Dm:!F1^19['i3e`.2m1?UboLC$1aoua<g!l$p\D*3iO2?`7jP1,I[EB"F_IjK_'a+;]omB:CE-"
%(*q!.Z8ZskaC7"5Sm:V)ja82h`h+N28/]]DabhGp7<st;mS6+G3@X^='J5i8>8%\mOgL6c7:R0H;6$!srM.5[2724m!F&BJQ5G0Q
%UMO+^UG\aW$/$%m_h\`Qo-RG;+*JTp95)o;Qo,SE&3N$&Aj:9i@Og&@E#]RP!FF;p@3Pfq55Qr<r:Z@e>N%MR[,G!T7o>pa1nP5m
%CN>,TpED6O#e2-k<&lPL=d4WV7F`E!6li94a_sb7;Of<FJL70POt)P.JLMC@-cP@9$+!e!G9V0:OC[g]k$o,JWqXk%"bnpIIChnb
%B=0+H\1T/e8),^jEF15S<SVu%H3S$2qF`ihU:47RXa^Rq8s]KUOTcFboSG,Z["$9=.*42V5K,<FKcj@9Ba[+qR+nW:DLCFkC?C["
%$@`fMlH=u:,C]':]p1X,>i,"?m?pI,D%ui[Veplc8s2[Y#;-XUpbkcen6DbFaj!st/A4VMEK\e@jA[MZH:g9\P+IcNhF`-8Z75A]
%3<kZTefmk2m#!ZO=NS"F,Yi"=Qo.FC0m6+3%U/&^UdYUjF%'#/]05Y4A8t5-Gh\rGc$=(FJ[mT]0S?rV;.e*pOo#$BS'nid;p'*I
%ii'd"Y?#ZP_glS@poO1b&XuUpKrI#c)Cef"=uLua)H(?ah1jPdeA@"C\L#`h&oRF]D?4&IEZNqIW#ZdQHRYW=_^n)*n^qW5/_pk=
%Tp6W.CNpl4diga$Xc%=?Pj;WjlY\['^4*J\r;gGo13lN9n>`#ifs.RkjZgA"Yu?uM*hJ!%0O1%AB5)k8&\"#epU+<HN7`'WDS%d,
%;N\$LlW:-U*q`T/U(0WH]11DL,id<p>WsT<:<\ueF(os'Fc%eGdaaO3c8ntW\Y,>O9pG+.FeZ#eOo/dZY)MsbF6Q^f<t(_G5rdo4
%i%u`[.Oe5ScUNI*-;/XWU;Vj%=b$Cm,6*)]#Jf=gmb'%2$g!\HL-AHC?B6F<$Gr8]pHBn>QXFQ"P9(e-I[>dL4nNGIJS=4f%R&9s
%XDXV=$6;Q0c`&!8NGZ.D3->K_`I?::`]2p='BaEI&#nH[&6m*m50%>4<`jQ_NHM^&KVYiQ\0rfuHu?^9^LV$SQWS+7f<;iRM'XnG
%+Z:_=)a0\*8S?^bK;IfL/2QW@(B)X$_</tFRd"r8/G&Y?F[?^ACp]@f+@^$Z.!,UPCq;cTisrLJ;jB1qD"1U.`iS\r&dOCoc#G16
%j1IsR(CYR%Q+e*C08Zlm_C77=4u\Qhn[Bl`'s!XI?i-%_L1!n,KMMGr0j5/[*2ucb=#lD0E\F\l(aYVYof[TH+(1E^p6YN)0m,db
%7RG.TFH0uMSZGtmp6*<uZV5(tnn?,aF/6+&<N`']/QdY#^aHbmUC5l@m=*AYhb0*1ZB_FFY:HfV9Mh]=K(Wr]k5&9(Q.S.MF:#!N
%X[4G#;C9js0)W,Dd`,Ho<u_3GJ_a_ENlJ*KET)G)VI+D]b\ig>7RUq8D7"?'e7_\$@!':,ZZ\"u;;!2n>U*8bN6es&D-He+NGmRs
%f<gQKgRkeV_CYfdF3A%@[[XWU.$ZB<dO&m:$eI;SdV`1A=_<Qko2`f"PHD2;Em&:,X6WiceU+R<Ch7<bk@U1jlf(7V7;?8l#%sKD
%NTP9":.OT*'r@"9P*?%5+h2_3S!1?p6.<,B<WG*U&`DjmP9q`Eb)Wdm&;ra!SQI(g351D;9"SKe=tkDD]2GU?7bkG$F1Vt*%7CWE
%9;p^%i>1JiE(b4f"+%AN=TtWJK_g(IS;uSoPqNh82>>d,Z:m'HQm\K$5VE@DOVQY$@Lt@o<bc5NJliZ=$9jp%p-Fk.ZQ5QAYQo0]
%k1UX[3O5q:>Y<;VIRW!)`MJ#!C\UI&&:-ulY>4U[%Fldh:jV_9d[L?h_kb1&#GMDBBXg@!m%.oqRH7hNd_%ooc5k$T*+4k\$T,4U
%!t.*RT0it2QRcE-9'bPq=I>Xs]00_cNu_m)a_Jcbq:8btG[%4E=1rdA/H=P/>1BW^oTQ_Zr)?0s)_[e#!`I,8$Vlp;9F?BafLT@=
%Hl;H-0ObbWob4U[50o%MK)Drl^RLNsBD]CAFgo'PWcd`,<]S^89@fhQG.H$V\$jT$;WP03]=I`Pc:-0+Ze&cHS[[=05+bGuBBu+t
%i76CkZTt!+03b.#U)1r9HuSdmBA7M$4`?`Pfesqr2W1Zb@dff);S]^B[MD7C0S3I-ZH`4ial#s(5qq'dO4%@iZle24(I-W29\Ib$
%Tsj(WE5S7uH,m@qb!Q?;%;7=:(#Z!Ce'bsX`A=6m0KU406"J/#ijsVm[ng#4B$*d(p5g[Sc<#B=8e24X(rCIZZ4;Egi&#;shYOl7
%+EG@$I89m+Z@#3IEqbr16kbO/8KKms#cAErbgSS[j.9.l@)@rNpHLsEFh<'V$3s&5@ai'E)YRtan[<R%Q]AXph^/g4lW7/igngQG
%/D\mGQ>X$NeFr<G(2pO)>7hRWH!_Ph;Xt'h(J[Q$S(@%5Ue:Plg^W?nkh66TYO8(Sp)0[9:q5MKFc`8tXkP0:2\"S!Y@$,,L9J<C
%^#d'p<PC%'d$?BTJ!J9K&h/rK43llB-=^C\Hr2[T'ipk[L+8F5bWkFb;Cq$g<q\99\epcH[+jo&&gfMk+jLT]Po>6)PCDcE6q2C$
%p=bY[)D1>eF5O@Z5K@G5[G/.u\.=rWGUglQ=dJDDeFQY(^hD>m/?2L/3C]2SY)>C=.-I>/EtRB4n]_d"N+N2"?E2..Rf^OKq"r:s
%(TC#2YGoaMIM*.mNogg?]$@E_lZI<]:YXQ).@!AiM<sYYX]8Rk=Y"U/8laR!.\a#]YJDOD7&!@TEcZn_I82s8B2<f`b&pZ`69,?$
%XFN)GE+HPNgeUrW[1_@Kb./PG],BkgN,q1HB`-P+#MX73;F4q0fitT:maUaN<Od/_&M=^65GJ!\F"NWg._CGgC2=&6Km]<eF))NP
%=d5g=OI<kS-aV)!Wm!`?aGnAZ>".MaZRMFKW]YH)Q?16fdhg[GO(H<opJ`XjT4G`Y4u)4U79>a>b4tNga]//:3Y>ASMQ1!#-"E/c
%$<p(1Z\/pFI\"%]/hg#+)<q?U3l=EB`7sMf;fbnU=,q+&A$`!!p.eu2a![.MoS2e9jdY'fbP/k82<?!Z<H>&kIEM3.a[ES[6^A17
%<1m^<nO8euGgAN5cPg`^GEK3_^MT81bhdX6q\iVgjF)_d%qX(pop'gh2R3R)I<j9Z)r5ndj1=OG68_>T=\(.<8034KWNht>H87_*
%Fht?>pl`3Fi1X!OVQBQ`l[<OeD9FV#`Pmr=.PgGI8^hbUU$bV2T5p!'T*c+MO`%?k1(eN[nY<.G?5@/%bXB9078"0=S:Bm)eY!5B
%X?oi$<0VgSHY4)B$a/np>g?B!RPIN1PT<W"R9'3)&AQR:mfn&l.dZf7'A5V"1:#:RQLe8LIOJRU9:`+cm0:H?-SX/hP$5FL;#iWA
%TbcgmF=L4RkHD3L<D9bmEb@&Gm,KMnNDbMC<D1=f2<r_Z,k4Kpn6FXuS:F%2K6@lnl`<CC*1UNH<X`20R/GNqCm?HqStG0<#pU3#
%FrZua*hRZDMm7]7,6q`WlCA68DeI>oD(pLE,6u\d(uo`$Nbh#'-Ce$sP*>Il^F)4q3nHqa<fCS6&j,5^i5ILkX'J$Uh-e6GAOUe9
%`m!6eHR%-1:3`k3+0-[2X0ft$"2mFWWRRRn5W=RM4Q=K0Gj]=\;IR/$!Qt5:Q1ll??fR).b9X/-H&\GML(kNBm8NqcU2!KC@H2!r
%?B=9Q'3Bp2F^_[5/G%49K"qc73uB?I'i/n&f?@B1*kgRJNEmt_dqkk8?0h?;iLHc9eaX8!2<o?nRJOk,,NsjM'iDbCY`9(cJhCJ?
%^Nk--qH]P;TZj_O.5_QiAK'dM@@m;X0J=[:'XaBqqaHBVot)C?_a@[/#^i666sJ>eo=uie34&<r"OUUdh'2,G'<)[Uhm73_l4$Xj
%Y@6)VE@d!95CG5WeGpFNj!+SL3'I>XDI29mFiR>;M/#fbKuu;orNU&Ai'+\C4aelM;cRdRN&tQ>=PLAhQHc"I)C19RITe]X.\rsE
%Je"]BR[9l2b4BVKSa,>T/nmL,/MK2#8^*U<h%/Nmo[KS+WX<V[XGj1[/nJF3fTHS#;l--dETU/!dMZ;Ai0i(;Se]ce/S3%(2)uT`
%RKXR9+35.[P^U`Tk=BJB<@?t:R>4cT;>+.rdpT<lJkh=,hl>M8m'Td'JnW_,YhA\;a).Z_MInJ\CfTGn9`D#J:sU`tW_]=;)XF]$
%[GY)Oh:0Y*?=`:.JPHB9i%k9?:<8@AZd&Q8>`2Xu1H!+fjSi?^.gq>8;>QLU<EDiAgl7c9;=c_]#03sroO_BIV.4&rlUkBmCpM9%
%k0R,hTsPE.[P;Pm?%ti_/$el51l`M8.R,RrVph5<oogFo\9(B)9jtn7aOn%+KQOg7BtQr,U&o=G:u#(pdX:=DZu7G2q>c.Vn*6"E
%XDcCG0UmVSR:2OXdOSnoCoR=JQO)tXL,)_Z$lVm9Ter9*qLf1R0Z=612$_8K4VkjB7orDNZeq,"'_YNa"h:+0^QO*Oc0rteI2pZO
%aiHV:+[cXs,:>2Ti'SOB,!c[$30!DOOFAiCm@KS^[!_b:rSKC1o;Xc/^1R1J-qNBs)=]:CG*KQCSG;J:Gu(i>5p-7kVgmH:!][2\
%d(<:t$Fj$""A[F]*Cpb(0F_:uY(eg!]GB'sZAoPTU.7c^f+SS46?u?-)C/+`,_^9g.R9a?&4[<X-i97q,dk@mrjLIo(*i1VL,'<*
%YmmHLb1BVL;bV)[eK%@[jXNaSpPG_*Wnc*&m=CjFZ:".&M/co9lbB?_Ai+9nko4-*;4Sc85i3]HclD6I;p9UE/C/8]pN<U%[]8"K
%=LDK/BJ<lV&;u^Jif_u:`uJ.J.P8\#9?%%B_aH5-hJ"8ta(;`F[H!.SY*aR+eE2?%/Cus6S`G/RTl<L2"EBc\S#!44V/CA83+nr/
%3dYkYYn^g$S(8L*IBh)LCSO:tHV6*BEq?n"Wur+:IbrTckf%^F0iqGXE;:0">e@-U0\P(C[b9LodpIB5jQtZ),S#-b6WGX>;!Cg,
%L/@>8FY)HlhLNnc3*Qoa3GHi2'f+@<ld#6*\anQERZ]0YbOl/RqI:dHX'HtRB<eo278bKj$[NA`n(!(O5R&3@g'p\>XHR0ZdssQm
%)7YbnISP<[,XY-+5mVU!6gX\aUd"lsmFc7`PoX(8;pR/MP9o>?(6qg(@\(k7D89rkAu&kBaYmg$Snnk-9%u8YK7T+A$fJ,oo!'rk
%<%W)g_u:'ONuHD[oDc]!ab#,s%kMHXHN@s8s',A,'HSet9o@GhWiWOLXC\1)TFp"XQH1S8h^!l&7KGGHMFVH]C1GekWm.TA7A4bV
%=7&gA$QcPJ[%8h#@es$N]Hd*g2a.f$ctIHmgr_8l3\TIWX"5C2'bbto]COLS-]=[2j$ccDr>h.M;3Q2^n!;ZS9DDGq?^d;&aRO*Z
%rJ%)8m<q1?qQ+I7W*r,&a@=TVn>B3VRm0c"eoLa?HeDjh82ZSQ6o\'<W>pG_DH1=hZ-'&F1cZ<+/!cVR],L<NA?V1sX`5U%]0L]g
%AgtKMN!$D^E%3$Cr2oYhJ\6XGDN?RN+3D1Q_Lh]hno+.^M,!/;3)fk328p[72n>I0Xn?f_,tlnsfBB.-?=g$<eW[G3LUB+)0,2Ad
%;XZ_A)H&#f2->,U/Z3e*V*Qc&*@=[;*/WeOH/^3nF!TimWMC^"2WB=ORa4NCq6SlIW\Bh(Nn7JVnC2?$c0m>`*mfU?8:'$kZW$,V
%Uj)gt*3Aqlf:-,`LuR*c2U'/9!$3G&jG_$I(&MI]c)09Y<,T#[FJ/_H5*/\%.(4N2mQ[,jqcfl\Gb1I-NiHeP=!#o"-S%C#Pn(l\
%KsHolmc`>U?tJ)_mQH\Oj\*(FF#n*p.Bgg#KhQ.%-@uT7Mc:u>Ukn'p$;d<'c;:$%AbH\ZZqHLXfgAjnKs7FH.F&sN:q!8`r.G:V
%:c8lLNKcTE'Q'q=,1TYg.Kuc>>)85)7GEMq;a%+W&h,h<fm+\T-iuh-FUJ8M9+c?51[nEJ3V_bF<A4[]-O;$"GfSDj9RQ!Es4NVf
%J,'[8PrhqQ?sD#W.XfI0+rcgaj&Kl=`Gq^mC:@419c.kUO)o$BrFS-U9o?<G;Te+eb;oIL^ZX[`pShn7rI+C*q/3J8G;I)#I'sre
%Y,Z<D(9OuR!*=/dAfPR)i3fo6?Hjg4q./75A@EcLas]=nBpVO-Tb2EK`SOT,GSZ-;a8\(CrZ;rK^QC\6pt3n!QFLC7!ii>6VQJ9c
%lf)ld'\YTD[%u1CRA,,4BU:=)AMe<>O#8e$0#X4=G#agJauo?u=*5Q7oN7s18j-2?M.-ug8eME%7(mduN<SVuZH%?lZ!__3M'sih
%/bVSH!J<daOo=JgEG0p!l/(rhRFCeU^%/id'@&(AfZ@Ka?Z$%j1sR1<hXV-mL;mF/E%Hn*\UoZ;cFoc#r0f*Z%0`cU%?a8i<^SAW
%YY%u^\tmn/+G!P)XP@C[/d@dkWlq3b^l]E?%EAeo9)Y$l6NId^c`RQhe.aN)K8V-_Hnac'dR&F\a`&Q^?)MmX]>H2jR2NfkIkU+$
%[9H@8f5u1XSscPpZ2KM`FLau4KfZF;etUKMAe_alE`]$J2nAg[R&*H0F$$&iUtS%[4+scuG/1S=pGlil6G=&aGbEQ:mfK?h>![]-
%!5sB,ra7`*3*QJp4Y-@(c:;-cod^Ts$,[4e)7S/3KNQJX]:*@J_WHg!MT(IhMS5eC/`A6jXI[=(4$LG4T4*6D[''cI\ei*@#Wmn?
%Qs^GE#LBW$HeQ"UHZk]:P]dFX/clsOh0G`!F+tVi!`F[C8pc6#,ju<$NZHr6D!IJR4ri^VDS[PDPho1l'i`6NO7,9Gp\<<L]#QW\
%kGc7DDC0WYf1P8:7NCh)"fF&..h,Qj]Fr+^BtVkrYgK2NoIc>SN9_raI+DW"8(J'o'(1[%fH<4aVk<GX(1`T#b_YCcrKuYGbnM%,
%K+[QsC=TJ7_2(nc\s*Xn]KC,M&MMu'2Ug*UFjsX0OB]QmKf::8IkHI^U^FV0%fKLoL3LVq;'uIYQ9%L+7J@Ugp.oFoM?YcH7"p@g
%e:F0b6qc!m7W9JEbp[jDpQG>Wl_!<ekGcUHmP:>3RHrc^6.m#QB0,du_F.FunS"fqX*]?JmTWuC1/P4:=*s]@41DSuI1:)omlLP6
%K7gb3km<HX#+pE1K4Am*I;oHiQ#E8?^he!Y-!=0Y%SGP<"V"44<kRf8f=8dqDYqq0::0.\DrmYJk'Jnn>]S?g\KJ;+8mU"2@q9@h
%Z`<-LLpt+$b[NHhUIVgSi]V(lg9/URFp"AT&Pb\U4nb4gnJiHpg9@UXV??T;Xp:p_SUJhjk.@OMmb+mT:8`cuN7XgaRiY+AOt0'Z
%7]U[n5hO:@ZcU<g.S0"CK,sr+]nhA?8fUCnI4!c/A$3R0X1OQLf&Q*Fp2kF;4](-u;c,3bgKN7DY1Ane&^l+\U:)W4bH`QjX2qR"
%p2X&gDtLG]<Z&0]J4-(':.B#_27:bDgUhVWROS)@`1sZt<6]YpMu!uhBe];+Ta4)Y/Pb<`m#PsQbhPL[Jil`+Q7>2F\WL]`@5kaT
%G,AOt<=S&qj&@nY4h,Skn?)<jiAsT^G`AX5a;3tLCc;JhQ%XlDAj&85?&,,$&D,saW_K*_918Kk5Sh:+:sRUgam#0\m9[;W;//k4
%e+!`e<TZt<$Dgo/cAuF+$tSB9aMrl'gd2b*`MK"O'C*mJZh,r1USd_*Y/mF/AW+kW>3(h2<+G@k]u@nK(Rt(3WWPPp7PW3LXLtHi
%njd_'Ae8S<<N&V%Ai%BN\\1O80-gIA7l4Moe7dk_/[_([Mg_G!HeQha'&E!1[Gi<Oldnj_\$t(dA\QKV6D#kZ5=.!;9:C?0qWmGc
%#FG8Yr`!=.>QU2`K5rt2Z7F_7J(7t.0$jr9V4:]Z\cp#V_$75t?*(34=?oFW=4R"%93CT.?<TWeCRA_<<QFg@*Q21#=BF.\KOh-N
%=[F[cXga7op9:u[>d]>tCP^IMneRA,/0_L(XCW&"Mhp*3bVQ<a+m3lj[:/F.T^7ILf%*mQ$I2\gI,<;_Ji&"^j5MT]qT>DCK=-oZ
%g>]H*(,jdPe[;it[br_R0!)rT(ufkD:W54oL:R`SfF"+MD].gSmLC<+.+'8BiQNM3XDgnd>=2`uJ$33NjX,\t%##Q/:QgD.@$%=k
%kUglXOd''%6Y;(u[D+5)NU>jGZPP/c(qPFl]Z)R#^/^6qka)HTC&HY*RK3,:^%K91#WpQ*<0$t(2C&MNKJ5%%5k,NWgk`rc+3MrE
%3eO$Q),M*$A_7.d1H2;2N$;CL0Kp]%#[JE0Z,<r%SqcMe_ZM$1)C<;=(j6"ob,:/B_C1jK+U*/p%[:Q6(Q@Fo>r7LL_Q3ijI_iZ!
%0[-cf&.BY8\=88f9W7G#j2p)JEqFA,V7n&1k]c&$_fJ+C4fljAr^]EL.,WJ(V[he=1?l'>'t4#\YjQ31bD3dJ>f:N7cS=3R_cp$r
%$u^]7Qpu&R/X;On[C2LJh!:oWrI3KaGia0'21(NTEba-2Xk\j&-tWA6K/hlR16tsAcd^fSNK>^7S%7\!<NA.*,g.&S(:$i.ZfabU
%NR(L!EA,IgUUc>hJij#@_hAao+t'^^V*f9E.9,A"<9/arg_=J",UYKcDQ(\S8khL7C@WQYdXA6@rGOU9VGmeOZpR'`COb`oSqB%j
%!BMYs`2o(T8fh_0XPd,T"sJn)Fr%#1-LE(?OeKY073H2<'hfha@l>eY$ms'Vbg'3fcqpD[>"7g\i8I5N_$QgOPc38CPlr/PC]]]=
%Wf/=k`#a7AfmdVt.!!6iouj$UN*+]q/d!6]C>C2sB]-rUn?A70+E[`9_\dD*_hIOg4*,"t25Y^C<b7NE<eiLomlf45ekd>\,]c9f
%aj.D_1X;@P\pW,p(sX`;(Fc[/LkT>dcXt7nR)1JM9[pBhLfmDNL6A)kp2I/>%7>)I4'3*E;R'oTaVT*P?Y%+0Af<D33N'!LpXSH"
%5?@$$#0udSl.tdZ@VgNS%pW&bhJb2%gl#sgikh6'7T<Guml9[iK^06k#FFmi=lhd)P!VV"'2+X9ECDj-]Qb;EXuXHQ(Umu9G56,'
%2LI=d?kH$N0#6<I<5m8q%Jgh@IOO!%bmDl[J=?A5:YU)+]BdCD`78"/3g/BC``1#B<R0U5:H1FYkMe"4^2U6cm)o%tl3[?8!1IJI
%PY;(?q8dR]A^sh\F=7l/_4:C%`H?.];s8ldP=&"5OB#Pd'E3r"7bd$U*-3ZF+fgbj2hMG%o62Q8)4^W(H`V+WG!>6_V!4Dg0u&:]
%eL?htgqmL9?ui3mlrKtJnn@h>I!pNi"b11,20-s$Ip'>PbLs&K*'gu1r5Z/ME0!NcAVg<'g%s,fJ'rp#;6r/M("4ik@\Mh,T(,4R
%J?br-'*rVJ__H;i_"e)1/l>B[=V>UUTpo`rah>nUn`5h(/:b0-&OQ6P"ONV>B-h?q6e`/1Di'ph[&03^@`>;Z...X&[tRN(:R<7/
%a!G?&i_TrM4U[]/0pCX)=ff-77*VtJ221-s$_)iGS-YT,J@<+r``h:7^F]&;MhQ)>H=i`9'MIm-7D/\)A071Ej@LqRY/F*L50p6q
%BAq>!Ria),RR".k4fM7U/UU#$58dr(L%smI&uA2E8XU`&8JD6)#q<Q5njF;;3Z#L@P[H,%TTgd;E.WsnnJ,MHiD#_g.C272W%+Aa
%XOb5L:+S!&=86HVKq;-cnlJ/WM52&b,g\g5X@Ihq7u3t:Bl=?S!'a4("UNJ=cSpQm,uuK#47ba#[3ETc9WkT6TD2Pa]VcFpoB+LC
%mBeHofhT/gduL/E(el<qB.YJ`M>-Y6i8f5VcJ%(h0-]bTH,P'B$@V9((KWUhW%G6>,&>JL/#CZ\SV)U.[dFiGD[NeXE'kpVC'!L`
%#^]R]JJ#S?F1:qU/_mkY[b&Kf/AQE]\Z6NRL&D1k2@DKK/?hSuY(YGZ#o4*X"PYDlZ*NEQ=B9@Vc]P:tc.P1th>:TQ<+B/LD=9LZ
%U=(HT!0`UrN)7,8lsQjA[8:)"qpZ0m]bS4?G=fVQ$b#0-Di(nsRl['_>6$.lgXaKu'o1c/mhC@l$GEj_>JSQ'5->1'"plRqGicr?
%7,;]G(J_TZq8UOccFopSi_tW]Y46qA`80-WkHMgGYKXLQ'&.8c\#lt,-XN>;=u=6&)%3@t>@O,uQaoU@P-X8D<HHMJX75?*d4\p!
%@;1S<cSOFA6t8(Ja(H!DD58P;`_0Mm?@G1c+fdHu9'k;(qY-;OT1F:)LQ9YTZ`!Fnm0*AOR=24MPs`&<N6'eZ2q%$hjSH3`DlU,N
%Pl3PoN/DqY<CPKb9<<&s9/i9e^2#%7D^E@EN4$h.k5^L8ps)J&2-kY@k"5!qs$gE[ANK^P9Ck?Z2"0bOlZOb)XT6nB0#F0Y[oi>q
%o_r=%JsiYVm#<joT9FplcY'+Iim3j>IPZD")9I=ZH+\HmqRU0pjcLE"oq_H)UlN3\.e[VCfE^U<'RS=VL,f_89@o4REcLLRDc+0k
%XH^m:cV-^l>(5Hr:VHeJY'L%52lo!IbEV'3-)7:u=Btgc92WLB-WP9=T/h[OYW@]>e<sT=b0_^!q;dQ>-]gc?Xo3V_s+#5?-)VPh
%@@`$"<KS(k3AZhcc@Yn!1]P4=72FrWOnV)Oi6'_ar]^ZiHoAB=-_W"0mY]sQ^a`J5J=JK(Pr5T0A,h]*$OW%eU)./McDa$!`INaJ
%k@Z5L5_@!(_-N7LUWgTD/.t:]Q[fq1p>gO9NS%A0=j`Mcfe;dSM7P\C&l"TB.Xu7-GRI[bU<rG<&V\g2.ZobN.*^G7#Jnf>Oa<ps
%)iHuDUQh];HZ((u+%W9IAT+8*V$?LJ3=WUD&<KF2b7JV<#WNU_+".F9"tRMMi="lAB06(*KJ)YK7:`Rtb\'\%9_FfDWMY1ZKkn:[
%m6sd]53738^1Z%G[:4#aLS^UnHL9s;VQ$"DAM0u#BP#Sc.QkipP4k(SMn+(0FB&Te&DLZc9:C\0`%"'PW_&2u<<c;/-FlK5;%$-n
%&hMRbih[i\`M%29VaAO6WC<8h<@38Up.J<6n54(p"1],0pPPo+cg5O#Yh0ZpL0e,KU\V8cEEQ&t]KD(tMl&q5"FAV]D'lY83^!"^
%[[8E^4$t*cA`(#2W25R71p'L.pSG]^o(,:uGiS*%J]1ZuWGYoHN34N6oI0dDV>E?U'(d6GoXq=uGj23L>h87Qc!VT^XDdSWLWGfk
%MtIg>F2e&,gK><f/Aig[Pp2m*GrO7Rg#d]2CDo1Ohe#l@Wp5>BCZ$]^YX/m<@B4=.lW<-S(+6YNo*rCBqg4X?#Er#+,"ll6b>hsB
%Io&e;Zb[BeVcFCRBA]Z%a*B^1>--?j/5"=,Hm>Kt;5YrFS:unQAlNL.,iCSQnkb%^S6KaaQ#b3AX/f6?fVhf4eNU*-,eb$#SK=bX
%F&eK9-^IOXT+.F28X+fs$122^?n]/9#'nIf3gq>lL-ope7;INkTk_kb$R<g?s3_[.oBGH0hl>S2:uH:7PB?Z<`t%u0rjsXt73/k4
%1C+7sO;D+r7^c>)hGOQ]eA6\,AZ_/3eP>DA_4\m"j^D8#BOZ5W2[.)6h\HW+$t$uUiTf82]YTC*Fm]`:q"$W'WOPrU.li#O[3e,]
%1b&'uVLi4MJRImJ5#@h<jZ0S=BArED6KY]P)!iInLg\Kt78cPGF97*ET4("JD*#0P4*DQGFYHS,9\%E:rA(7Di7,piO<5e-nm4ZP
%[JgshQI*c]Od+@,jY':AJI*MS/VFi3Q/p\PX8<'!f,5;<I5nmEY2k65@SZ?j<IFM'jp_(7?pubE<,TO=^Q8L670Vel8hR\q(G7F1
%VX$kE1EW7nY'jleFYZ@OUo':DUeK(^:'*f)=*R3bIFbpQlmD>5R(p?*?.Ep04c';+98F_r)00-N6+le*#rnI:EeH*8dAAoUVhE<;
%SQmXH?dm-IEtW\XU7tSeT$t9>P<lXta>LsY-0>*:S_Hl8[^p<dRWL_Sodt,B=7'P\e`3[4PRggV,`o\bJMb\>19p?iC=LjK:90+]
%:T5+lD*/AH)1eXfTI"6F+Yt*e"DmL^8h9sMOch8eYfI$m5/Ad29!((j/MZU5C%afRNf_!eNgr];9RqILD)SOeOr"WA].h#,Ej?aH
%3FPW?aA%IK'Od4s=+KC?;(l=sfhM9M0Q',PY4&2``eEQMR^,?p\6M_EQ+D:A(UL]3gL'3-N<Dun1"OU4S!Aj09C;bfr]_e)Y7d6p
%PZEpfbj)sFX4E\1]i"7#2cEqK+P=Pr8b_5'XEYuF;?RNJ%e&p<g>Ml3X+V/1L0RJP6@[DgWmj4-Us]G;:/7`bj%/.si-<2Y-*^%8
%S&X7uqpG;I522Gea!mn4Tt,$.PLTG<2qb>A@7CnQ`Fs!(ZG[?<<:+IPX6a7i(gcK;5bDg[T&2M8W@3]*L7`"GK]Q!?r9G^u;<j::
%gjtBZToUjm-Zao@QI"_5oVq-LH#0M8TtBm6FlkS(2WqbY]c+QUDTtA'Ul5p4Pkm#`I]fHf&$m\,<Madkcdu)rS#c)o&=Dg>G+h.*
%rlA,?MFW*Z*-,o'F3^[72,eP'"."hN>q4U-1iJ^ml8lGVbZQrHPY^cr-Q4`&=5',N"b/:qRj=a_f'HdqlD,;fXnKV7">(1j..bR>
%S81OSgg@cJH>0rreZ,Wid1,1*8q*p@g&8QAg![F38)mEF5gRu/EXoY_.D@G\>#GPcb:\9o21`@H<Wd>,J]d.P=be(UK+Bm<DM#0M
%7d,5;OR%%rDH,"mmq:eum=TPjl?bDRHAQ=n4`;WO<+]BIS!_El5%gA+55.(u4+CfH?PbWW=FFuHlW#V(okM;5g<4'kQUo`q1(Rlj
%A-,$6Adl\?BqEu_Kl:GE"sFI"SN;?ZF%SRPR,[Kg,-"M3"17&bjoD%[oHF!.(VHTQf7XB0_%Se_!#24N]\CVN%=*RK6-o$!l,3C*
%Ish"ie%>@(pu2ZWW;L"/^\Xksk\gS'mFQ8?I<te\4j^Fn+5_P?It:]n&(7Ym$Ze>dh=?Y8?XYg?&$/V5FEPI%+l1)le"2'el_!\0
%&,_JpGcH8l&,u<QKAZ\>o`"(u55aHYs8(X/_q2*V6bgIP=0MGNpW9HW^;S<C!`cFOrl`<KeG#O^o.0[a_]SBgnF.fm84`Ythn'a7
%rHa,)r_K.]NJDY0r%objL]jj$qkcX*3[INc!mD?Fab*6G1(lQ/r9G;nlu/K4NrA:8Q\oRK(3mm*i2lJ*iFsD'J)^Z1,Su0aUR8oJ
%dbZ#VDd7Tpd1gdq?lo.NGiZYgF53Sq0[08C4\Pn=M]W/+[ckW\,e1_$GP-"ArO4A_TF&Yff67=V,f#!P4\l(a"-8RPZdMbE9lOa\
%-5;BTc@@?GMCJ=ej>err_>11A&X`5skipBT"k):9@_::=e`b^k9Vh,hfWM4+8K&?-qRX"X<Oln4d:ZQ8b>)D^>IVE;\1p8*q(K*J
%^b\n:N0q(gI#&BMC[um0-D9VNUG$O?E;e7gT+1>[/U66W3o-k.FN:VT,Q&hj\=/c;9t*<eD`8370oOV!&_&/_);hD)NLsPR\..Rp
%Ht^A1X_SeuEQ3!,?,2`9F]GsAm1p1/h_^TS_[cij7VbP'nA)ErA72-mVkF-"E=Id_Y51<es#:#ZY;t+jO+=8%rH:&V^3CkF:N7#u
%9456QI`;IUcBN6pHrl9/hQ],bHlDd-g+?SIWme`m`KpXT]&Q=[3BVEc.3HZ9X*<_-2_@A:&upYMS\,I/FDS$1Nf@m@\c9k(1b/^G
%\Ye2q/?q[;N5\lF*BQP"`jpfFK=3=?<`C:XK'?3H5nm^JBka.,*34-Z$nP/`FkPiF/4CcVrOBEW?uFH#_g"pZ>&2!dhI:2F)c>c8
%>ULLENYta*#Pt#S2km2E(L]]]J3k"T5*H]1>%"'i<kso:>HsO>?.Vi?gCd.ue<edClWC&'F7fP1hICF\P6/,SV<AA:3>Wo<`FN"&
%X7io?Zd`'`YpZTq]Eqq>88Ma['?Q\%DY%a`OqM*S/rn#U&W$QkV\K4!mc\8[-$4b<aDOBd&EOg4"sIc[S-*$Pr>a#+&9hPdADr1,
%7#FFna-8e0!`'HI.!nfG^HD,6juhNX_<'FGG8#("SIKP=JaiE*8Dh8+DR+lH=Yac0*qf9!Ga:"!Ed+mVH#.]5\\lDp.o)er*c=@*
%^&5KZVFRlmn((S8h!DYtJc4Hnl,i_3Dd?_p8.qiXltgZq7GmPA2Sj<?Rs3NC?LHn&*Ip+UVaQ)FbP_=Fl>6&al^cP+8T2%UI:na3
%hko0$QkbQ>de'[1/5WmMV0-F7ZE;Ndk$AC\At-`jSSRAck(k"M3%jgWU:2>*9knr4n+qCCRlbjYnC@N?mmK>M2+,?:h<`XPJ(Y_r
%^[5B7^H0,Ae^4-jf:qk^rOMd$RK%I*pquiU['@h!da,[Q9q!9W'E(2rQ"m&%P)*++?N>AA!A<=XN'Ld$i>q.O^VIWC+No]3s0D'J
%I2R@Ja`<oRr]JJQRHLcpL:'^F<cjj0i*Q\1.6s0T!$F\0]O;/(6LQn+X=F%-*3LV7&Bt*HLT-N%UAb198(<T+$dHWseGc'>KSh1.
%0)F&,/<dfBVmNV^59X5XSO)-@/)d1g"jhh4?jT>OA"8)ri\sV@atoH%k!Kq4)$<:aJNIMsJVWC+^2e;_B@o-A'.TttcKH3#r>i+5
%g_nL;aqGbFl/Bp@Z4_B,JFH&L+iYq2)3OTXf>XE36f_q+iMb4p!&T;1S_j.Doll%+'p;Sb*2bf2-S/@\mCZip8,YR>!P8.ONUgc>
%cq0"ohJZ>^LL""OJ_JKF\oZ4/YF`6GN<4-*F4`p,jh-e0R:5QG6HZVZmEpkneKbY0H)L;0ZC:ZQjnr$.1*A5#K*7e@#RkB;o!VsP
%i0]>18S=B?7?H>UrYT2qh&)>>S9028P"/UY*>WS+YBY^$/Hbk=eFOZ7*AF9O1&3bF+[=K0_Q^eE["!lt+.e3YkLAgJQr7,E'&3KJ
%2S_D,f)^'3IWpYU99KkgC)6JB8<@A8*\!3EU[Cl<]32&Yogq5VV(c]oMPV.SgF:"`$f_Vb#C_X/0_uSI;'3(lPTj<bp]CDbU;dm7
%OGAU:e;"k-MgZu*%![tXJ-bU/BqB4D2";7[8r%[g/0#D``\`V]rGg%0S!K^<+%O",jurt9lpi"'dG&[-%-_2Ma'%j\F:mG+GZIn3
%UiQP*Z9&@9a[X@<?p\7_gCDQ>QU0W$CliWBDB[e,&i#FeoSB1[aFS5i!'-&HCpC^6i>)ZSMY("V.;s0t`^)P.jL7PX'&@\.4(;jV
%,r@'lY4m+)-TKdS7n/c%S?^n,UPq7NSr?Mg1fT&*C!g3W;cJ8II%RHlT)bde5*%/q/Ed)/gH.-[3im;0BnVNnm0oa2nWX$tU7t7"
%(b:+<l)TtQS9@1oIEEAp1^(LPa3JSU_(OS(Dr/.Z^Go['A<AP@`IU4g7Zr*Tp;oj69_fa#kGT1a>jR%HRCs]%?j4,1Ad"f&d2I>9
%F$YC!FV+o+Hj_QWJZ0U2&Jh/PMCL?tKRi1Kn@hcZ#a[TUNr'9hAq4^^ZO;E:_4@p+lJ03m+Th`@9T%Qq3:[>o4/]VS5j4.42*(n?
%CWHe6D^R@t"-<C7qo,_ZLg3X?HAo;?b=kCn""WU+IEj)3$.2V,7#0ANFO'Be-+J`(1B9]6UXDcII<Yn]mq*R@#oLu?!3BWV#(D$@
%HN6)SUM:&K4a/OH(4^aDP*(NM1g)aYX\@@Rk8>-Fi?fq@%@r^Q2+Ydb?:S+:7Kqt/4s4ed"rSRZn1j8<#TPllML,%P)9J(H"$6Mo
%KTO*)BAVUs)jc>]J7'2cK*3'O%&7D84,JNPf-R!iEjnspoBMZ;%j195H&uZK:MYLH&;[K>g4D76G*5=$V_uTp_Yp`@-qSDV*^='O
%MTJ.'G>:DVAUe>^N=emG`cktWJVP%MK;$&P'e\J@O;?Yr^fVHW4\0-)0XPpsM_S7YUJ_%2Fb>F?eTKM/Tl*RBX$#r8/]RKQ?H@fM
%/ehV(S<#]t)#.^/D;H6J0$l^3MV^5m3^h.T#9^-"0SN7tBqS+U4+gG/"bH*?dM5#PErFd]HDS>3J;A=@7`n8!D'S*\N&c/!g'fTb
%B=CX"nDNTqo*EgH0JW(?C^Y)L!$;OU+E6G'VHHb[LuSO18%IjEH$Qnu*]r<9,u<fIE.bc>l%?VZctneB=Ak6IOkPLNJ]El.*iI+#
%0"RioIou'r=V-L%)=:D+GoR'=\@n'RKZ[d*&,<0e!$iTpnN9.PF:]?\]i%A*2%$:Cb5T_L0*5Z@P2;?%Y1abIhng%o*P.rr^.om]
%MY0gaE)P]erK+nG]-h0C_*lA473Ck)E'pT50Qqgm,L8=5YlT=gLn=1T]qWi/)K3?a0VseOb$C)&QD"ho\bSEnoU["gBon+J:+p11
%F6SX@PuAd[N>O^jG4bHUfBK=)'7?@JV:,qW4jsq:(:d(aoe,lU=r7J=Co/XRk:dc%bXl0&rOq'c,FU*l1YD"_\Q7oc4WBQ5AHY,2
%*LVV)U'ZHLh)Pb7)#6Q&BY%>:8-jV>3edd11k>2'i=!`!dM[ZI!,/%8Q@T!kZVCsRP<8YE:B>kNW=q[RcmO7i"pb\U@@Qm%5WWR;
%2t<j!ff?<Sl=G1d+*gc*%@L[grBuZemW]u9_Fu59+C#@t-BPBQG6ZkDkZ?k<IN;8P/hAm^FTF'jW'sOK:BS$Q]uGRCUTKAl&5gPr
%RWulXZ\uDO@oA1'@FKpkb?,d)@oNbsJoE=M%jl(O;s%?):?`tMjtF,lkW=h<fSTNpJomNMZ4;\4MIlt=Ii4Y^G0rs/ee,p#!'/99
%jhpG,!7Y^-KLL)jYBaNl!9fE;YtgRbB9oZ1"QWeS:6,pT>pRG4Q?P^qF?f#,9R[E&$+F[g%IEisK$LG.8sAeHfPd)q0dX-;aYCLY
%F%Y)'C7Z#6j?YhXbL3/iBk5j6QU*?T#lZ_Sb\)^!GrK&#Lr=Fh"MBpJ=\,qKI!1)t:pQ8&Wq$>bfqMo=6#sa!Eb)HUI8d>=6t8lf
%IXI`/PJc>RCaCUIlXr$i<YYBke!J$eQSeCTDA$0hSc+oi+Ad\@:I]c\STEuqG79'@-:?A)iiPC6ko<3_erZ+/LX$M2Ql(sjZWF#Y
%p/*k`K3kA%+s%mbcmd?$Y]E.eZ)sDH/.eWR=jbBCH9[ct#/q]3Cjg6=+7@B5MVP(T%qNLG)kfV_4=L@Io\_gj<)o_-(9STRfq[=<
%;S=_SHrRc]lJh/d5R-VrXM(-,$jK7nPe)RO=*Zaj3W!B.Z>gX1B`shC?K!6WO/uYpE52([<F*k$M@p)"TE2'=>@<YS]F<ec_U%CL
%ZqkCt5sRh/NhPOZ@/O0:%'$F3!,mkJX*pTt"\UeR`aak,.DW(7h&&Oc\0/\b(Ls*1AC*OOHC=MkBec9QZr#Q(C1cZ39MuaT<ZQql
%4R2cR>j-CK.4Yh31RZs@@Wa;F0#mpS2hd4;_8DIB.NNBQ]HD9p![f)14?I"JUPaX-),\;jcAlD+*U?.71Fm-";1p&'ZL2oXSTl*Z
%mV3d`_];^c62dV,aDdOD9k3R5q$Em5V7?]/m3@OAq415)5rNS]PhFsVrmXc@#:3/7Vi<CU$6%Qh9Eq+)e"%"A5to2P;Q0V%AWpZ;
%2t:_A>/(YAOuT7Yd5d7D1Ha:MVP)_(EeC0u<(^\[qJ$LV\,)HCYEjs9s5N!Es2XDK15DIYIpEs[D]23H)kHF>6>\<&KW,Xs)9lct
%2RkYkTE9tOnm>'H163#"aP?f,ePD,n@Y3mcg$3eA]RN+,.D;Fq)[e[]h)(tL/&;/&SMRjt?k<)[oas8%p(f;/%St@o!c\1T$cQP*
%J`P)VPMse!Do^uC"=E*i7bTrGoC/Es%=k"[FIL=)S0<%cI,XY6"7cTA)=_2"q8q9qWKI',^6AFmkk3mX-<X^mUlX:CWNYcDGXHr^
%Nk1DT(bMBo+<B""e2d$,boipXn!WT?S94t)AX*""1qeDF$@<'TIZpulKmAcZOb>ujF5Q;2YpAO17fY*lD'N2C3_Au*c>M,DVKp\)
%=#lR:8<Y':U9-](q(`IA_Q9<4:7[#B8^s;c:7jt0?97[QO9(h3M9>E(E7\q0EZ!mM!75;(:d.BR3H%%.8+'VK-d];T6lV2!W*tps
%-S(mL%/m\b5#Ppd\W_..gkdY2d^d;F[C?5HoWgR&ksB#nh$'GL,4eEOND$0!I]7\"28gn)RFiI7Vi,dB!uRCSgW&&_#ScdqGlV5O
%(*.p:5jF<<rS36?5Xn"mWK+c_1[852764$$`QecTH(8E_iCn=rFH3_\kSLqlaNcW`)^unf46_op(!E2D=JpL@3d;NFW#O'.mVHEB
%Ed?`"&X9eGSMTS$WH1aZ64*)$4Rs=(_oK"iH"77%iX5p",IirE(d&)o^sED.0FWj5_+k]Ub85W,rM85jS&_)+gl2\KlI(Mm24fD)
%KA6u^.8s"?X<U+8@8c*)k8<fQ7U>Z9_i:>p1A6[N;nrt=73RjrbZ9-t72khaVT9`%:H2%T'@7UpV]1[U^N@c4MD4l=ih/e3$l&As
%)Mn:3)1jn(H\f=LZ0MDe0rC$/B*P"XYmI9I!JI;BGLqB!3#Nn0//a^b^(m=Tj$FJ'QjufH0;?,@2?KaYO?!T#_9Sum0VCY!4XkFX
%^r>IKaCU?$5T_`I7'V30FEaiC7R`]/[m?MgMOO]/@7tahQsa</*->tB""3:[\E@ju=Wc5\;f54o6q9oSs#<F$"_>F/U^mj+6Z7iO
%MZVdBcj>[$.(`,I.F^BO6173@K%me,h\MWO@McU$o-,OIbI;dE=VH'h-u'9?m7\pi)"Pb5#bCQ@05afG_T_^b_39>pLP$c]`Td:r
%IMgBgl93M9aET"!"(%G5N:jK!@<D>7gZFOX!u[I2^kZo"$IUbX&f\i>as3"cMl\/ml[YH3_&+5*NR._jl%Lo($4H?>(j$,G#0NJZ
%>ZU_]P9+=TpS3^%UORE`!W6p#%+d4aM4\%aK"B&0BSY-Uki*eF0>.r46d.&3Zd'#DBIPaggW5R52SGdkNnht'5R:.>#NNQT+#TgA
%G+"SUar;<[<eoj3RWRa5d-o"m%,'Qih.Lt^1;6+?)'e7)a!_Ho@iTW@QqP@0_Ou[C/f?DG>c?%`*[:NKg-<f-B`Qr[+OTt",R_iV
%6"dR:BM)^T,@_?5!K,Bdno,K^#MA`CS\UoE8p<YD,EV8YkD#N6-;=:MW?Qoc%@uAJ;a2/p,fFHRSnZ[T1A)_6P=us=0`('p.,j9d
%=O]ih(dn=GKMFTVUJ.HJ5IfV/S]l"ZCB$'^;eFji%kcDZ%rNo.ZO_BUjPDEiO6f57T$W:Y,%N34l+0$FE'`0[Ia01"0*H3i0Hd=B
%5i3IEKM+ob7dcDeC&AJ5O(b5K&brfTcHqV5YteA_B"bd3pU:a#8@X3q$XZ#kk<73TkR>$0FQH(LLI'bG\3JA)5X4Vg+:j\!),G(1
%Mdp3:*kuL3=G/0F,Y'SQ!J*:cN53?RK[4mu9JS?H&XQ!1T*56f\X=7WrT=IpkD5[WPUD7CGlCju).#(uGbc!ABc\%<:Uh'u;!0N+
%;][(lb+:'VMJ=nY_sq0b`,[5]`DO+r31(Rbhs5q#Rfd91Q4\cb`*o!=4/;?41NMQON'Q][:=S1k,p#&[&p<oj(u^\-UA#8n1BS7]
%V(BqfEKXtTgduf\mL3%n][0UTr$&Qsl6h4nbcKt^J<Ihn%uWE\:lqmQKocNL.WHZ"aUH8dT/V/[gCQ_7R',AfZadQ=&pf]7'3Oak
%V"Wh'7g=G/$jt<(hkrFg^3n*=@$VZJ6+D,<nYRQC18nK=qT!lG&Vdr)?lr@<R[FJV&cR:Rh?6NTi]7cC@Z_4b=9Jg/K$,>TQ>,0d
%qaH86["&\r8<IGu-:I+_l-ZlgdlhgIBH]$XZ2MGU$*e"0P(hQ@0@$oa"ZsnK')pO/fRCZQ+,Q!;r8-hZ?P70/[Xir<!rqGR>&N/&
%DpP.a\1Lpl:04!5Wp8*elI<A%nKJo%Zsi^PeWC8sO^fLt/hsT,j!htUh$AYXNH-"-?qYp#E*I2qfAn8fLhb8fVh,"V[=][H'u;;K
%U5ajlLVKIH1Pp'FTOes4G-W*K72S@&&r0=X%?QZ'^u<"8C59!1Ho2lm^QA_GkfD_Cg/sr6+k3`Rdm^VFJ\ImKX>Cg3dH;l:M.-te
%SVU9?M':T)`)?_i/);Z6FY4_%bTE*T.D<)b>c\]F;jh]O:uTPkmtga4Lll[+*_<\[+Se'\lr4h;_Nct1Jm_B/T!V2t0IA_*V4^<a
%6E+ne)A`YT[M3@Rd"):O:pQ*%-s;UMc]h)=`0U#bfMWOO*(YWBTuNgT.+4=S*h^D>%`Eu"+Z]f(@_c0UF99XB0YfT2(qAiA!u]G'
%"if#9%]%mM8:q0NiquZ4fTV;ol@KSs@W!l$ad%2!@1`R&a=>9MSV&WS[55bM"C:6V9*)r)&6"DaK46VN4C]!6UR/P<PW4'FQHX-6
%XoNc1RRHF'F<\Yf1*Eq-nS*eLEgDq:AA*#V)+ZJPfD0]*fJIjlO%)HLJlm2lnFV"q$\?1XO(hLDLMG%TFoXc8*GroEgt+q:o9;XS
%;Mu\<G*!sY,GtUFkDKp.htIipd[[.u:lP[VG(=Fda3hSH4u_8\-_O?<%L+['%9R=<mXRP8Ccb6]E_/Zon1?*V4_^B/*$hP+lPs8@
%T^5H,;CSRZJ@:Dni-9*Q_%YV2eLkrlg"<PU%6UA95]X::44nG(JT;:rj%suZ8U.2X<!n_+TH?-k+GrMe"GUs]9pquu1&-o+pa$XT
%3debt6#68tBEaQRaEKt\)d2*b3`IgS9p^^-Ld4a-:QtZ"#kVuEMjOhd1hj$F$e?Ym'M@p]B$15G@!ZLtGetRXTP(2W8!^1%)+95"
%UsTh-Ou<oq,S$'$>u%_r,-'cMBMcjqiI2fF6#BFg6P+R(1_N0\F=o4\TGu&['L=3_YQtXi86]:N8.`qAH+'I^T3-K-k9"c<C\\m'
%5cP'E47<F`?+CbWE<'QZLu%S?)&#uI([)f>TFG0e%GXo*+L`Gg>`CEk1T]V;`"4?Q&1YOJ.E/'$?YFc`,*gePEm>jRhW#b#ChT6Z
%9XI/&+^dpYnDl)0<*G_iVg+FX9iW\VF=I^_:rP95VjJ>O9gY"+&NnLaJmaYsToW!F-c6IX,LuCAbd_$aSaK[mB?5WJk")@V1h7[d
%P`ucsrC:60<5A7N$_RrB,bp-4KYd@+?4TC`3#/1;\Irh]KZ]p,"Y@$Vc`?I9$+NsM`'"0A+A_bDmdg#VFE<I(<?],P/:_'&9@/WZ
%,23\r(mBhfR$31M#Psa,;O$R)E%0(#9Ihqe)$b8JH]5b]Fn+NM$\CISPV6ct6[9O,Qm,nd#B^H@V-LFLA0SOh@pD;%!\LtCGrdSZ
%,<p^=2['D?8`t-B6]*s[Pfk=^$6bH;K@Z=.DqIs"6P3QQ8J1`nVHtB(VO0dTqC9]31S>'BfqqYeA1A8>P;0k7T<ocg=0tGd%DenT
%GGO89h2i_T1NZZ_hr@Aa25HCg;S#[F$j>:Q!NlGJT3F+S0I=r/)j@p+dFaU,pA+7\N/l]gnuBSdC9*Su_u3<6J9V]![+.._$<:I]
%P24@@/qJ?&Qiq1UJeioh]5D.FKT74,;Wr'=*ar$q6C?\G^EYk&D5BW(?skH=bIBT'T^q\F"UPSSEg/o+(J:%)RWoE7fEdG5Qd2KD
%L*1Mt*@AhhEitC?$P_l($M]Wh'3C*Ak_MCH?MA[a&qLXmMTA!`79E^HEWUm>PO\H.jFRU,p^[`i0ZHU&l6F;s,;A&lWcVkTM\kO7
%E(^-H]Z0%o'?>/6ZS06daD[5^bjtH=a5BO%,2a%b"OaE]BQFFf[O:H6du"]5"B/DFg]Y&ZIM7Q60L*iLTS78f1^K,X16l:kGj%q2
%:f/EcfnFre!X`?]rGI2po/rI7!4p>Kn[XiN.AM8!/4q9T0ZCuL["kqOX`jX[U2[7O3CK14m:BY]'F-U]kG-b>`<!%'',(k-72Hb.
%Lc%4=TI5Kb7$nTT`mbYbFZ:d;*Fb<^:]+0RjOpm1F;,6'[^>:[AIIQR6-/+Z7.C87BPil!UJiF%$>u*TE0Ze(?75fi8s?lHfc#H5
%l&'n#@C60YVNUQ?8X;,#n^LV`E7BnZP"1m5(NNKn&:oBaC"8FpOl._pRB$O.Cs&DJ+C$ZpO,esWWC&,\;W@nW_B=tuo-nFp,U:[0
%?G$1P)DUekQIo-%4SD+ue^hRr2,=K1%<W'/S$]jra`jZhjYjC)I2.?l@om,hKcpf;M816Bd,pI))!I9S=Eh%'^l.k[-!DPq]$&Dk
%d!3B-`Y.>)_#uIGm_Ud`TP7%dh,e$)KNfpZipd9h!l[/65#1gLKU.E_<I[g+$^rh("i4*WbPctJZ8;d(W>u$B/c)E#jiG@N!Xi$o
%2(Y?:%jVJB86Otu6.F_M:i\f8Zh&E`%tVGMc"ZuQDb!38),H[J+0K'd#a3a?dt9bdIpU-W_sl3KU906u+B9VabI!H?Jif!///&a0
%/<,!':L(\\_\TBTMMM66e^L7f+G)D;PA0Q+)$*/SS1/aEarCGFpO3r&YY@XO!B\`-!2jj3HnWTYj)S]`R"363!(`I<Kg#t$#d`R5
%TH+emO"aN+K:#?+9jF:g&2TF[Z\n@!6)\2r3@oBRaTGHWSrp$=H\+.Q8m%$I=Y]udGQK(L%c&lMA1UW8Y(4Vj"4N9##dNk=:]s4>
%o/*X?`;fY^loLogo(^b78?FDdO]<bA+V5InEqsu;SN!ppMR"'#/2]%^Jqs@<)"PRoZ@oaXLKIOr3E4iG<]sCEJDtO0Y_Jj!R_ruf
%]&bOjL!K+:5r"FZIp0QuF,QPj"B',fY]`0h#0lu<![WLR"'iCX(`uUoOVgW<-b&^Z3Ms?,XVfGZfjl:')6"^j?L5c)F:i5mn@lDi
%C@Xbb"GSCU9P8Sl6_I='GX>p#X_qk3GZ(&i)^&lU"bJuCR^A=fUc!fMUTtm?%(1n^c9-DTSsO5c`ls]'!agF'd)pu#/-_sKIr+IB
%nP(`6nMl!]NS?n%7EkX=!eV83+UgtlR7q(_S$DKX02cfljcLr"[Oi^uA<%#(;(S,J0+q]R$=]s?ASS;_#oR`u`_9R51/s=\;F_#X
%_@OIO]GB=<WQ.Aol]"/"dcE:,erI`ZQjp374^3_^4EpO!FG>/3QH88(lHPA$KM3P^CH<I!X72.2^c#aP8Fo.gO'lI[U-rmR/Y<e<
%;TJ<t(_6/5aA=7@KNOaD0n'0X-K1h7aX*63^BlM*HqDI?ME5aGc0-i$+nB;B>U3.,'+)[S[kt2#.2@e`bRgh2Sk=@L7^#G0NN[@t
%&M=MMWT]HG/(@64nao(9LaXem;5I$]jo#:W8VPXqE@ufE6ff[!Tf+N1"Xg*:VoST_nj=8qU!<?U.c1gfM]UhSQq6;j,1*co)_-%7
%!nH.aEb>sO/!j27DO[WS!+?Qa&5RQ3bd&WNLN""X-@RLX>J/=5Y*]3$.lYS2N,.2-Fb+$0^h2;g9di>>3*`jcW"cBQKH!NrRYcP-
%^4IMM<KK*?.KQLh_r10sVE3-2>W$.Loh1\8#fB#TOUbu;#b4.+[duU0U+;>)[*m8$TMX^X\/:qo#fAC><$MfKAq^LC,1)I?'q/sE
%)4s)&[nXDL,-T6gkqi[)Cb<eo:eO*NRCO4F\0OG7Em1?B@9`BX$3=,Z>R76b\RI"tI;%@tg)9'fS)<,`$;;m1!(WKJ*%1qNq@S;)
%'b/\S%3&fYJ0?r`ji&\TkVK%9"0l'I'l-046cIaj"&F)-\2Xr8`[[ZU3kYe-<H-#9'b-0a=(Y^L#_I]5:<MVD<4nd?Gsm986Xk)h
%oOt,C;BR*Gq7(P/X@R:T[3f?2[\Mrt.Zo?rOQrj/9%H6eQ!k9K`tb?iGoSS`&n+WA&\04i!<rsD/o2X?<G[_7h3dj=5cSrS0LX^S
%7u-+/s#45`N\Vk?cuN[NUoQ=(h5FD3eKT*d#X#XDV'h<Uq8P]],AZ.:eg=rp3f_]P^(uP4Qk4ObNE%9*Mp79k:t;h\$410Ghj6pt
%l<XfTGN8k^5iRcdYiT:R!^/P%$<\dq;0K&l-+BgN^aTr*)n'j!P!,(D:`(0ZNfAkt&XuB"aLIY?0SCo9QdXh-#'mUL&1e#%b"Oh$
%YX=ErjS>+SYu')oD9Cqj,\2_op%!YNUCn@S:!&R,\3(D?=eLMjX`VVEV(eZ<FUk3+"cB!A%#f46hGO_\-=BBDbOS\q.IoiFKiJ18
%oAoDVJPm:\S3THCZ?/N9ECb/O<aUN*Z(E[J1+<l@@1XWQP1@P6e7V]b2BcNMak_%b7q%2dGYBP66[9S=l0E`B-n`ZkSHJ:^.h"1=
%1m#Nqb!^Ek2)gD$$_YO>__BROL`8,N5;!Oqi_liqJXBZ^JKbU)JXYR.H/U7P3&d(+-=l\Y-:LfX]?8ea2&e$\_]-)QEIk\M(W\Zs
%Zo,d-YW*):k=_D]ab12Z=4c^=IN(Z\)KD7pMbFAJf2^>(&KhYHVcX1QCOsD.PBT`qUg%RRaFdUcM?V@j)jujcL#h6KHIS*l1cUfF
%q,SCPSS*)[_2/;n.rS.^;P?E44-m=n@]ObOi[@;@AYfl9SF5q*/-fpePq07!Q#mT>crG9"1n_`D-jOLA&Y@.e>G:,\O!tgCDLb@Z
%Pn^DJ07+$:%tL7_W'LZ@8kWs+iE47LjW9&=]GsK2'B(N;>;Q0#OP(Oa"IeW<%TQ,!rjjb.dYX!ucrG5MV./>gAYK;f]5i*fba)Y,
%5eDTkh.:jD3`%i7e6)*+H*Cobg*@%HKb4ZpVJ2)>!J(7\;dPuZLO^4=i?q#Q3+7[F:`:Y]\+$,R;'>Ul%F.ld:nnua!FA5+H&<!L
%dsNSh6tQ_E$@,+9S4OGGo[WPDed=kc:#D)F5*-pYa0k$3<L5IckZ'768/=Z;]krZ0`Km2iOIdFrPbEe>AJ%?<U2ZL%Y2>r4(I8P#
%kBI9>lJ*)7+G>=*F"\8Zi%-pl-`9k5e]A2b5#9F_%O]6/N^1:$A<[R276V-;-fI_V0s)sme!0Y==?G.NjT;/q%tIqoieWK>@hLD!
%=WE;H%Z=V!r`%*p3%W'1,toMC,'%qBmIKM+[8dJ\q8ZQk+eG*kI)l#p/q?!B(F`BE%[X52"H(sR^,ukD1]bo9Z_g<Ab&"9b4:&KU
%NB%PDOq:$l)6c_n^^r1/K=jM2o<Zn#$)d<O6&VfG"9sI/Uc3jl`NAAi5OH<u%UfErJ0Y@hgPErrH:qPho<g@h`jcu6&I:mkR5.T4
%`j3[g^na/$0M)hH5#<Pt5cgJ:F@XB?PMl'0SK,_h<DPh/I7/oTSgcD81J1Tu>(Y4&&sI8^Coq;*LRW>D4lJ.ca[pUl9LnW@P(&W%
%-+<jp34(tegN#"t:JYBfeV/EY.0@ss8ge']b2Wk]M"q/T8"LjX^+pm+Mjm=J,%Y(7Q2TYq[C].U'?9ar)_so4]fEGG$CR&bRPH.J
%4<bHMd2)HZ"uf0R%](sTidp"&%&3k855AV27GA4sT5,5D6D_GF?KOT8V#.lj06gg?JYlp-Al=uT&0Aubiq_S':EYi5D/l%P!.Eak
%]/[ALUiPd`dD[.#d$Gp8Le[+dJ[jsDPrIlM$!b#nkhK%j-#hs&LpLdsqGMp7.US5j]@+^)R(/aIaZE]tK=hZRJImo$5ud%ko_==a
%"BaG@n@1jt/?MI)f5C-L!)qA)W117^F<S]eG<,Gg3T@o@V:-188e.79#=<P\87'Q\Z>?5IE$`g/Cf0[l+cs)5YS'kGb/T_n#9g8%
%7X)R;ms>rW`ZqrL3-"K(<;.V+=XO]<<^OF[9-p;p.JDh&/5m9n#blZ;-8-Vn,cpH((dnRs/]q>ggMG$E&D?@TPa,O!i@3VJ#^PCE
%aJ'N8E,e-/>+SeM#Qi7n@SGTQ'\<G/0gO>jICW?+[=4?IJIWuqP*n7$\&62LU[@AKcgXOj^\3A#Ics%n(jP0f)ZSfkZHk?[UK]8N
%"20t&W`O0^e#,i(EbAR9/0#h:3r;c+3eI7+P'`KGFl>h1l)<;N^*s:!RG*>HP<?^G-)`4].%*d(&HidaSULHC#o08!k(#E4%X;hq
%.HEp;"Y(@+M_RVVmg,6aZ*/%b+]-+AQ*!Il![V:"L^#PuHtfJ1b*O9]@u<.@dhW,]9t;=FWeh*]8()5DFA2mq@gZAr8NbD[.<tpf
%Up5QKDt)l[;D3"bm>;8Br)r;'$,XZ$SFgq9kc%[N0*AmiZA;7H`=+8Fj4Z!2i2_do/jj\c#VJc7=Gg+^,,rC5@/X&9C^W2:8b&Z^
%6sV1!k4i*o_Qm^s.?R(:BJkYqI`-.I;^ilmV]A\DoP9jW'[L>G>TbX:d)hBVk/8<Z6GjR1SrHl&.aQi^n+GXY='^asM>%]o<f,CZ
%49V[CG;hSI71<%*\I<qf&?um[SKZ@D8W[hS4(>8Fr,dDR8ISAXb=q\-7e#^J&WP,bo'p"D^DL%fI<bsk#dIC`L,`T$5S;G;d(Dso
%BZ*$1*m2us0HU+]Q>k$1fcHG0:M)/\jXKdJPUA8ID0ZcXC8Ymb&>XE<5W4r&':;D;CF!>H7\0&7AE&QB0"QSl.mcppRiM3SN%0K1
%bqQ_g-k=5WabDoKA[4o<A[9CPX#^S%EL?Y8KQ;b*Kq\XoR*73>AbLfG0U9'*9;'ACj9N0:rKl]H>/j+KDmf(U@M+T;,Trg58uZ6^
%/;uI^njM22nH195/WP6AR3<67$u3g5(i3%51o?(6;e)*Q+9MmH2$D.cMNSQnZ6TtO)jKo@7D;Zi)pG0OA>Z+kF]m-ll,aWZ(i+[m
%4X0B+jYZlA7G+u#8*ACm?7V=Y:q:XEN<p1;F^k)t&[<\q\AB!joS^BA9X+m1>824W]O".L#JMjj'6it,>a?u'n3C%RTPn<ln;PIU
%NUndDB[=.1UC?]D_<+sJboeI$FLW=o4;2I'6dc[IA!!mqgP)I@kP4IG(at"KfuCj.UE\BPj=2LFipNA'nLt!Q`C68jFJHfdEj@Q=
%Wr[*p>3c1GNK;dMUP_R1(;2F*G93+WQ9gplGT);nA(CZ-#@R'mU`6bI8HWoKLA.rt,cnp6Xp`2@H]4D$`l,4mhb(C3/'O\f&iIf_
%;dF1U;bNJ$.gaG!j"c&g8o*d\EK'hQilO2h";kgT77eF*O6NZ$`TX!.R$.kX:oH<RA'r[^$lgs[$_F#:`hY.!?NH')N"p!1\hjj"
%F-H*R!R,-eQ0-"fAXjDfo7JER1WE.hBc4,kA2>]e)'*UPX-!\]R'4@%>q(_18]!joDg;Xfr`bl/#UIaMjM-=lQRJ>/UWfToiA#$Z
%M"7-^!Q^FCFM&H7(kC/e>7Pd8A)';-nAH]-Mk'V70h:[&3!eB1_fWTgfeu2\T9bMpaMqlj2G+)^kV`c(AVEf]!e(N;0m0%uEP38;
%0t+a>#2aa4,.JYN6hdi$j-5a@fjFgTJlA(5mLH*WU&(YQ:1.4n5DEo6R^Tf8D.(d//*KY?nL)ZR`[r4RUG7P9^:K8B>K@(h^Nman
%DsZsdZilW&:bcg??cKKI?N#.Bh&P-$=1rGgZoLKp7Kc(3`*!.1M&n_rmQnXR!8'EPUTtfA9cs;m;Y>)kV2i4#KU7Qra]n0Ypd/4G
%10FnfcYU?k<k0dbS%;_&2\tQZ!;*f.d#>U&H*_BE1h3Q:9W5j'?6=-f`R)XDW]pjp2XeN'o2aRM@5f'^0W8MB2[/@F+NEmIQr/^,
%#T/c@)B=t871!;&8t=hiV@8uYYt'p&X#1AU4j"Vq#T0H_JnkK>[//,fk5d8QNp/mV_f2;`OQhRu0RgE_JFTV%#[PdYP=ni-^*Sd@
%!40pga)RToF&;@iT!ipk+3;7XCigJu^*C-!U:R1TYENocOA;`Ce-l`Cq-o=_Ls>&CjTm7bf_FI^MZe,fJu^3W(FTj=h^(Xe0b8UR
%0FVOC6%1Y"@u/[#$PYRpncaV4?D8ieH"%#o`3Bpc4n:F4"9quV<$2H7#n_j6Ra+2AaqiogW=ju\#Uf^&0Un87<L4ob#kr^..XP_>
%d#%$'U!)m2TRKkuni%NGoiG-$0(`_'@agJ6att4^cs`_,-]\T;*,i"%g.AFu(lZT3o_(SF6"U-Pm04mj*la8UR&\7FRf#TU"I/Rn
%eN=t9dQ#cNd]H#kbOT""]tAA+-4YfCHn>n#2o'Gh%a5_!iV_LDg'Tp/mO][5OrFs'=W'6a</H,C?7?Eh!u6k?d,u!sL`[4"Ys?-e
%P'IWl7!ur8%f,g!CeHa4gVT.'J^OH_\6)FAVhnsTBM[&;W9]7'f[M+"Mg%P`E.(E>j_"X\,Eoul-]f14c]@o_#.hN6@4sF$WMD^I
%e$rP7[<-Y@X,1*6ZKU`aE#6AKV>kKP`dDp^$@u],TM5Z/G2+H^!`PY"Y>CjdC<JL_Q-.I-o(&&&1IJ"6..9X]oFGN/%PKC^G?]\U
%>H;>8_aV'g2S;"GB$&RJ_7O@jA\R(3.4gXXg<4"BS]87?,Q#a'kTN\=^.lN8q9!/E-[BQp["2'V>O).n6p,dHEbVE2@)iuGmpgKZ
%bN$]lp$gV(q3]ASZ6WVh@sBhTm(!]jc9VohbINuNqtT(eMk!8I(*X6@@4'=&?TW*H`7A*29M9U=:TMV.OA`EV:ORV)U8S[VAGbUV
%F<`?)j;&nP*+ot#N:3+tef3X]IFe[j@d9$g#,3jqK9gee&d6$2G*O)+_*-jN3U;\Ymm0S4driR0S!=73C?W-pQ<$r=peV^qD]EUU
%;5/Rq@WZj"Q=.*pI\PUa`l.,0Mct'3](b?-BkO8=WYJ/'7RmWPe:ml0/E70;`_?BlmT[,*=""-M<@]u+n&AAsYM3q5]=C%dVsdgt
%\QY\3b#T!rph?KXEbN$dJfdL6^e/$_[[++'Am>WO2cV?\qDPm`6?/`_02W,#fW`%gMgiUZC56Hmo]$35c1RD@)g2>3d_9t$"52\8
%BQ^O5;4D=J%(.@g!Wkd%/,OWH;u+;EWEOo$aG.AH:6NF58hc8mrB5hO$&3E/G=1#iIIF&mbZ&a=lTCEK7"V[OUL"D,4T>2)Y-tl'
%>FGO12j[aRO#Ek,P$P7?'l)8%K8[.O1>,M#9d\G'/*!tTHmtEN4?L2Wa(\DlHT%PB6`K.IZc+21;)[dkE(]6J[6cIs8g.n9W`$Gl
%Kjm4Pn&AQ*C2d5:;3bakGN<Ml",R5Y2t!(LaI$l.@?"p#q<KO+4(i!b-.*$Am1Thr<[2#>7aP:/k4`s1)B.l-f:aQb[(AG)alU!3
%Z85F5>QR>q8ttNA]jnU="DWQ;cf?V0>.Kf(-rJImQJmNq/,9ca(ouisAP7;pVHb_&P&6OSU4S>hc3.t9R\)DpVQO1]%465ZqJ-@h
%ilX9\/,.2*jX)K\0Rep=QOD?nR;4jNe<sOZ_'P1!"6drT#_]%g>jBM/^0KsHV7t_)h&g9sI(;Xt)&Q^ue/AC,0%hBDhk/Yn5EIPd
%T#sfm%kdJTh&uPU>kO;E3s:F*Jb`QQ9l/&r-tJI36sbH$]N=,30@%#S<:b4jH>*P!bKa.hKktIEld>C7h40#O-Ba2XM&sh4,\'@h
%eL,Ykerss3^6`0faiS;3en-iLn6Y!<@iNKp?:=)kZh\Y'@_$O0_5Z"792*YO/gcDaMKZ\m\HKt>e_/)U2OE<lb9e0)XEc9.ju&+_
%9Kopq[ai)0`:.UFRi;Sq>Kg-VPY9P1[Zk<%NEpig4u<!7Y<=^@0'0\`@+8aQ*=hQ`iR<(4mRf/^GP0<'Fq]k0hjo(ZCb_*bot@^e
%G*WN4g/tYRd$9MZ`br%]a+W8&O@E#T`RFQ2FQa2:\d[86F!f8kX>X`U:Nr]Vr?_OX(i&r3nCIR[Z<!,CfLa(jpMLBGeFWZ?6(HRE
%SGjQsX0mhEJb<45%aQ;D[Sj%u:$6:`"uB*PYm]$Wmr`-F:tqBi[.Fo.jZ&W&E&Wp9D?NNa(\FSPAR?KkEZhKTj;Vqqf4.[W8@*[Z
%b+<0YQ;=R/oK:=;9e`#bNs@"8P5\8JfhsF=2coSG]+Q+5V=um&iSFd^,e+(ba\EO^PK\i!fNV^(=L,4Z$H6hE,P-KW1(u4_^mrLn
%@Bp'^K3U6[ZWrod.Mp;*&h'_CF@1dUN2=Cl:PICSh$6Vo0d[WA8&ornL0W.MOBLTMcFjEpJ+qle`aWfS!R?9;_Mdr@332NBH4kjM
%;"j`^hsF4$C-@)kq\-3kr9s@RmEQUa`A?EU$<lQTkQ2plon4CD96d;sS,l0`(f.qJ"/@o@%&WKS3d)f/6/+/[/X>nGh>(MDQRq"A
%fVM[0gQ^W8Xo%WGG3Q9?fik?"'XP@JFM:_d.6B>I.VCdMkRnlC%>:Wh)Y/s:n<Lu,Fri>c9k'a;L4(Wcqd.f"LoCiDN`t?rMS56o
%>OXE;:$mU%J'5;hCXMU_,KXNFJZSU.+BC0U]0=&=L:tgVAAVlQa[38"/7YU1]*0c%9)3:Tb[p:NF#TAJ,bSmHHSqa<nR2'0/$gS:
%m:t<H_L9I/p1d,)p0Fej`-*a,[=k0RPc'`3)/@a'EE)Mi&To-hG%.1B.i_*cBqhIfj0/Y*Ag0fd-f1k)_^LdC8QI1)S"6-fP78./
%)m++`L6]RHd>'(kIPVG.o*FCDHfj$/@)6i1_d8LY#MuV]Sjg(eQqkS/="Y6l6Vs.e1e9E"qSGPA%9"TGP/.Q!p`dsNl)4;m,0oKN
%]q/i1$qM^;Or@m6R#5p+hAOtTHYZGWc[b2Q,VUeT,T#PWUNHb`(F;"6\L:#RPNJU8\L9s8gSDA.IHKj;83e'<>a.VhZ0t][0]f#S
%)9eaUe:X?NP%ZHDI<Q*8/kU#KE`%u.Al*[L6CuU6@STXl[Hp4poPuMg]6IYV%'Ob!#-[%+i%2g@;UJ,EL8o^]VX8`>;E^;Y$QL<.
%7/`Ari\r9NIYOsap0q,%l)A(XY0'Eff=I)[?7OP>9L1/[;Rr+9[=OETf2_m7RVSn5f$@eWO%c!7[8a/K-e2+)/N)*WWKp/a@?G=$
%M9t*#S8\/VPU)WJq&[Wfe,`sgNOn":I_(LO9L67LdVT]Y):p_#":9I'd(9qPn7c`dAW_O_fNC1u0CCB'&+<f^gOMF);#5('"Hug,
%:R>9$A/M]5/VVV@I^2dbrSl((>1ZG3>MGUFJ:lF]=$s%6?tGeP_b07CoX6BsE7R?a8LdT5`DCk<XA5'N=p_$N-'[9Q-%g'A9S9nF
%[qWYX2o9e6mmd)g=Ia.M^%4M#WVFn[VU9@rW:22p]"Q53:%Y1MJP"is2OmiX)Ljt)8&'!AQ38hU;9N>eL\:Znq==/O\I,M*NnIHR
%C7b!tQ\&V'*8NkPJHXB)rCIiBIh2?*aV\3X!QE&dpWs:=0SWWk@^.XIrB5m9CD@cj)\cH*pY%?+.Fb5lo<fj4A,s#J@Lm(DFQ=V\
%?Q9D!3J[nP?*8$jdkAE!Q_+40gA11=QfLfcJ,<74VWY^HEW2HAQR"`om:#K,4o]B039g6WHN)[,onY!2QFS`D-(1A#p1_I@cN@D9
%R;[E6S"BG!D<rNZXka:VTuU@2MTH@kMoG8'c9j)tp.a)1_.X;dD^H<,I>=EIW!P$)_W9co28>tm!\^736o6amkaBt_5a9Sq-Gf@G
%b*DMZI4kEn?.0-E)'YoAGXTGu6S+4YV%L#)%4[@!%8):)I9gYR8&u<G[:u#0O2>G_?eMrmP0]IQJsD_\#eI(@YIsBjTj5gn2HKA^
%)p=L_WTC[6)F*PA(^q%11UD9?VIs\H?9]:]<jH;?\Bml&S9tqJPq[Za[I%t$Anur[g+a;#4j?^SarQHr+e].(m6MQuF(?R+54j!e
%TfSC`JULO$[$q.\3ce'3F^jE;7._D0o_#X*e6[K8"q:++"rMJS"#"BH,n7M_JX84_Op56Q^2QUF07t!a&RcFrGS*diMSGs<QTk+.
%e%eU8JX>5M_VrW.l'h\$DW1'nF9JQn+271g&joi@@X)e=/pbU;Q]c'eMbPHG&CBmb-Ba<2/N1um3K\_sCgu&RHni"Y-B`!Mp:l&-
%(2>q;KpM9&<&sZW5jNXUQr[\]&*5bZQ'd`XWDkM\KWd6u\hU>&1gCc_\ldRkqGLLFWE3oIC&?cC;q[#u_=T$2YEU5"_f[Io6#Ear
%<drqn"9X.E4i*%#-X'*4=E_o^hQ^+E0dM"u.Q-M[mEt[VX#rCFc.?nn<:U\/7Im,=q&M<3=/$3ZQdm*OB;"-_AeC(i#%pe2%rDk?
%2!11k4*0W%_F1+t1srI-qMs6#"uDN?Q3O0(p1cR^bY9d],kbUVc,!qC87E/(clS/*(hp8:1la;@Sq*0I0a>^s)>H0\0EcBS,\'C*
%(k(`7%bdLMituJMUYf*!NFSc(MuecFTSHRk-;$g$rNfr%cR(0q>V00m\Qh[g`m"=&S/?so-UZ$.E&LL1#*C#p1,*if9'+m:67pe=
%oGR7lZ/)!<1!pa$=R09&/kOH^dd6T9fOb@$NCn-EX$N/A"I4;QZdntrQ2I2Zq,/i%$WkroT=7j)iE7VJ[*VWQBIGGhe59O!Gk"J0
%SA]S#pUSeGXH]WHL]hJDX-!g'iMX'N;p2T5K=XiMbb51lqp`79:H)j;(+\m\B=9QZ>D0O.bb/>f/%"3Ie?nF2P4c)+]N`"]jHTpA
%PBd&DPjjrO0E[O.Q"2RsT'hkS#lUC^'rgE1X`!m2#7<hATMXrbQ4;Pf!Y-W<`=GEh5!cL%!/BLXUCrLRV0tD_^0EE*Oa;(=HU+Ph
%Q[3_P2j\i3WAh<%hHU,7,k^;S_4)C\oWZi;)]X>[5nT%Vo]HjG.WsoPG:n%$;Ko9`Z_["o!Y<?m-?h)i?j=WA)eDCpcm9W!s1<B^
%QHKs=.bQ)9,5(,R_4M[T2bPDMV:1#)]m!?f?D&C%f>%iC?&>pPAm/8F!:*8LE,`]>]G@A07W3n+75.g=>EuB104o;&2]<Z8T#p+%
%[DQ&l$E[<DLPn`ue=p6Ppb(OKUBbBQ,ok7(Cnp<XnHO"M-!c=Uf/c88hOIdNT>#f!c;7^M<@VXlA[l:*d(_5pF3X,X2N]-oCY^L1
%4#iMhH@&N%&:CjUPh-.Ahk=-39<`0jAXcoH-$frG'&Tk+8$>CK+CD!,>FE^tnk#6)hE5pgk;A4:YAkR"]p/H6ZpS0`K\6\*?M:P=
%oPC8.5h3/A$gT+;2O#l3^Cl:5[C3ae&uhNFeDsa`o4_uk[*;^Y"5,1@P7S?.@m\-FUbt*tG#)ijoX/8WeVe5K`]?XuCs.BR@;RrH
%l.PhE-qR"t[>/A:V0l>HN4PfS;/-dsU/@0/6jlc2DR"s%g*l7Wp$-t.@tu[u^PI0XrQfA6p;2X%%X'3rI/B,sfDZhs=->;F.N]<C
%KAGEpBU,%u)hZVk?GZVAD.7!_]b\<!PM_h2'P^Rqq*ZlH(apDm4@%a&qQX/$mE?>L\r`n3lskUtn&dB,(fKJJ+(OMYjd9:JV0[,(
%I'$@,%YJX=`!CD[ZGCuIH59#l&'fJP.MW'-&OT[<B=QeJhQ^>.+J(:uF^:`8I-4^;B=?\Dq/dD!-)bT5&2KanVYJX,Rt>`'/U^@!
%a^i:TORmn(['i9hC7CHpJbJGfjiU<bp0)s(M;bb#L:+t?inoRXjW5?8)B#<f:aBO-JOS2b<AG=Cb1)X6lo7W3@=,Q^#IqiC(NrO1
%ZeEc;f$.dp%)="m*[Ta;p+0B]lCg0c)1]-ZH]c+,]]+2Zm:h!B'&4fRZs>NX#5'Z!<og[C-M*Mg$C)[P5Pf5NCYA5'X#gm?8]sX9
%ihlh7Ou3(RCY`K7EntO\[qd,*a=o>O`]$S$f\((Fb%A>!1H,0JCi`C96cd6_/&?Q^fhurJadX"@OQX6^CAQdX)nP6'f9]\G,4NE=
%eQY[-%=L';*D1V3<%Omfc<U0&9sIrn'[&q>TZ`ZEXl$LVR<u+h9rOC%&^3\jhOD]bSUcE/%#kVhk5;q[8cNAPMOS6(*r9mNiT]lQ
%&J)R\Q-33r`hl`d9]NR6X&dI(QQ>jfb`TI'0`LABq"B#a*Aebr-KFe]9Oe.8h6q+LMGZV-X\<-UQ4Z)WQshl\N9PYuTCI:Z1_=>5
%6IW7Qk[g:2Zj>l-/;I@HE!p%Z9[h>_D@gLN0b+^MB'B"NP/(U?LA>/K5;!-SZuO;%gpJqh(J)aggs+K;c]$N:>VG-+@:7#ePJAbt
%e8E:4ID,.fLH?C.A:".*'Y-scZq\:FBP/<Wq%@bd49O`jj2d9+Y:1XX9GmXVfnfc4Ldp<.ArN/rP<")*_<R#7Ybi;eZKtDh/cU/R
%E!Nhh%h.#I1L:>_*+]W'fWOT[i\uoH1DOJ--?L8?gbp2A%Kq-ef<KZ&bN?ZnDpH>5>>E1Z@J2cHh9(C:?lPTup2hh+fJ[73oLWT^
%c(!f-R1@G:i4q2%6,^hO%MNdWbSE=a9[D\]9JbVm$0,KGWrWAK_ib,T)LP46GRsqq)A3#S0Xncs5>DGUg&u!kLIq$'Vm],!LE1"2
%^(G]3Z<M"i^56Ne5f%>Q/.t,n)-dST+jm2Y4Y?pQZu'M3cYXNPEJ]fpf[VlYN,/`mn$HV9+Na=C0SCPNQjkjf@*gW7YTsCD"/6#]
%k_tJV_[Q$leZ$/r_S@^I%'gMmAnRKDZB!ak9/C_sX+Lh>6ctcK%&e5+'<(J=faWV"D:oqV\I<!eX@V/b@1:^-"^HiN%dY.d<O>pI
%f*]aI'+;HgH%?cYC@[3M_=$?p`:bUZ-NLcEM-E%M>R&%HqhG[[a0L:.^>M4@MM(,G0-F%Qb;X=^,3o8"A6A&jqJg<_l=,[h-3/l(
%XK01XlJZ%rE!/:XV\M>21Wb,e1QE-Cr.-l4*Eu&NXc%kA5o%;d$Ei?UXFGnmEC7?Xe.Q(Pl;f1<KL^:FdB?]\+uDbA1N'gi^9?E%
%2J+OY7BbV7$>U!m'72+ZV"mVs(DnUO>(r"5p.3)9rEcP0,o0(Qe?h-2Z!h^a>`:Tk@2N_5CgfYt]'K*b?+!b//i'_cC"1"'12\Sf
%<qF>^o"e4F_^XW]AcW2<>LW1;e&F%!==Bu'QlCduP7AH1nAVkA#?fUe4jspt92jS\:i*>W"go8ck#R,jNR\RsZPnE2<^Y6NC'YGV
%%<a8&+mcVe?seZcbm%eC('A4Xa*0gP[]t64OBio0'gac</bLP(_GI)IodNYJl*??*"-D6PkJCa`'0hNCheq203acZ+?&VBu1G-!5
%3d#M\N!mKQlGbs<nN1rI\V;uk//d?SK$N2fo(*gerhM>gURVe,\4luja7C.9$6eUeT.C@'Zu!$!i$T1l\W>a<lj=o?);5gKC0'uJ
%X;H1\@^];f2jb/_.*OTo-sOQo]J)aAL"ltR$TpKFidj8YO?EUqC"#j)$U*(Ko`.l,]GCr%])uY.@\9fUgFO!@+mu*:^=o5&:r1d%
%MkLO:LX6R?R1@FQ"q]TSZbgrs%kr[<%W)?51iNj8*-;9G3//2t%XjR;3Xl_C0gl.[NME1]BH-,#8dK]N%0)-s%Kce0/Spq6"h-'+
%*F'4P6blCDarhU>4/eW*!E>7pRBW?h`o-GK*n`Rmg'Ce>BaTkV"h&"O.nkT[H="LZ&Q$`?TN>nKN@_s#3"(,V=H*:.l"W._BY6kO
%gH=$AOC?AH9]O""n\P@#T/d*7$cG7T\Qm.4VkM+h]?r#^/9F[l'D]s4a;+?Fa]K/cMFVuQgh=_5IB&2B-C5Q]g@AcV:g7C\>Je68
%IF"W6p<Z8F;*:&siZ[OYd,r_*p_K6;$TgO3-QFqX;%;Ik0q_ZQ/<6Vnbg@gM/0^R8-391DO=86.JL.)<:[Il_N5QPFl\WV4?sF8[
%YhUoDBS#]4VK8tqB"Y[Kg2L!!\t=IP>%W-G5e^.>:Xj0P/]GTN9EAo7a5L51<RaICrG>Wrhm9s%l4Em^55lXP9<R0q9]N!MlhAh1
%_0(H@T#c^_%X)Ear/>&;-o>&dD><dI[H9HL37/ddZuLk03<h4rD,Y;@+cnYEIg6lF47L99)V,Q&>I1a(<JKl@m'c:3Ng\AZU1!Tc
%2i`mRGl?d_U'PMHqA1Z#r2k>&q9F?UIT,q5N>DliKf9e)ErRNdk-GR_r4,UOir7if^YL%%g+A$9qHolka)Ct3pV6`Hhu(MjrUF+_
%S(8e]P$^3DH[kR>Da!p_$SOX>jL63+ZZk#EY"/9+3tM8WTDe^IJ+2gNIeN+Ahg"qVn#YAn0uD8j4S9Z^s6E1hp:\Kgs5)?Kq;cnZ
%4T8^=o&jo6s6@3[r7;JXh;:BfQ[eRd_rFrI60C8_o"Xa]\%grDDu920^O2T#Si3g8NRuu?2R\$LE66l^jqsV#0MZSMM/BCsWt3Qj
%mB:<E\h(.E6K>Z1]C%^r+>_&tU%NcS7Z2)W]sh9uIm^D39f,k+`X8R@MN'P-ik:="Kh8XJ@]Q&26u=8OXmi^M'r"3WRV??Q)pO6g
%&@BoX'AI(-HVEh2fZ*GXA9f55*,mf@;s^]RN=a/Mo"P9ZN(-%?^%BS2gTEoUlfW?fZtH[)UKqh2N\Ym$g6.@_fK>!n=Mbi8Qj"XL
%Om&2h<JsJq*2kn*oQ3OP;55K^<C`IKN`>\)Si0R@OIfKPopVV$P'Ti_q"-@6]d>#u8P)PFkr3pKkt@2f:\mXIkpQG*T8!.6S!rY=
%j!5qMj/:eYmsat,qLkmJpNCmY<E"3i86$UTH9tV%HB'a\$0aHb<-:XU;4qY6oIMIlF/ES)#b+%5$V8pe&i3>#(6=icaBN&Z9@P?2
%*%Y6uo[mZ7UX-3c0(%9t=s&72neEOSK[34?:0_u?ED,&/_</pBSpJE1F3\(#mbDm7^?W)U/!_1dcY;55`7:cX]7/69Y1gDUWkc_]
%C90R8eaaJ]Q7P1Jq5Q6r]A1/=f.W0Ip[+Fi^LPS!f3"BB3utmhl*9=%'2D`;mdfke43DL:XaAptmWZG3hRhZe@,J*<#FDVuF4(B8
%f(W9em'>/S?/jbG\+Z;@plW>hoL#8HbX8$%X,m;.45YGK*B3b[S@*ZG?&p;P/jJIQdESkqr9!s-p=V*JmG$Osf73acDh%`/O*pfa
%ms3*IYMD<emO?=h4g=lG[QXZ1qu65/s7G-fJ,#5*T6]S`TD[o0J,@f,TDd79hO*3Gf#;q84f>Bf`qJ<g_>j,ZGCT+Gs8;*h0>cn+
%T0<5@O1tXba8YdbGOHW[et!FN[:JM.X3Y?ee%bLi_r#_:a3X_Na@e28kG9CVrp70;5Q6Xt+8DDk0m<!M'BECM4oV7`7^qjdSPOXl
%4&8%ubpAujT:\:DjEJ?-M;R"$IIsV)Na!\4Yi_+nq7@aD_KVVum_u+bn+4tccTUsW00F2tIe+k$`%[Ju^M9>>\i5*-iU8o%I!pA,
%nbc>CH2*$,G+3jHb2\iX#Fp8=%<p\'\)2H$\JOS$;jS;mHh-Kprr(8fQ_(Vo8$V.MQ08!fr5L+uoH2DnpeoQmo?rQCrl76PlqOrm
%CKKFBQ7b7ArH76!54b<es/^bm8_$UdoZ^1FF5JjpC7kk]3b*9`)a<i3a8`Ip6(Flds6Yq53cMtBcib@iXEB!^[m'W<+9&W-6.k/;
%o0<$@a5?NX%Bhh_fHj1N46`7XGL*2$rKA%$4TItAZQFVoYO9-B=h=_sX??6Wa`fo?h5=IT"HRfd-f=pq]t*&@=?G`Nma_3krL&.`
%VHnrnTDk14hDMk6gm+VOeF.jp6\f=RoeZ'npZcnWFSP4k:<fP$k:snG3d2gmd_E/[V:_G\*U`lJgNA<H/$ALbGQ64FTDD^6Q%k!>
%.U'>l:OH/ScPmu$ndh<RdZTrW4SOI]5OcZU).X37f$c7b@J9Yls5#O`BmTT/B>4-9pWq]H)ZocOlLV4)ht,dXIe\;K7f`#Vn7rQk
%PJ?sAA8c#1Zcq7?qS>\9p[ehf2oNlm^$t[g*r4`tmP`BpJX^rlm%B7qmCVO7^[h@'CqA_7HLX57s-:@3BA]SE:SfXh$r$"kF6CC:
%+8Y,`%75]*N@2L:d/=2nRVRVI!BG=\ERc(Jrm9iCo>@G7k(hjir.j-Va&U,.;N`Ulm_mRE[SG]X^a%b!JkYkMK'_6Q4E1&UereEW
%'S6`nai_#Z)tq&6@pE!I-tK.ePokA-rYmV.=%6qYKWBsHphq8OcM)h\m.3GgTjAS*RV:gBqrDlHM>PU_p8rgki^Y-[A)c?MGOi%c
%"`Z:GPh4dfQM5e)duSnPleh].Iu,\?PF"5,+Ki$<\F[u6r1f>Q($Mam.SD50i;-[P*I-&hpV*\l;A<m?oQ?L(fA*UnNq*$X^4Y,S
%G/1-,ef'le:pY@Fm%V\/'rt,W("a#ZFuCA>bEA^B*P^r/Z;)#L-bPACJ!-0`W`*[89?Sc[N5E/R_OKR%)q#_r"jR^(7'R!0B45Cg
%2t/7<dL4lC3TCN$43F(5`c"$bq2Q?hr:X]0LI"%8]]G]RURK=fn'kp_4oo4h]!gS+86sf9+cnYEIs4Xn[K=dE8+(Cn5>uL4n,E(!
%kPkA8qYGk.meuWVSp]s[(QTP]nV-.tr25UiI:(#IYQ)Kn5C#ZKAk/Hfl:9aZp3HQ'qkp&C.bQ%BIH_8H5HaSH;pC;UT0N#%fbT"9
%O1ru8cd.+?iYS*YWd_4\i<+hM(Ci=go+16bJB%Rdj0RH(LHk*4Qd;@3?`_91m2nFaJ_Bf[IHL;&h2;U9r;>_RhPYLBDl`Q1s86q@
%opPYS_EL26p-#G)]g#3El/uErb>'->d^cd\r8;FT]!!CIoCM-0-9Aj-alK"Arr7gX^[J]c3^*"6hW]HjRCi"\g`Q#\mn^Btr:@f(
%][QmS5'aq9n"2tF,BN/B5EB!GpWm:Aj@%e\brWrqmtr@NikDf>hKr/)q<S'[Mb]=)1%CCe1\&pYOdkk-5=jSonU"fEM<+=-@mLEX
%qk$X9kK2VB7+cV0%KGY!-MW&iM*ub5f7i<@';&&EQ@JbaK&5aZK5D<kr#Bu-XoM;KFR&JGUBcgYruD#np<S'Ld:N`melJN[oOtp1
%'@6Nlo.BjPpk;c6rQ^1JgnN+*s)5#.T4<o7J)?TAd.k!2^]+i5Bl!%qhu:DmT@.;jMa.!rTA3@Yf7cDBGCJVrO$ETu:Oi5ikC3!s
%QTjuKKSJ,6q;;1(pV-*EmsFLFr-%79o\jG%Dl03Y?mWBdAi<mFZ]4a6rPi&Q9g!'SHHloZ3V,QlkW#%L/&[U%#$q[\)QP,=5@_7,
%FI^<7pt]A>L]hat.T+E.mK9A4_=.D%#q9l!f<Ogpc(/OM);S,rUAo@ZU9PE^d;u#q*Zcq:U5f[ES,aUSr!CQ500f!Fjia!]J.]?C
%m?XAhd]1hFT7$4peLOEVEI!JN99)/aq21FbT6f4[1L>4D)/Du/AbF1ZQQ=s/9"FT('2DeXnnDa,\b>BrcT11T[:c%U`i1>h4Rn*b
%Q8UR)[URddB:O,<\a.O*h_<>?Dr%s:6ebTkQIRiuEZ>6.cT_(cj2-^,L<i:))X![7,Ep0e_mUpX__]V!ca`2u9.h69c_Zt5I%dh5
%lnb>L/>B`Jp_-_;_[A*2AE8Uu7n6(Q]^kWU9.ms:]Q;B:kibq3fumHgqPpmJ]5[_F='V0HJ2Ma5A?NTC;J:CMX%ls"4b)_d.o&9<
%mCE\VO'Ih#^apEg(>CNh"Z0Mop5G22<(IV_BkO#Q>^YcN):Pls&1]A(1G],-NH<DKUls.Pa.IVI)=Zuc/fur&a7K6Pn9ronbgFTe
%\a[8>CK@JiqU-$P3YbMP>e'kS"sJ?qhfIG).fnlpY<$76#tr5O/R*MS=mH&6LfDt:YJTnfX$Y^O!U9Fgc94f`*lqU"B'jj[?$Z[K
%`,jm=^O"q[0E@o:/*QN(Q63#.SoOK"(L7@Y8!M@3RK?C-g2P$-(EoKP,n<IaH-J4rd^=VPMp=CgCRH.id!9e$3`hl\[cQ/nSTUA>
%43UUOq#iHCBKf4TbDFFA.Nl+;)P+/0`8fro_W07<'jl/D>5-KH/m!fPa"BI<'Oj,],ua>3k),;o`(M"%j,j<qo(gp[<:VCjh>.M1
%PtqRJMNr1&S.*_.s2'[I]ps=roZA[R0"q%so7?(U8o8o+4`:'eckNq/7I)TI\K!dXQ`e(/2TJs9:-L,8jmYfMjXJPuh>%jlFRa\P
%>^Xp&kJN%,L<JW3R$sVZk#H2jX`4AhN:YZ[nH(SL5>4(dq+7V_71k-,&EfX+p/u%23>HabK4k=fb<XjQ$<$-4Zd(W'bVPn4#c;2h
%N'uKZQ)d\Ejj_aS48"i%=069fm!s]JNaJ[S/XA%OrjX;<:,H7^'H3UJN6BoJ;H]lF*8@0TCn*>OAH&4;216F&dNjM]l:j'MSu*Aa
%[HbpmpeDW[2:YR2W!Jo)dj%5]59!KL3QC8U-u6Sc@:2tf3/:og^SXG>X>&\fJ]7"Ch(i&NbKm]N*A(P5ldOMAfPXSkbL)6r3'emq
%""2sXFY^Do\T+tg:spJ&qZuV%4C:&L$8#<+_\tWl)C/.Hk)*QKYr:YKD<!b>L:8jscYF5h`G:*!BJqf.ok"Kj:&3\;%:d_+(=4Zt
%mJQXM@ReofV`"BoMD9G%%D-P,m;$Y=Kc@2*nq'g5hc:]Q[Tb(j%_^iQIdIT"AgVEKk+9=;l?MEf>G_o0O*c?E^$g=*H[bGNs3JN\
%fDO5NAG;?6>@(B[j#ul0n=T^AK+EG%:]KK=p\\4Z[9H+$nmB_RlB^Zn^%2>UqPhg>rM,GQrTF1B'-DJ>)iLm+c_2F^>eVe:kcOT/
%imXP"dQ`6SX'b\^_k6f#rP*b/]BsX-Mpp>2^,N^bJ,Si^rkgsMj4iJf``F5[b[:;<45R2[N7#^A1WT($HLDsU`Fg7jb1FE$c*./r
%(EWGE&)@&_H1C3XO_]G\p:(%jUCVhAdDrulQ,asEgg>Ql^>GIZV/&Tr/>)=uh"T^_p>1jXno$benACmqg].625Q'nUfsfEl>E%e*
%X+"L7Tsq]3r?)$WTE"^755`-=rPjDFSQB+(;@`JLpP(c,J*#;>p?pi<rHH$Tf+7>brHdY>BX3XYp#>Iq>BAoZ6\f<t\Qc6209/a`
%:k$6GfA*TOc^p]ZDnPXm``5(^Qo4&6I*!ZNT=:]88gjQG[Ot`c3SnV<TWh/pKl(<]3(,B\>"*JsI[O+cLN(HnRR9's(XF6=o8Dh6
%hcjip2`_%16e@'XB4`9$J+C(IPq1<b_3^#LZr,*6>ipmH%@BUC9pE]iL?bqTb!l#<dtB#\@p,AWfIXkF9Pr6dX1d7\eQTDGbO<F;
%]m'?SfLIa"`nC$DZ'J>>2(CHco1,W(C&nOk0V9bNY!&#qbp)0Bm)l6+f.,`WD)XAtf#e15UP6=epCK4Ah(`6\<t=:=p>20$]U-+-
%X#\@rH)Y%(Ccgu[A:GXhC>5&ef-8[Gbs!KA3gH9o>q3tafN@=fMb;;&363?MCGMX:!+S4b75\4$'LaYEr=r:A:]aYTg@fgBoVaL1
%De(#LUQ'ee#$#tM^o>8Jm2Ide*_7_]eZBNB8>%Yt'u=)6BP8=<`d()l]!b;(o7_<Nl+\8mJ`kcoA*>tt=?aH`J3qlI+.W6/bN%!f
%*A8JE:)@UF(?mUR?4ng;Cg(Lfi(KHAr+M9?$3J7H918dk`1+3Q'qo+@9hMrK7)_G>6^-[%R(d2E-&jbeA'HF!mm[9B=EVus?#*28
%#Ep+1h-s]0!Z$imq9Z?r`%203o;?50ad=k=Ma>?&Lflhq\ftaka[etHd35800h7Fd2T-S`17Aj).l-sYP%4?f[RU9nE_J\t60T%<
%Np.o`dSK^25NsQo]FmDVV2J8El99W*[e6=_h,jSNY:+,M"87D8<g4S8@bQo`1l:Hf`mGqV+W6249NPaU*\h^YA&7Dt%h/n;b^tp2
%+*n]gJ2pH60K>CM=fOY+dRTWT4a-Yd25cAYRaoU9eG6m0.VE(6oo2%VdV$U[='p:9aiit5qSd+3Z8LsOffac0LH[=S+1c*2f;gQ,
%feeW\fTd7j.GXO"LVEWR:Pd?3J+]Lr^@h3Ie!m!pG3-g2mWn<&O8o"N,;4o"Olq5l+(+k0C!22\O)8QXfe;1]fFuRQd;.@Hr6gML
%I-Y_=H/2"sF):dRIt"u6>gH&-IH%O/J*F7@F5H\[B(mHU54\>1^H^;^9k-Tk$oB&/.>PKVj[bl\eGT<t?+<SXgKA^YlgA]?(n*\f
%fKEHiE*A9-ZfRe!So/n1o>hRU(+r`beUj*h00K"tq[:Ft5QA-8?VAJ,Sp\dG?[]Y2]dAd;aTi4>On*#.h#5X@45FIsq>%5NF3Vg"
%O'/dddclO9h!sOkOiK\tqoiQ2=gInhc@j!?r:luM9:%;7]&q!CrHm^#eO[j5X-YA#IHL].,e*o&jPN1Dj-lgkqVt.N^\#GH4&>=>
%ouHs,[@k.$3U(:m'<^H?5P[tZehSD@]_(9Whn&O6KKP'$O0)QROM:tP@dcG4!BG$Tg't8>YC6/sg*;+3)7>Hj/AJ!u`dIT[htk.U
%;FGW^oLGMJInQP7r,`Q"-r.4BY!a3F<_[*OOTC%f&lkA_DH;j[$e\&Z.Tud1hg4EU6fkQg!rTneV%7Nbs0?Ip=ue->G5CFiTM#4D
%ae*NX!_jbTXa$.N2>*Y-rs[LXTVF\oDel1=.e)`.>>&3+K)XMQ9cJdX"iSu^`Utb5XmM?-^I]VkGC.$*pLn7SFKV4cr#2dhT[fDT
%1Yj-E1B!:cPU'*r'[X-PI':-#o5oT2[>e$1;K<3.H"!([*A<)LQL/6'f4L8Z1CBl`!ll,!r;8X:`rs7qO!hA^-M&-JC?bQ2bnKh@
%7VtgpG!fKWleK-u;_C!j]rPD5pY+6^6,R3e?@Cec]ZjQUm[#pg%8ZVe+5?:tkP6imb^5olla4bnmUBT?,m?,kc"_()\QmmSc]p!o
%^t&((-cXuH/"\EMPQdS4GiJ[f:#!.6mB?go@/4`c&mf!)G1R3?o6V\p>32UWqR^`[UKgY`^<iChZL3uCZ[EtKE^_iHhj/0pO2)7_
%>6kWn2KK-0/*D1ThAk!qipmef6/^9PG1@PN,uOp+Nu+?5d"a!+$W7SN+QN6J>PE(;'Z)]$1hs+O.72cCIXZ!G8?2/>50kH1.?>%H
%+^<`dMDle72<KB9-mE&A\h!GFX9\@f:HjWmJ&JIT+5qEPi#TZ&U3P<(e=N\erU@"9mg#J4lG7X9IrOl)bbq7.Dch,%@c$J;,E?'m
%Cta(2Ap58E[pD/f/-#"^gMQk;e^U)W\bCTdINs<NJ*@D\IHuC_AI#uBs'L9Oc9(e"(PDIrr7/!b4QY58\%=$&W7=R!ec.<>j[;)j
%Y+Bn4q'[XTLj>tuFuQdgauu,"1%)k_?_5Qp?[\ocrK?\*5p*H26Si]O$VV:8$d+j6C&'AecL<s>GL47sQj\i#`:W;9CF78UDrGa^
%Q/T#DbNmf3n'`k>!&#8#``O6$$t1pl$W+WID&HjNi;=puJ.o\"!fq3OQ@K($1=rfhH3BaLCe#E::#TL#HTmC!9Nl#$D0bO,?A>.<
%2C8k^cY$ZJGRP+KAdUZO"s0\KELt4lrfTHi^&<ha3Z6f]kYAg`!H01o9*5R]j)rfV5#qoDagFft8[uXd$Ei?U<3'UeYMmm;_uEa:
%kQi5Z7"hHQ4T=P4%d]^/h"DA,+P_`egj#1[B(NhG=97!UEZD_I*'/+o!UeZN-*d<*OKdY[1(F^d+iqJLYQH4i[JGDHq$!oif4'lu
%gjh"ifiX<O&jTORPm&:$B*(,E$iJPFFGp2nQsG`1""h<C5VM0.Sm;Tn1P$:g&A_cgR?f?EB=[r_08$gB6_Vp056s9r_*JFs#Y+!=
%YO/&KD@,]?RA#-k@44!r`J"s"gfC*5>2[Y9-fDk^o)de$OYIOT*uc]&8_#0gB\BO%@?BtD9c3qJLN>ON*fNbm".-@*TCHaTO$#PZ
%A7B_L+8S=WL7r>OGmlup&J1h("ZfIfn?M>k?.V%9-#Dn.MZ[su?*1hrJ:k(;QHA3L5nn@W^ik*40j,?.5d_6K[I&3K>YEN^VM3,/
%#C7LmR)RYYrh\6@&68l;>^6/NjG(phQ3k*fM$&0&,mlp@L+*R#nA^/6l3X`\1DU<18>A"X$Eu/b;sYXI'\j'P'bXd^`n>_SB<t.o
%j1tV,)N[*6P58V,Q\H#-E]Al#IN8h6`,`9B!Xu.1"N\%2b.IuV-'Y7tI>a"q!K>[YF6X\p.0=1"f6-D0TGD>tVREiC3CPChEM)88
%;I,R7Kj?ZD%gT??M^Z#=#WNBO(k!aP-<?(UC>_#-)d6b,oTj94[#QG7.KTY\QDtt)_9IoZW&fcElEDOm.jB0S*V=KIRQAn@mAMt(
%L'FB,=h`:**dFXEo%1r4$jlm]3@Uuaq.q?9eO2pliNAqh*.fbT;#)+FYXgPM?h+d'@aC^c=2kl\iYtQ@.,/4>YQ/Jom3^%m+SHdX
%s,'TW?HWPD#2"lDQ#4jPj^qEfe$6keE^Iq^ghh[gA"I'M+(Oc^.V$,;,^_C8-L1q/;\1!Y=ge<6TdNHB^rW><YX!lQU#8sr"Ks6T
%Z3,abkA)h_RSMS&2W]ch;'u?(_8qn>B?IQW$)9PHS]Mi"jb\B?/P0IpZ*$n]ED:(gs&=\<l7GsV;/aGtr0O:%drZ?EVL2$i^$_5l
%ka0;sCV%ZJ/0V8W16KN3Pi\A)Acj8naQn9mMgfBq&P[FDj!NO/Emb8<9-,#Q>!*TH7)sA&mT?AAkRrSl2t?p@pepXhGQb.Zm%I1d
%3c\;##pdCtF-f15p#dKP3"aErOK;M>+%[`eepM"*Rug6dd\q0a7s8K[;j2p`7)!-sSh8I_Q\e/GD<F5WX.uNjA2,F.Q1kr`+u?ZJ
%F_*"W)]$eYbbZF-LC0#XS$+Nu]G?]K%g=LRq,(U7$?P$Tjb\lZ\K42`**bAh3.ZqRqgm#feH_ZWBK_ik._$iiZQkgQ$$gUoCgf/=
%\]Mj=l+DYD+j<`e"#Rb%36;Lq#_U>q^9(c]/T-gMBL+PEJ=JTW<n"r[cf*W=6:0-V";A;N/>2R5^iX]m6!S)[HA1RUOoIp[(g!a`
%m[1H8d#Q'o6m'A@)0]VB0DGZ)DJp0@crsS)i#fj+'9rA<"R;u8A=-FDSPr0>0DDGNgPn=i0VFDaIN9KK$VBC4_Sc(L.';L?H&1h/
%Kf09[%Q05OF5JK]I%i\*P4#"%))nZiq7S5l=&XQD`:)6qiV1qHYESH^e]Nue>aVj%F_`mf*Zp]DTsrS*;uefY]>65@IR%GlaDL!!
%Bnjj&n"^[SGKuDm1\9:II!G8;I_tS2q#iY<@Q@`cjC=$p5+J^5o6Ki24BJ#uXqn@pH;F0gd9a;-]!gOdW/U`7gR`?A;Vf?,VEboO
%fnO54Q.g/H7J1*OmsiR1->Vn]`%8<`(W5OOR)M-qgHAR!))b2VQ`LFiCTsRNOq6It>HXgh0nf-MU6S2<?494a42g34;*$Wj4\l,H
%'b$nU$<N"@SHm)+Zu2OeN\>,9K*VQ"iUK7FVC<IR[OGYf/te:_pl;G!Na#,D]SnkZ#+%\U0`s[S1nBDFp!Q@/oHWt00PPk&.%SUb
%N[Z.b^2H*\H*N$TL_`Cq=3Cohi<IQe.%T%IdjPN%B/X.hfl`8V&FCa9FL2WVd%JU0$+E0GRI\R"U5`b\UEMPG)SoV;BP8=<L3_]U
%XW9(@DuXlnkff/7]S"t1cSZ!c^^V:n5,NAVD)tq@j&q=LWAAnE,WsG;=TmT@)taEf:p46F0o!D)KaND[$NMTZl-N/AH.SoX7>ubJ
%2kC5*ZP@V&n;pHD`#N,)119q05\,n.J`V\?@b7gCHR!'C!"%OR0rk]h$O_$rVII"q6">K0'&oC\,:AJC/iIepS&#eO_]Fh5SV#MR
%9F@"m?oq4%d%Huj#^$nlND28>FIF&_H'cN;hb=a+(A6<o:NjC-i+DM"]M<M+lbi;jPkS\`4B#Y!%dm_2==C^7K&a*j:*p%5N0!Ot
%'%Igo-j$N0l$,7NTD^GPkh8^_F3Gsb6P-O_'%>ld!jTd75Y2p8*5U`=l=ni-GW2G_Mr@!G),4GY%oM?*>"RqpLD^j5+kSaYNZEbd
%iWg)LISg'[gSSJ/_ZYDT&<dk2@ri+rd7/K8E=tGFDk!,K$PSMhXaM:QPno64h?VAFREIYa&Le@*Ns0rZVc+[2&caZ+]>+c#*\^*>
%/k?GU`9-K#%oXK8oGBLLiYQMo-@E8U'Qq0(gS4,&3Gf2Ad<'0N0D!s=*(R@&d:0au_LR^<.pWn"'ZQg[\1UgJcIe_DZO^EY!OQ*X
%FcRL$$P9P*^DR5T+C)R)_$rO@X=KDokMrd/nR+:TC++[d:*Je7X<%kcT?*l1l:mboNN:JrHq^7D4:N]L6jNu#=)\4)-=mEY(<2K(
%\9rH:J"-]WZjFq`0#pjcZNd$qKl8d+b?t1#0B^,$Fe^,12$]K)%baJ5;2ZCt+KgPdJ5q_AYjm$G:a_,jnbCD(AEUD7"(2*5&)ksh
%9_pFqmCI*tl=A\c,@@4X?4>PBSU+`(>Sq.fXH53tg33UF0iBQt%*q>``c'`B9O4l_lf<9<.>MNLDn8XgGUg%`a_\/5"mSQ#(jfo(
%<m+Q:]>3.%egf`EmQ!BSUG,_YbA.X5PUeVnN>Z"%M&MZKf$:_W_F2*jF2(AS[npm3`/f1YJ]jF98gndiDU:al9]%,G_d%R8%H[m&
%*<^i&bNQC<NE8t]a(m47<sHnYk5\`lNsVrKi>PELJ]"79*/rg[?JsOjc/:L_W0#)fKLg*8#.SUc>JVUKp%UCh<G?HroJ+8iRLHo4
%/tW:!G94?Ti6h\`&<C26*46UomXQ[iMJlHelk;&Q1%[Q`4X"Yh%.pFcPNsmlO%DK=pKXjs9t]-<Rn,Cf4MEh,Ns4+i,VoTu?$th!
%kMnMG":5p+1?!SRHm^[8"?c\Y<b-?bmYHYoJbIm((A,],"jF=:oar=(I7>c)K(QF4fkp^0/,[N+&3-+k*a85GP`8qsI^,>:Z@Ik7
%mM9a\bs06aa/s_G5U`]Gm6cp<(e_[b)3aM_:-?NXpm-WY%&h]i*1<SWY\$VmF:NZ$q&X<rDX;BL9V<EagF?&=fqKqrcn<9Hk<!F5
%dCmhXBk2lTN#CSg"cj<[YIF^@$J]uL\[8\@.+J[$IA<R<[!.Po^T:UYo*kR5nDAC)BAr;"j0-elC*;4*401>AAuekM:"`Ef?bU"9
%W(c8&QZ`/Pi4j0O(5i@#+D7PY3RMpZW1aZTA^&XZ`f:.(ptjZq11M#<kT/He*F_`[C<CO$=3T5VG2Tm"2!$]#4^f-JMKD83EVPMV
%@!-[Xn=1cTI*5KtOt0%tUfJI*6ee1-;Q`hQ7ZBQ0Ki39)S$O))W<B9?3jkebeqVA,N*m-'W&SQD!h6Tb60+o!>OYu.\-N"X#&G+<
%ir=[cd%9)S520,^_4PS^T+M"C-_$%lAE'$@dEFH3s4X)6H+7';CtEW;j=NJ4:Q?20T?QMuUED#]$\r`8(ZjV)rLEcSVs??MkcN6K
%T-APiV_V$4#"/7R]G5NBg^T#9j0hg/)hc/+I3ehWY6F>ZZIPCS4&3(-U/\i\'n($/@.-b)](ct4M;4P//#!mFfO41Ws,=@QAAs4O
%4`)``:/XuAk/+nWs%SfQ!B4W.NMZ3^')`3?(\2r,1H+"s,bho]@2%9O#P.0S%9l5p_0(GUpnuUF-GNA4GS:SL#65]2Rk'tPgKi"b
%p35CGajW.\X+agF;3g_OI/?YSrM-lt+rV\t[Y9;kn:kCeN7LMm=@/cs*JFr,o970`A(:or7)MH2r^MM]DLa<QCtP/Xe=)D5F"q$j
%kV*h?a$:L$6a2^^5pJNZd@0Y"_q7j>:!=AfXbIDU]Ke$!CH\kh6NkfTnQ:<YRl3<iQK@,f#'.etd,H2LcbUDeRWqEOEnq#L52W+A
%o<<Q';5DP?W%cY8WqgE@j@_Q]-AJ+gL1a3,8%fY(s%"Q,$YmQd]i8+3_E&F_>m]imXF2R6LM'<:b$%#p[Ag6%ASq0rZ1%HG*NF@5
%@/1u-Hj3sr;aP]Dc^_5BMWZnnP1msUbauGj%T8^cb3W)>cUDH84IGI1Y!jf:Sjrsh./i#bC&L/nU%(c*ZW!8TGF9JK1-:cSWQ^rd
%bdL60d[<5TU`9:NcZL+2rt!?#VNA/6NtpuqUbY#sflNG3FM4ATAG.NBp^W/1l<`Q0m0B]XX(OQpI8Ij^lV!%d0!H+*9\g&W4utYr
%"kG2'@!-HpCTsVd,4>&R@$17lmd)#gS>WmaWFSY%I'isX&u/1HM#,6'2Og2YA.(19>'[[t[)u#b4//G$Ybt;J-4j@<ns\nqmR:.;
%_!"g!Bm+eqH);^e83$`4;^h#a(J=V53%P12&A>X!(ocZ'`V_<7YKQ'Cj[soTkbk[P8YCZA:9<(?9mZn\'BNqS)%1V&kd*'PalN[L
%VYmQJ77QipGC_<d7cP'do97.@Y'-;M=&4*'Hs?4>.X=<DeoqeB:6uK!a'/'>]f(lX)dfceVcH3$/#&)bKMsCqM&"FIk("mAiG2G_
%R0G6MX1F[Q5nZVj[8NSNG#)Zsap/kcJbESh4V5Mm<"iYW^Q;2(fuj<(]UC<Omc's=NclaRW5MY'Y$/rh-G7fPEE4p<";4b,al['g
%`eu-,?VSFTY%dE)mEc5W*d4mR3d,0l:\er#f&kLfYp.\[dKK@=^E39MMs-gW.u*rbPW'>p4VGZ0&<+lkN-c6jkTj&*J%oL,&D^YD
%c;Ft"E[?o6P]&0BYKLQo;`J]P"Xr55[A<R_X)k_/H.Ouc>?HO"SMSs:CjYm'0ki-0"tG3n0;p-X-+%J%,7gL:J?;Dj.)tID-t3et
%_c'\2Jaj?ZBlIP?K+f*gmlE@Xk%<5MM2!YS$V`VC*$Z,lN%J(@U2O"tQW.`0MV)#N:R<dW#%o3;XH;<\#G9TSO)>YZ3+N>b6^2X%
%+\m*06_&34,j*I3&^0M_lPJ#:(XE)1712Bnn=qc+pl^/XarfR]EI/i4q^KZ("hhL(o3$\ckF5tG0@aI0#4"bgeh7BS?Hho`5\R>0
%QD:6<@)o%O@Uk.Ej^U#5'PB0G6+i&j`"rsW?]>DdU@QQ?gpNs\q-nUrDnpf\DTu3o>)PE=2)uUSo;dgEptG#sPp'?>eX9n?0`NNp
%D/kjfbB#/:038L)`?ZL[7l/Shdk084Cd,T!`=Gis-oFOK/EnLC2&r%d.o4D9E8k&,l\gKMo2?G7F=5TSbSb_LiUi&>5`pk#n.i&[
%(<bTT0/K=9]>;a7A4Ob;GX\0rp@3=I=I'bX2IH1eoB6YKg,lCcXX]'k<j1\+37\"uF#i&:\;Bm,HBu`7N1$3oEqI8#qW9oM%*%`+
%A1]rBn$=83p@Jlap/ni*,;,`Y1XJV$CA<*G]Onr7Q4Nhj#6Ej+,W$f2(KhI?i5=D+3EaVYYeonZ*60);cp^?^eDfde[2Bml3n>r[
%<bkTS$5HAg9R!b3rQY!FVe4F%L:7rOH$H/mEnEK95*!-NS_.")EO`D^VpKu6p/AOn5N`-]ZMB1,rH4o"n6U<b/A!&(G01jTH_a!?
%L!]P;@6#)W1QIrHL5,?a-t?JYk>Li&cjL`)E7#"@@KBXlY\a0\_jZ_[ef\9'TcYNAI?Y4#3lcWXB(oV3N'QLBZ+eG;1Zs/SF\$Ui
%`jFoNi*jqt_q+RMYD00W]Y?;i.kn!0Xcbh`:e"?n<.d3c-Bt\TkLj..Sgd-KSdm6brq4S(l5^bTcqu=dY/J+N:gpc?j4FO6HSQ#<
%TYjSu+Ut`R6+2?ig?:'Aa_bKJ=W-?JYann0mGqiKTS`L*]5t<N`6DI9nBcEC<I"%@q\RIedYHQ5ApU;S_qP3`SLrF\kc?`^\([u;
%m,:[pkT8;YJ^Aa+Y:WIbMVd@Gq/r>l_=drjPE029G]L)[DVkWr.?"]lH,jJQ!Opm=',U[WeV]p.As5&llVsRDQTo]Q4MXRA[YjQd
%_U&bp?5eqpX`eR9Ck*t-*aj:F%/;n#6dK==TRmKMq.oT@,01DM!u'U47r#V?2;JK1BM#URR31-FMTdX'%RW*SeR?Y[Ct(WSCsV/1
%H462hfA>$3DoO&@fcG4XkbSXf9Eg^k']`rpDp%JM)^MJq0JA([dhVj)oPM1Mmoqmjc1;tPiaXl2]oUUL6@'4S_j=.kXB2aT2RZn.
%LW8JW*B0EX'7,!^n'&T\<:C1JU).('VAW97nIY4n/]n1rAd`3dgXT=)Qu,W'8fq6k[-1iS41t'5aZ(6\9*hsM2NADXgTCb891MS<
%%j'P/0MTk<@KY5'4i%@(X>*^YUgX?tRXbYi;T[j8^hN'n/OieeSA:ia&:r/De)`PdDEDs1J=1j7cY[:3!_Ah6P)4:!^=j#@S;td/
%6']]H^_+XA)F?.U&:;gC.V';iUJ:>n7r'1LTbm4?ZU:>r=Z3NZ-4mL#W.`)K7Rdafb8S:^ib8_ZFWbMG9qc9ZK+h>#hHA,Jba[jO
%MMiGf7iW_8?A-aN4Q\C_bg7^Y0p-qsPJpmG%?2Y1=F<"18se*T@"?XKU0Zm6JP3C"Hl#7B_)<FaZ9qBa/>m1_F[7-i&TJ:5LDMNI
%%#?g&D*,I)g_]b(4dK`,/mi=JE]OfPDoLr89Un=+g+tqZ7@02=D!_IT/XTdC2,)<U!gE#M;.<k=_A,'./M!M4&8dHn]9I/iN9PEC
%<8sn/8=YGSR^mkmkX(p8.^68*,nYqD*$#j53*@Z94@Ce53Ll"i2Tpud>N!+Oc')pgNiN:e`c5r2)!W]^3]YDREe5F&r"+#b(BUa,
%7$tCrdSu\_lsh"N$SX]!?UC-/5?_AbT*M;8)Q4n&j12^d#@!;`V;ka4Pi2m"4\=8f8EHG9/V/M-RAS!=Y!o.:5[e-2Kq+&Q.mW6:
%,(YV1VF]:Z4^m?iK`sg>U8<!!f+eHk(eb"%BA:/B7h.U7N6*Ou#@5&EC:j:>BJV$iDBPtk,E:!X9]?Ln#)jffE2R@>]3]Z&ZO;o+
%!?f:RLRNHr^k$kgSWMI+2$;_[-F&8LLo->6WPj]@k;"l:(%.iea$h^'\PXOk_M'a-bt"@_W=YPb`F=t0ZiYQ319eM^JfhA),@7c/
%H,`3'6a)u;1gNZM*73!XAdu\h6Q6]cg75EV5f>3[@$:$R30ZghK:EW-Ko>ekfadCW?^%?F?V6\;1':qTq%a+D8!s`&V<ju^Y[bfc
%j8g_l>i\/flap]e!'Z/M?<E/:d"*Zj#bR92@XTd[]`m6m$)V"q\_<9o5*q"T*R[9!TMks<Sg^3fdI52doJr5O==F,V-<uTi;']dk
%k(XT;G=!'aM/S%G,G#6pOE*?D0bk075WAs5'WDlZ[lPan'j)&[cf4C/FCbcR^bK,eA@U_U>(3H\CoOaphME[6dT`0E[)$4Heajal
%o;#W.fFC+8\f7l0$W(UF7UpSALTF,qJ7bgsP1e>*d.:t+?,8*NQlXd)MaOIGZ"%4;C""']<:EJ>k1K3P/j+PYAffj+5,3Pl_>^>]
%[3W^bDE<tSCk7u9fHrm9\!i,)@9bfs;,K4h"D]"ZCXOFo=Eb6GETCRfa;]KEW5[Csh=E_'Csj\cPQIc=@Vshuj[AI*Xao;Ce;^Wk
%6X"TlNu?V+Q-\iQ_273-b@8!VTA)6AG8N,13^lO.]LmsA5kc1FJjlne(.E5h\#qfe[R4V`Jo4YkCDsFM,<*W$%jk\H'$XM['LX'J
%JG]]6#`ojR>QJjiO=*;RB'oqdjp)%kA4<.fd2IQMIKA053=8HYn3[nPcsmfk<noe^!ZUd$$uLq<WjPrb-;$mIEraSTN$A\>a7"F5
%L/n#T4%E>?Ne<bta5)NKa3-n>FUXC=X-H>EWGfdNjk4D*fNLI0^cg@jqCPn`s/H%3^rLkOH(+`E]nD/u'Ro$$.aQ>s-$9%pi[-U,
%RA9uj&>Q&GW5K$Z/a$`D@D]HbCV[@DpMQ&m%#<e+[4i[(<4$dh0qY)j;kAh`YLifaX0?NBVZ3a7W8!3knSE2HIV-#j`BcBI4dM_!
%Fl%)l9k-,K-h8kQg1ZEbRP'o!_'fSp8n!+U-I*F$nYQZ!a]1hAblU$sCR:M?'IPAU3EPc\JG^;bWZ@[nP;RAPWOhgh[Skq[<A;eS
%*meMbI]0\gLdtpKSY2hus6%0n<N06G-^gf?)>.O7Bp)1,P&]YK_!sa*!XNC0"pmDu4(#Uf7[%5QHLli$MYU$TCHj8iVP9.U%?tO=
%,['B'1ICh&iMm"%`<*L8%u/,Ek%:[%noPt0^I;_]X/];b^I%#kq_1%.*fYRM"SE]s_mPc1P6^u8^B[#e=,Vdfn;))AoY?=W<1[aG
%@37$oe><k\]4fk6dbF;o9FuMfa5KbSdD&4/52!:r"usb!)dh(\FWBA6A=L#7`oZ,u7q]7mS7klWqd`YUCT-?>`lm<":SYP5UJ_)Q
%3mmF848"S16.0dtH+&mZDoPbdridk;g%>Lhe+m0j!mIbM+=<U;0c*Q??qhi:dop,3F>MTB,gBjIV#./i"/kDOCE-BG.G*infj[7Q
%X=lNa`(V=!jh"3t.uOfoU2AA&A(,7rD!];FC\`i];V/-jg<Q'/#@QmOJVRO&XVq!cjk6'qD%"m70jDg?j-WUhCH'7:LW3#2-=8L-
%L$@87&$s5d"#ck6rg>;g?g]U1[P.a,n&j8P'fO9:C?+DlA\rs0QK8Z`bHZYbN=62nMo'"qg?t_@V1agY.M1RLY3iZ8b&eO_[af*U
%fJoUVH$3SrVD?`4-!NElXmV4oVm_gO/,<qoEZf;eaWIN#f1m#pg$qD6:m3qLjS#)6'8>+R@oj`&H<0+1W?"8a<*0ghJCth#\fr2>
%P[MlFH-O]F(bA9.`R3J*Y>-O\,js$N,J)N>XNQXWg'fZJLJF_8LIV-[ZDDuUfmS-UB6cs$\>.<R(]Y'8(M:!5)9*L_\XQ9cBhYPS
%_O`1l8pR1(WRTI!P+YS%m*6ENcdmV7G^R62I;>*sDQ]=*gTbcO>Jt68[FSRK6+77E/_?,1))Gc;9=KE"p?Q=K76*B;j=;'#L0pEd
%Gu#Ak[T"ao0ItgkPD7?EUB[57G>t6dE[Ntf-;Re@gL/(j7=BUOTir^.j!!a5Usrldn(+us3Z^Z>C<^?9qj.iS.l/$]=7S6&Fg2u&
%@_C(jH+X;kN+\(%;Qe^(dei*_Kc/OI(f!$n)g3=IF6![Gd$&hBpn]/02\LmU5fY2p%(:(K]NZrie3U\e)II[;*OssqE4mIsY7HjO
%DSZp&&L6'G)du+g*J,qfa7bACWnEu"IIoCj2I$T*\:lTUk5*&Q[G=]p_F[/M[6&SV0jE;Adr]T"$0R4*mQ=qJFtI<b2bH&@!b;2!
%0jV,Pb0dXP$74^$Ej\`e2\UU6=?2i9%?X)niUu=&bRB;?YR1$R'@tM?+.Xu!4#F#+0?fBm5W'L]BtF^Cq+<N*,ZZr_"nc*Def*qt
%qK>bDG;C/j7gg+>?&]MG6[9X^/IbFaGFE1k..nt5m$lk()+W@`St+#(1b[^$fmGhbfjD_\`Va6_X_[$djGe:SRa'>mWKrr#:4il0
%Ar1c-REB&#in[Z&WjC_cq*;P`S!b`72l?SD2&S(*oXB)[Zmk,2APl%,DhZpO"AQ;ORV?G;WmLiO]1,5Dpp+XbAohR_Au\d4@/G>`
%ftpec)X=^Cckjqs;g``4PU+\H*Lb*g2(4U=XBDAtDrQm.frXGPL8HO@_YiB#*mHl_[^K%#DV0)F=tIn)Ik'/JfslKEdBYlu.sG`*
%D7BGm@U_6`^8pR%MCH(?e0*/=)/t0nJ4t'"2E>!a[::!/88)/F0[2&A[b4PMq8R9?nT1]gl]msbBQ@YE24<8<j4=,f-tX%X'?2\c
%m(RV_c<n6.3+0.]-U9@a.8L_:&r5$8.3Q+kKi0ub,>?l.btT9tVl6tgAR>&0XeH^ee>BQ.c*g"fQ,)EnaTZmiI8_R46U+f"KC;+G
%I:SIs,UH]L%C[#uo&U<>Q,+Qe[pi<9_g0[Y\s(h.g!s7\1Vo3;RT8t1*%s2dmBhl"VX;S1E`00,S;N_kN`\:D7kL4QjI&VQ7`S!X
%\T0j$eT=6RTmgJ0LFo"7!rpNu$!J(@_3EEnKao[l;kZ(&]W#cs[%W[BN\Moq!sB%o$"Nn;Z*aW?\^H)CY^]mh2Ei?e5A.*&Fe1@K
%XA&:\4/8ipf-i/R)+E.<8;W1N[BQja/3_\880&M_laAdPV(NbB2U#44V!;VjG>LuD@O9L>35d.AV9bC\g5"<[q)IDVQa0?Gb!`+3
%_%b"-#NGnj:4f=8/l5IJhuDTjGIGJq/*hXKca3Vg309Q%V9XU.-=UA!A&."r(nuj6m![HOqqH&&V9nMl*Z3OFT5a6[cT]NKW"hq$
%8pVeK(?:59!PPTR5-!ElJ\$qoP)+-S&B4F1&R4"B"on,.88ifUB>$Ou;,=2gn)EJ9=f+Np-YGHCBtu-2_Tm>.L1#chGi&MRBKb_G
%E3U@/U3_n$F"sMoSV;&Z=d&Pa*7d&C40S;kb*%KLr84E1mP2Ti($](3hWN+')2.9&'TYFWmb0\br*[.XD=?juhqU/AH#M\.$^3*3
%=daYR>rNk8dC#HW$+"15lH+MsS?3i;+!0't\a6cI3n_CcGY(Q)]C/I5X06KnTi/X+?ZB\ln5[1SQ*,CSA*UBD>'k?TrLoIopc%AJ
%f8=Wt^q\slJUa`&cM%)d%;#9[s#u:T:f,^eU@44:;t%a!ma]k$lc.H.KEsLl&K];'/o.e06^1Ta4h3M:A]f1>Df3[ZhE3gnVf@)B
%N[]"Ils:c5.!2D$Q`reO"OQHnQ%'hs>Z>Tas+)'?]r5=r-MTYY;,CG]h&H8hh+U0&f^6IXjjOZ?9`Me'hrQ?eoCB&)7F?SGntJI5
%./q*>:mE*\.[ZD-oj,P!Np-m.Cb*#gnQ0T];,QeTEl*[Rh9+ERqX.-q>gaU_Sb1FWd*5kb(`cqoBX*JZ<MisNm?)AGPecBhetJ:s
%b2(#cm^]8*&5+5_<-.O)jQ[m=SX[L(#I7U&*3!IFrV?QjjO.fK8+."L%Gd"ulP;]iI,eO[@#D+M10D-F,ab;Ff-fa!O7-S4frB-^
%UTL>j\U1/r/PclE9fG4Q.qbLj:g9%6YIh;M<T-17dcr,Mh4LjA*B9:-QPZ"%j6On[".W"]5guI-IR#GT^iN_fp[J`+H*X;J:+kn1
%n\+m+^Y:!hd(-g!?,L\<Tg9MYckK7.XQPZL".;_1K5L'HT5-AfX/YpLE%hC30E<oCH[Du:I!<;KZ$UM'"Qc>N1p_#"_mXp2?f__>
%ef-WRdm+tYZ"S/GJp)0d<18':Q@f:T%LEd4LOWW:T/q/^I\!>(Sb_mU6eMo=ajF#@I=r2U^;u;trcZfN_SoupY\/LDgTO,Ug^#ti
%bn.L&0O#/_a:d"s0)tIWa>2d^^7<%@8p!%o_]r'dIER3@Y')1`agk3S[E+WTG'RQ1>a#lXdYHB@4hK[6&ri`9d_@/b-T77a\>:sn
%"jV0]6UH_aPQM=g$*sso((=au#0bL,QEj6dgtqI9GPBF9l^K7V.5Ubn&%$7D'Lk.-`"idHrOV\'W6,!9gt1H\_PI0R4<+@c+_*W2
%TH6$VNJDQB6Xc5Ie)G[;Q7dLEFnMg+q`OslEh=k$+(*1',"LWA<2WVdb;F-)B]@:VM2=+Ulcl9&,]$>j\^*4^N<F/`N..7bhg..<
%\,1GsfcU/hD(JpFSfc9">s)?Z4I[B6CS'nDDI,f)hR90qZO<B@?b[!*b]^a^]j&"\lc#F'I$]eJ+F)jj2m$GhUM92Y_VEJkjMLie
%e]ktUMO^AP(?W3SY"bnWgW%XqO55Nci*a6Do'1A$<ND*"(#%s@J"[),<bGr$rjm@/qXpTqI'$/qcS)mhoqh?9j/LYXMn;_7Ge)B"
%FZ-Zsc*Rtojh9*r?H25<]_V*Pp\I@c[Q1it\(p>2L&'3CO+l8VgA+]`HK;4b^:8Y`bqQmn41$tOLHi6,`nA5^kLmbmnSRkWr[Mq.
%fbnZ"7/-Gmr0srC<=sBMVYTiIk9^'`qRa/B^\"U)9n'dWY?,(9W(q`sh7o^sdU2$5]ll(,38Qb-[ccf=,Q?n+j8JVqe3\6C;l=n[
%2u.c@q8Ml/YIAk9T2)9;LYZIj[.%[Nj6Mnq40p;!QhMG3,B(T%f2LSqlJ;-\h\a/I_VF^e:X):KRm.\R(VR*FWE8QNB&`FNY>4)%
%k2t$o?h]l)eEO'=<VBV>2k.arGjHR0o"G"TPNL(A9sT$<C:lTUco?qbcd`lHF@R+89CjgFg='bl3s8b\hkCpjj6#ILWVOg;DmOKQ
%`=K-Gou.1Gl#eiY!n6]lg58(#J5rclV\;p-$g?`%f+UAT]PGdYcB!.?9ms]E1D0WUPAB,$e;Um2Hn!u\VI"K/ohY0`m1iX83SiOh
%[E1(BM'Vl&2td#iHWml7*50c8D7uC1g]-sG-dS[W1"H#l&Xm=1<+FU)iCDH&1&bnsV%*R(L!L[>D.Ya&HuFW#C\4Z/he;tWC)tU$
%r,1ukNkK6sH_3L!X!=6$eNYl0X0';4PMZb_J'8s21QC>9`jT@?f4b2"HWs0\2M09J&"V:TXmP8mY@qP9n9j;qdla-7`5C1gEP/`0
%R5LA5s#sehJ*9Y1FBT@T.uHECf4kUW"E(DX+/dt3mf$6SH6"<D$Zd8rcg)On[s,g-oeG(WKUIeFf?[,jla27-1i_27qs47&Okc@S
%e+,QW(OVO$q47=VMe$@=HE(tQrp68\4EK?#23X`PkKWPA*V0T4EET^)?*%rt$^R:XWN3S#cM6?jXmXGPI$G?uJ'P*dj>dk/Xec8n
%n^4Cok&IbOg7IT\3gmY/3r!a;b%A?#%maKoeTF&JK6o?#4?@B;`,iUfC\@J'h!1Mee[K1\\]UNt[]@l(C"]khV["_HC8S`8DL[P.
%c0Maek^GNDlRs&sat8(!%r(R@V'd(3G=D&4?0t=eT$;C]iE&&4H>s0k1LrkJEV0f'm8b&_U?[M.eibn\G&s*VD9_EP9f@IVm[lG`
%/iGBK)onRX;B79O[XtRRo]:GQ)6Lp9l>)0qA+\IOdJEk(p^,N2Wakf%FD'TVAtLrlUG1s(hhr_;5>oJ(NUG26Z8"E6DXmUKX-P9F
%G7'o;1&C9cr^L2KH't';BE;>1[=@o;gVWWAcaT;Lk@l*YHEle[c,T<[g?tO2*nC0lRoK6*i*W1OcT7DJV$4"d^3sAGOD?^_o%%?_
%3njAWgc94'W5%2lgqN&iT@IiFlZY!Xg3Xe+E>mujO4MJ%ZZZ/s)(X(Ch+j;/Xg"ep?'SOL8uLN^:&U%&%``m9@d2QtD#94#Cn5n^
%\aun+kF]]bGVbVe\*'sVpA*?m6ee%$)uKjsitgIC<+!fAZ`'k;h!rjjlni<Tq'5jKBgGapC7B_-Oe%KB2;+RkDfH@p\D?:ZZ4<Un
%>7ie]lCkBkVu-/qdJF]e<-M<6co\B6SNnuGUg,4WebN'LB:>i[a/,6@kC$UX3o/EQhU/fX`?!IK9`')+`q^T87J*VCDa\O&A_l;l
%\)7&UE^;L%-2a,b6*[dTJ+d4#Z8Pb0QqP]rbuX*,5'f!\Ag2#&lf4`)0=n/sgL%-jCKBOVU<7&^Ec!pHDRuVW"%G)j[."p^:Spb_
%=mf@W%F!'>nJEer[E4uB1TjDX9)-AT5Vm!Lio)A!(lgSN7c@7ZZ@Fq$0Kc^9lPhfIdLFnko%e:dX&8q20Pcs>;m"JTGr43=jel.a
%%omXq0V`I+k`q"NYRVXMj[uodVui#lpHq9b>\=)6_.AdAB0Z9L)oS(=&4SN/B#)VI?INT$P>6MP5OfFq+DS!]l7"Rd7e"$5;C=gk
%I7ZX#c$8mW;t.MmcC?2@rOD5II9="n*WP!ah7ZA;U5m*l/MDu`>JP@XF5u;)mq$9K.JcbIbZ^pN4n7kU[V`<m<1S9/*'!=`.So.g
%DZb(BNd=t@ZInL0O0bi>1G:4roVS/*:,KBil>%1Lc0##ulgLBfZM$0q;EX]]gSkG-bj9](3`4;Yk,V`ChM[*4Z15g,eGIGf[kH<=
%c1V%CEH\cpO1)e$Qu+FiHM4WtGgh,npZ].Ik;LYU.>gJNIV6PMGT`!ZUXm7lHS$%,jt#YtXYtb_3G7-UBG)KVr+U"_DK#5.L=b*]
%\@t0+'[4;GHGaW<&tW>us0A-;JHs^`2tcHR][JnT%<"7sV>i)m-cY!!]DS!YGA8HPW6qCMK]`p?SgoM>-Q[a<+7!D+lM4a?]75:@
%UZN_@RgO_%;\bPAj$UK"a*6lm4uU?+FF4<8R_lUSY9\_pg>;G`-X-i-f@/TmlDlp,?[5\crSC^l6t7Jg'72;/Sp[k(Au&dT%[-Nn
%bYcW2K%M2ff=@K8<A!X27S`V;pjDS)[<O`Q5X+_YH-?_F:%*%Ela":+#\3"_DCuHh-T<Cb7C%o:k4,qC"SM?A:9iYB\=ng#4[3Oi
%oD)dj2=pY2)uA=0Bn,dRejj$(En$"Cn+Keqm`OB$.C#lm\A%+<2fh':8=JCDg0E&ME;*q>ro'mIQCGF#G[gNuNK$S\e7`a6rN)o<
%.olHO/+\Rm2^T&KW_NXD1+WRN)tCf#b*V:u"HK+B0FC`4Mj2D?qYK4NYKhOme[8ZWoINuSn+=ekDm.1Lj?_hn`os,mK8j6%ZeG(V
%2Cm#@nE+2^dFYa3T)GekeP/su7P^_C<V3t:>DP@*In[T?ZnLijj@FTgA<eN^YIiTb\@Smo-bc+cGNRlEqt3Z!4T1&;?bVNNA9IUO
%\^W\;9JZ1D>2O"BqUFBX3LZCODgm.N(;Sqsin'ThbKfn*iX'4Hfir@oDPB4AVQ7gX^A?Q.]7-VeFW&_">C43&\rsFPgn`KPLC<pC
%m++)U1<rQ;!qqCMo%Rnpq0I)EiFVBJUbBZAok\`ZO%hOJWH,7`(*.hH<a:rbRpD?1n\0>*AR,2BAm$%6[TGoNY!"W[*G.41HF;T(
%\Zko#p/[%.X-J\%XdP26UG;sOA:o,*S&o78hArE*]:%j+.Q7:.RHO1l6:s-%[&0Ut=ckgnhjO8FHL%$(Xo0-X#'`(6[d%WI;r?=k
%dFBgtqW3#]8q3lQs%&RId;NMfXJ'hJY?cLXMb^[,+"(A<41@j)mEKtVh"k]b1HP-!BoTH0Cr0mnXR,=ug8t[R7!2q5[=%RcHLC:i
%hU04,f$"omCg'>mp%ZSTK]Bir!u&q?03hT-47YY^[SUM"!rK7EP4$YXVp_DF^;!lj/Ugh^CosdTLdlO\i/1e]Ws..hfGK%IhV!?4
%qNL'I*Yqsc^2)9Mp8\S-msglhp($[/4muW4F]qnr]%,^(F);Q!O2s\tRVuPl3.JQ1?PRaq]:$e&3M`XF3,0KT*UVDUgLmS*IBj7"
%_7AZZFT)=cE.=j+n`rqAOgK*do5"VKa<hNi+d+8t%ClAL&VRL*NVI&,VC5*i[@$6M@.DIMpL_-GPm@Z+R3]Q=;dQh7s"N26=dWu0
%3GtT-MrsZM_VC2JX3*t708oF`Ng$iOr`khOSpd)49`,@c+R=kX:)^b3Sa+T?)4d$rqrdDDC45KR<01L+=S@pIH>\X"Cn`l9kJcT\
%k,-5TEo"4"O].F&oJpXLi!meFr2"O\ped?]e6eTH5.bP]IQ6/:ZA#U+Mp1ps?7Ptea`a;fod]Mg;6ail4t31JZh`a*@K,q"Mq$Eb
%df.tTqjLY`[MdJNkHp`hNY^VYDelV,r%@1qRlL@I=sQ,"qqMmXc>TRd/Uu%#[VtDE]tI:(e$UDU:5cmP.pJ!W`F_YO?@9ZW^MB?h
%GT@8Q<pfqKCY>Dc6mc4Wc:>)tS^lCl1L"du$_&Z=:Iq#rI4&b%c]M:G\ok[bI82<\kh3iA2naiKX(-AHAFJg)=`[]Snb'NaKUQ$`
%Bi"TN'YIW>8%b[:Mt=NY9uZ_4bBr\oqt91LX6]TG0D!ZWnb3i$Xd/"ce$lNp#I7]MjN$eSqWbQAhkANMml'U@%i9Zdg:c?Yd5_$2
%IqiURWNVpGbg\kQ7nN;Xm2K3.na2tt[pQ&<7]0CoU=(/g7QS87a)F,K0`UE[K3#gX,^T96AgI?JHZopRFpETE!G?<)\"cUB9YEN%
%rPPPBSbh(%X6k5C1q1MP>59"40nGd]J(r[pbYPkkl&jHYNCGR.m.m2arPqd5q.;7"(8^P],00":*MbR)1l&>[PlA68q`LMhPe'[Q
%5Hd*aT1TmR=?Tt4?#C\6gZ2Z\DSI[llc!R$I/@EQ^A>/0U%RI,bDXe\hMp.=KC-VYFc>2.f3^A$lPFIeIs:$:]piGrCgQt'l5[#.
%Cu/Lc1\A-4CsL1omX/g3a+iIh^\fM8_J/rgC%7PD5LK@lT?-,%HW.VFhQVReX%?J/2q?L-dcZsQ1sT80o08l!5>KL?@X$c7Hm]M4
%<Bmms0:["Eh:i7>EHZN5UXC78T/;^#]^ZTPIN!&TSY,8b_]*ZF?!V$;r_Pi64g;&7,\c)hf(=aTq]%@g]QAI4q>-!O$+H>MG40_K
%K@\,Ml[3G89k4+um95i8"Qp9@7n5"Mr>!ja^8t]69t*"QmokK\]10BC2Gn?TXTL;eeXlUk2UsdFIoc"gp\J0nH+<F.RdS\JRRT\Q
%>2NMN5O2"-M7kM3:%)@dLg?7d`ES/`R?kqfded9*C/']E>odn>jt0NQm:84Z\"A^/Q]8=TqlK>RfBP\<C&d41CO(<?K;H8gYdq$G
%MtpgRS'3;gm0g1]*mu(?\pgn[;A)Zei,/3Lc/-!M2=C%km6HY(c-5VEpGQX@s4k6Pm/3+2`8ikk(&P3-ot@CnQ->Ao%R(WWn(Wi0
%k53`S<u?n9grdgkpK"1U]"B`s[TUd*:FcDC"^11]6Ai#$idj0'PYmVFl++^4qV&p4kc=0Sfuo=qC(pI(r$Hfb@(0H8:6568K-=@/
%pc]A9mX5qS-]9pm$G<UOZ$S4?G]lCEFh5?VN5;,+T8;o!Y'hXgJ!rj0ZX*<30:t<m@oVfS%bXlQVl6"b$e=9jg6u>Qr0hGL-_!uj
%C)r#'-hY[C&!L-a@MP3V<E;U=`MP#Xc',s*[s@mgrcb9S\q&2P^:Uqfbbmn)kdO+7>.s(dBl!9MVAISUm=Y,a_kje9!cjEGnm0g.
%SH\J*\"6Q7cOiGpR[qmWYOTWXgR1h&Y-.MpIsiS@1IgtV;1AgXI\LgC2db+XY-6!CKeo+9r=&XeX7tZG7QAe`C%'BV.),Lr4O8LW
%gT+Rej$dThlsR`:mh9fn:A"DW`2Ssd"K,Ta`oao#koYmtoW??77Ib/BqX44eI5\XkgA?9%7P!j`Osu;r[]al,2meKU!;Gj`.K>H`
%8IDNi!rJa2>)-U+7Yqen)fD93No,$"QZeLBME\01c`l2H7`>'6`+Z`ir9Vc\QG4'[k3p4!1AN0NG]lpFGFd-b7i/;Fb9'ZQn$#rT
%^0J+QQC<em`OjjSchbf9M'N`82@8d-h=I8\LU[7Pl;'(ZFge2,B6+OI=u\1>dCpmf=T-YqDRQ:1k0\0]N9oA3;H?<d_c='G^\iL9
%;rS1l8YJg"WS$fSEcu_Po3K@f>T3PcH/J'O@uDS&\)_M:G0,Y8aN)rcH<G#8:V@%iVU'-e[X3AMqabqGdBrN.fS[K2Dmp4iYOf:M
%c&[*XmUu2&n\mDSQ2ORcg""pTAc8:>*TZ(VMZ!#@*299!I'L%%>!J$r8EE,%Wceque5uBY+eHp,Qu`J2h&0Mb?=hcdg9]1K1Q%Jo
%NhVNuQ`m^nXP0%%^=_=kR3$3N;eP"IZE/doSilm.et/>srGHm6Wu%:PVIm\Xbt12eaZ2eL?U!j/,'c0mr;ZBb%snj_id.$8#<p=O
%;ebc5N!?bh%`.hq[C(Hlcg8YkS6_K5=-Wjg*7%@i.52hR3F8_+rKgNp<Kt;EJ]I+=NHV^V@BXEkkR^o8rq>F4o^(_Kf"8T,\F7@q
%/k5kc2>9_l>$Qg>bY%c?rI^#t%.8Cjh4j&'$S-q,\fKHe]Bu.p#K%:C]!uZ%p2MPTeEtLjqCZP22\0/)i>1i#ke0[3='UYUD\[70
%;s<uS;kt6TL[;Q88o>.[4?,tM8,"']GC/=iAUO1IZ?L8/URoLX7o[+f3!\OelBM=):3hm?Y^BF+rA&H/4K=5NO.03*AB2ZaAh),k
%+hM3LC=uH;\$Vo=L0W97:K%`A@_UuO4-?!N.u`bEl%c(^J++A9U)oNs9poX`+)4L1)KQs>+2kItHEcf$-a"P+:-N-'I_X;ONYRU+
%/r!VIY')8+n&$1+j$iI"G%ers/0;hEn[Ql#8*PJ">kRhE[d2bMdT`XTE<b$Y34EPVj0'jg61qjV(Ieq@rp]dBpRQAYo&4`Hf;48I
%:u;KgBphK^8G(O6d$R71bR]-\'u%1bWHsVs#J\X&rMrd0>'SC_c#`Q,HQsV8^$MrZ>cP&NEE^1oGlqs5=Ps(t_7R=cgQS\EK6lM%
%bG)U4pP40)YjZ;>&Nn>Dp\tce;*dD>VI$QO+8q/IMNCCuo#p);W80VL[#3:V1pq\HT`]G9lueIe9.^Js<9\6LXbQ+X;t3ZW)I@N-
%)imkInXn/-j<(Sph[fLCGr50bTD38kIelL?Io_0D]?7T)?=j-IqV)q]ge2EK*)bsp=tG9$Eph:@4MdH^Q&%a:R>)IT7"hY_>2oFN
%a9]IDrhCB$2(o:l>4tdIW@+I.f'o4Vaop$O`t_O:+4jC.-+5]&4+1XcA4X/PVN/O'9&=P&Q17WdYcIYd,Ps[,o;!sE8<&&h!.,=]
%Pq\56Oln$U-qN?d(]0A&G84F`Mf=G4MH6RP8MA2sbrl>r8qU5mBV'er0`)AdZ8t[?=:MptV+($KXPLmcod+Zpb6D:I<.Au?&Rsj=
%8A0:IF$&\X^UT-CkP`gVEURIMq0TVKAUL6CH&I.@6nO@.=:*HFn=pguBP@L(:Eh;T&Ccl1<kRnQU;SF!$)p0V9?e#]MSl5:dkn>*
%C7<ZMKOd_W@Xg<G5l_?Gp1kie`)Br5&lAO@Ou6bUoTAO#U"Sk&=pebcJcq5^7<,?jgIih%5Y;pcMso.,B&&Fkk,9At[5?EfX"pa[
%+a$+o4\T]?rW45_Z;^cR`DG.63/UsPBPBqmKje)I^?91I+H:-M+6Kq=5amQ/h]\/=eKPb^?'-Em.a$1u*jbMV9kPAcPbIK,U"MW!
%=pbB/YLeN/hne4(n6n&aj8Vj1@8:#(r,Wt^IPF##W>,8.[>aV!]N:9t00?ghO-ek^-gC:7Gg/:Bjj3eM&*$i\-3B>N"A(0l=n#":
%#q1]s#.6E:AUtqtK`2]3:dI\dmZU):Ast!=`8W%m7eP6!(WOhBe;_No=Ujj]2bgrD,Eb-VAe^CeOiWt5,u1_0q@Z;[nZ\;dkYbOs
%5oMGn'/E%(Yt&sW?1RM\G='KV(?%Q#57R,u\R_Cp78-(DqPE\,)9"J*C*FQN0-qL0r[2#;Kh+i@!O7^l60-M0`.Wq+a'YMZ#q_p&
%50'u\7.:B2<=i#\*t\=*6*UP9X9g<ZImjPa6<dt4=L*eAHf,8DBXZ89M'=nHKAdu[Ok*&C;9&`@$U^?oqAV:e^LOo5S;;VAj\"=)
%%Rpc20_#i]I2X2M1optgF!>!*8?47mb:+])6"C[O;,@dT,ftjn,\nPIXsjjc49JGRI12^E<PWTc,=aj+_j$!$juOXaq5G/b,o.%$
%@QR/GU*Pl\Im>&[R&1H+a7CH+Oed8\@\s]8W@Afp*6&gN/;fm5&/.XY(.>+7+<jR9M,`8`<A)F7:MZ+/-9`T0%>h8fMUZ1Zri@bg
%P,D7-\jRbTVd>7>8F)(8MQ)@C6nF9;$JG'e9=TbSZG<5LN^CjQ)&b5:ciTnd8SEs4X],HUSr+Ws,(DJS"KG%VK-4Wd%kKXmMIEWD
%D7B_d;Z;6h'BEm&)3#u)ILr3TlO1XfQk*iYctMrJ=1gBU;arK)LDZmPXgBM!L=gX*L(f";XdqF&/2FfYZS;4>O8kmQV+-dX'pR3W
%deu!V>)jjc,W>8sc+T/[&fE#;[$qlZs2?9K5_VK*;bSC6A3J6pP*FlVqgjp1(@]C9H]\hlKj]@H,1MEV>uOCk_,_]bZ'Tl>V5<-<
%N[<?pl>*4gZR`6]:"-%t<'u6d-Nt01Uj"DA%(M*[9UmC8;PRPB:ai9=$&Q<f2?K''0.:CFZkOf'!U#GJ9+aGPdAj7qUj?b?:`qr6
%Gaa;B1CVVU_]W0k-0Y&l7D<qj)R7?b8=dY99/HLcg5Ih""scO2#t('>TqESab^RS%&?7k6-74D46L*>]4S22gOF0+e%`'I;pFX-3
%+lg$X=al"_7C;>"IV1LTP`R.5V)C-DK`_*N6of]X_ok#W=eJ?P8%/,MP4?3#h6,=:C9>kD@jR:J&1$b:82u#`H8,sn%j=Yg)F8?U
%F&U.F8:"H3fI(,[]8p>).2+HGd--)V9D4e?N"24'.M.aoE(K[FNo>nZ=X>Q`;K;r>r^\VaZFMfH<07'/[>`3]LE=)g16HR.2(*6_
%PP%t>*qQ%u@Q6#,QkfKgfq?W8piiee8E#<)-V,I.8n!h0Jj2WR5Gb7!eUsb%bs>%c'FP<b=^^rFa?:,!]Gcs1,k9Le'O0o6cUN-f
%E1J_^8?`=CCB5CbLhT+(/.?r<^gLKjZjA%`&P42u4I1'LK8ZZL\sX<F3=&#%FB0hf=+RsB+D<rla@el8Ma!)i@8t?HL*XLD@8oTF
%7,^[(Q-<m(pjOP!<HrdDS.J1/W[&$/9H@gio,FR2j@0u6o"+sH">a2b>rA@lU+UM=:`.Jb-jRatFN'p"??^Yf_,lWuR7T]0\Ai%0
%6;S-!,NfC73%@hUDM3Q"ErO\55bXrA&]b+XO9<Q>]:Y8!7p<X+;@=Z1PKY1!UEoCY)Bqd!"c<KErmJ`:64P<p7M>AJ%="m>MVW!(
%.MUEs$Qu-Qal=LD8)^4B<?cZ$+hU[5.S-N?/GGCad>4Wc>]?-2p'%_F!fo;mBdOB9,\[O>L6N8RLAW&,Nt[>!!.,Hu.=qbYCI\^]
%Juk)8pBBe-\;`=1p."##"?r9288Ce#D\N>:S9ghRjD&bMK49`UmPIf=1ej73FGPK<`O_KT&dN5EVF^Jq3K!!!el1JR\de8-Je5iF
%;(*4%)UuI)6nX4#+:a3\1BKj@'XDa5USPte*8Vsb0nUH$O-lQEN3&5]<EYWe&Zoe6.k\kg$JEK@cR)30!!<RuZRM]8_;U#&d8c?'
%@LRZt"eplH;a8Q\#(?t4N]8Ci+HiW@B+bJB'#W<Y;@5@>4)0He+-QNIrK&9CCb"*G9.:2pk;8>&]2%EHE%IAQ%5GE'aL)9ZI"]SV
%@s_!(+&k>=5)LO0)Pc5s!`.PuOg)/Y":?mCge8TS()NQQ6XrGLSrHBnYk1r6&sXs\;QuB15W&AQEbT3YA=oW7e*eC[6YV?gA0FYa
%XHFG^9FuIh&R9h'+.,1a^,6E[@G](m72_SQWoY=*FB&b&?sJVP>qu1+%2+T(A4aF:(7+Y!YJp:F1^l!+bCtJX/F)YabR:+kBma9N
%"=U&PMReC,_P*'S.*Gg/OrK,I7nJ`:O@\W^[$5-3$7VHR<i7eM;p5ggo13HGVIE/tOL-K1#F&a.MM[%MoE,_OV0UEuU-`&1o)t;g
%=%U(4H,LDM-\YeH(\=<b@+?Gsd[En'>j2Ld-i0N/P!Wq.68j`X[\(mjQTg6q6Ac7eqnZX&S!"o9&7LZ[So'eUP8mj@OZ42TfuA=:
%96b^BA)6`&;A;;$7H9LNN]:2f=VTXsS,(V1!oBs4GB0?k)j>Y%EpY(G4NKe_Y`D)kMkBr.P-fnnQAA(q`);F'a'+Q;A=F0KOSP]K
%8AUfd)D*-Z6uF=T1]]p;!ETMOPI"^+ef-42^IWMl>#,4W+C]m$-*`J$r^9H:%)Q+<1'0sKd#&s8a6FFH-=U8$DFcHAL($XT7C;&f
%)"?.%(t:'%:,D,7dN5dNl-fVmI*Y_4!kH&35JRM:ZOcYg":]%?Q`.G/qcFn+Hc2lb2Vd>@Y;kT["O`"R2n0RC,X9h,pt4tj<U:\M
%TM0U&9d'E&"fX!#cRfn"@Z+:,E'hd!Gjj<QE[o@hhISt\8Adl1`hFsJ`".Tbn-9ShC.V<:(lhD6f8i&<[%8"K8;)hlFbXrk8/NJ0
%Vf'N\dCRJEk@dDJ%e0^G[\)c8,VTn-_]kIOA=kuO74Ho5$R?dT]h9%*?]ZTFFe1<cnVB!-7?2NZd95uBp'8ZU-TB;N<)`.H`&(()
%aT//k9eG_gOC!kW+!S+U#%fI9m)#?(G%ki-h92>B,1\(T4`fcJSo;_t,Ysb9g76lCCr;7Q2b^lL1$OEJoj^?@pZIZUS>"]/]Mjn)
%*!t7M?28`aI>G:,`Ca/qW'd]eOmQ$U0X=u]",L-T"fR;+kQ)+\@8-aY4KJq5363+%jIPBfNPOuf'Qq:6p5iI/$C9lZU(3q9W*#I*
%!-nk;5fJK*%jTh)dLa?a&fjih74(At!*8fsBaSJLPBDTTqMEqcl&@Wnd^Z>4["On8C?UY>m8'g/lPGm('q%P%A<"Y)U`ed;Po&tf
%D$2d#q5TfENmsr,S:>tbT?:YAoM:'0IW@hT'1XO5)>\<;ak'6YemdLAQ*e,b`P?M\,T%e&nA&$V+JdsDjD<9VV2QT.Vil_am2(N"
%#`7=Cr;@>oG/)%R.+9<5/D`f$aaldSNpI#&/3*>0i2]e$9hQP4(pZpLmorENlQ@nt71,;)"SV"i`+]G@WRGdX>)=[Pj8m1_`QG`M
%1=bMsbKIpQ%8n<*&m?*mT)l<odj03.p&5G'rsi0257(FbG$P'!4VV@E)C7t`Xef).:VVGPn?siia?uO+'L)aFO2ad%7*:aEF=3um
%$H0(kP49#<,#cS*pJJ0d@4=A4+gKJA(ZV$/Sg*0'2tB@3^L@5b3#_o'([008.*5go)1-Q\OGj^]7d?%n:^RIJ.E7$O)OM9POG]^H
%'=J,bIcNH_YVZ[=7J`Y;-ksP_AdkN7PJmDVbput)Z)'/u#2%3E0W,=F1Q#^%bnl7K^)ET1^@lV)NZGq];UMB%JZhMYN/W-<;L2bb
%7uu3cOnIdSg9@M(<aVBqSq"jc@_XfDL/92'UjRl*-CTTnTTuVP3/'u[6Sm2CJ/5#3Yr&0",Mjp6-R#!,9BS#9RJ,"SUu\NgXkh($
%69g)Fim<Ia>G-,,7Ogf/!j]_bZXXZsB7a$8*dF^Y&o!A/Fpg,t71.@1);ZJZP=h_&pUCdfb_X+B!!FJLcXQ[$`XK@&e3esMn^MFm
%B1E)p;>:tbm2gH=%)F\8d:khIX(eAq-#u6l:b^sQ?u\bG7:`>.(!*FKCl<t?JhcoH\n\"#Q8hDd6=$2-,R@CU]FeeSS6@.#)-7/#
%cn(<;DV=.jEp;qL\DdT7faC$.+%UYcP@+P"PV</:4d2N?NDTaKNH\PH&Q1HRdI<hWG[FS]<PW=N-kd_/I?)lY1_/BD<+4[T6@^0l
%.o;H<P)31iL:Uh,D9j#d>QOS\qOSp6!<o!>Q"6Uh,][bkXed7J<$b\^^_&4mE@7n[m(,S0@D&FHUl4RGkt\8+'sAgdX7-*dMJjLA
%$V3MZ@##K%9J29_'d]\Z-9e8(`cbK&h_:#l`]$=07>`6e30O_/RJ]kY+RuY0,hSW"$l"O,S0;p:WN22G%hKg))q,K?`#^HH%>fL,
%":NA]qAUOPs"lpf""FE.'P`sO8./gCW"GI4[5oT=pi+7UNE%-V;@&,I7ZJY2hDok_Tbh5RKHT?O7LU\%`0f=-Aiq8#M0\HSas)GR
%U&b3N/"]9>'*&#1KKd:\W#/5nk0jkZO%IRiTt>gXP6t\D'"7fa:[G8_/R9HKTi>u)8SV3V1_0gB^j8@Y7j-/T*e>#iVhj!,'n2Mt
%p/e4s_N&r4J50l.p<jLH3Q+2YN&#si#^i6<1]Y[N[$1gj];<<1!m2Z/Ckg"H5!Wd6SSuX6/%N(\B,'/2Y0@Mddf??4\jTX-Eg&"V
%r?N;gnkkn@L7t7ugL3H;D0B1X><@"4^SR<81s>Z[a3_f!-Nskr\X^Bs36D"RooQ<)VrJ?UGX=nRjOMXZWIgH4N+A&1b5h'aJaebY
%U:Ea60in6SRnN7>5U1ES!03R06(4.+3KeOe3Z3;0d-Cb&p"G&<^4,9m8h$uEKAVkX;o$-j*uaoUTL<5i.phG?>&/Kc*I'j\B-It9
%+ipcY'/^OTlh_Mm=9Ic>a$LP9+I]&iP1E:n-;f;`B$*_$1kQ+J'Z<fs%%ng_\gqLVo6)::`lF)en2Qrne>!<]'?DFr88GR];@UM$
%o#:$ciV]`"//`Jk.g.jRkrSl7R1Z%-/;"e;MA%BeYuM(tOE[IV:ufoZ54H[Wo`A*HLT_^:=[+I13;5:dUjUWr42QVnp&1s^W050^
%R7ZntqLSlGOWVUb,oiEV;+(bRK(oD?i)CrtQj?(o/>$.nV<Jm#l=92>HmIDm2r3sIcaBp4d$+_N/7`^@W$i$^.T;U3ZU=hL!Jq?X
%Vc'g%<#M;6'C=&NJ[#nIKqX[;X;Gjti7t64b#1okCjZ\Sg_'*7a?-_.Kk-?c/1,/[:jU:3;]W3`D!,Y8Ke]U/,+rqI!:IrHHUc6!
%SgmM])cR6,aNkA[nrtkQL7TlEe/>ikjG%Q.[_K7#4!rEaDWI[!L7!,>e5RDrDof7oiB8QY!.R[rY_Nnf(Y_Ar.IK9fBG0Q5nBB`N
%2QRTT+),F3T["8d&`P;!.f"nN&A@lnF`9o>:3^:@C1K"o4RFE^!g?=7&[lKW=pnGD5XPi[-$W06a&EXH8J8Wd@g%8IQa=opXJZ-A
%+N8dHe,l&>#R?lX@qf]M4V71`&a_8MaaZK(+W3;\gH(@2,g*`G5[%Qo6U"?t<CfUn:>T9N@"dT@/,qS#[F5rnLkZ\M6Q%Vq;39VN
%&HGYW-5T,4.]3g'+RjsS5kGB'?G[9E4rW3U<[d/K6O<kOIunEjaRqp(qF>rU+t)jsP!al_UN(hF+L+SEahZa"TYa;5+?j=tfc/j6
%+H^TJ<A=_"3CHUV@3<W>HC3LZBf2T,SD2T6+(=_l@2a6m38cX`$aMYZ6O7Nq:.F9k*<g'(,>fq.KpSFLoWekV4FU9*o'Tu%Ec\m?
%F\k*5gcrk%MC_-dB`DEkiX[Lg-W-b;!;L]4]O$@A.$R#:6S9TNc6YOq8<P)sTAg%V6\0b4,XI6YQ'-)"6FS:7d1,eKY!WlEE!46W
%R$r7M)lGW2H\TDpR;U\e=k?ABKb=%X>%%Wd!,`YC_8,W1rC]ptJ(1uA7>BG#EJ5:ng4bToio6P*WsO+\3)g87nL=j>=?ro.D@I58
%&(2^4n*M0.#F_pfkjG]RodI,gM==g5s-(cYUbZ0e2?s8",M!&MB:S\dKp!7*.6?o4!s>Gsl"H5@n)S2hfe'7E&FluP.GS'BS*;,I
%]JusOis(',l9O]&A7\&#UGOmN1_1u8$.LjgKjAiXL":@e7$77j0`?,(+qE@!A6(B/m/$u66],qm6-;U8V0!/$<l?7\3B@?=O?gS!
%TumE,aW&mc6q5U8r:37HW"TJtL>fA(YE!Fl1MHie:.2U65ZVp]MpZjU_p,Ja4G![frdr)t[?9K$0q@Wd;%$qN,m(N9e>m,U]-.5b
%_J1>m8=FEfPlk\epQ5<:ORkHG8i16bO!5PE+^u?/nXt">Er_QX"HI,_,Vi-[J`mtP([;u.**V&`FafBW(5hL<Zt#;Z1JgYX3_:AH
%p6%]%e?P>5+H=n66Dta&=Q^gdd%*iJFT<_OO:3(:f8+i^`O0!8q$e(dK;LCZ/!Yu!/B@X&*'bIi_7iUKa=d;qfE,L];'>$9.g9RB
%!-9Fmc40q+*$TM;/&'u40EWaTV5LU#SDphB"Mt`mc7i70'[pMe`QO,e,IQQ@X+J9FoUi3R94;@amT<N6G2?8"(uns8O\fu#co</q
%5H>h0VP,7P/g0+9]n@tmL\%V1$Lg=^5A[&jap`4hcC&'5$4>^L)SFB(M$tD7"op\Lpk#jd46WW5c\P4)I^;(I*H7H1cm]>X3t@%Q
%ba%bC@4fjlUh`hk2MF14:`,1P83DmWiE8I(i*9i_@\is2;-6OS_?%Rt$2"D[Jt-RBTfD>Xd:LUj^h]d3:Er0]89kAR&)V!$eBrOE
%4<DTTE-4i?^V6Z%7Yl\R&fEbQnh5*m&thI*h0i/242JL*KIZqP7U]Ao:i%]lqC`=Lr!F;L&%a?Cb19[%h5:Ft*"n'iZ015[DumNF
%fWbbCHbLa9/eWQe4r9Cglr?tH4%u,]8Ab*Rq0_[Kd!&#j'`>M8qT?A^g?$(&,/HIQ9RM"5pmQp.*&19&^Tij:WI5&8cY+G`W_G0?
%_+MUg2:B?:Yt/5&@&qEu\jcVF&n>_cX"=`c<MGUr=c8`s;]@j1A#<AZGuI^ON.67L,(YjhQ'?,2XoQ>e;^9.g,[WGWaWX4\;@hFC
%.f"g0(rtte0@`o*%eE9WpjMh9n0?B5/sV^?%nLCnL@9ssR6g[G^]EU5GAC%)YKkK]N(C_QL(d3IUir.[dtuE)a&fmPR`On8J*t?<
%/`0pu+QBX)N<N7*5dI6/R>&Y81CYOHj.R2+Fau<3JB!T^h&ef]/t(pe#$/\A3X67PmA(F'gPjhFo/jT-e]nQO$mVV*-Y4LiS`6,:
%;V(k3)$6dT=HPf1U8>^:C8bI1fMtS9jUK-N#m3PZ0ijh-X8R),SN8[NS*e2O2TpjELuE^3K1H`;s'0KhE%Vb?$SU%n+ALu]Ajiu^
%abfi/0(3rJ.()n5+QCagKS3X0"$j1)!+X/mN]irK82[RkUo\sWErl@h2b,0$-13&EQIRsN3-5rMdK<B/,d;u+e:!cXmUE9,3A=T&
%"H$lrpH[UKjt.]IAj,k>3JdG9;&>pG4FE8.;<O/t7NJ=fQM"'_$:0o:aJsYUgpMknE4;po6,XpU%Xk6gk";[Y`GeKn1cq[dWp#E9
%A0o3X,*r)n%1:cBH%<T*3%sY"VTX=R<(cZ!(m;)0KE&`\'d#X2G[m=N9,,5l)*\"[lu7bj-KX!B.<&,bp;ak88j?ukQ&MuY-.T+:
%q//*]PC<_9+NYl#iN&&U%$ALE.t&Q9Z8p^Ak!b54cs)R"U=]Oj-oFrE6$`20DMqISEo6C>1*Z9:kSa)L6XD2;Sj%lao,X&N]=F!=
%.FN9q_0u%[\#PDHGSc[eq]q-<2cU"qhr0?l776#c"Of)0b]_iD<>]5LJ--\B0',K]r&A$0VbcCY5(+V>d,??mA7YSSSf6k.m`u=o
%3Vj=Bht8?.s58Zc0A[sGo\dIQI07QF!;7,-qZ$^%)p@<h/l%3GhiOXXi44_d'nsZ$%f,n^;J6Ep;`@3UY=rg3pp*A,C\X!-!Y*'k
%ROo;:f-u4bV2!WK@HWr[3Q#HjVi>\iCJ$JSM&"=!k[a%jP"&ceP/6]/ln\:o!?m1S,]LY;0ug18aMd&$R-f31de6j)ESjH,AfeQ1
%*U?lcra-AG4FAQ^F?Ul!,r:G,:Rk@2qQsBWlXJHeVCJ'>[BcAX]4u^hRU:GG1;bCYbkh<?c#`\(ZFo^E%:ac'YlkI9E^t+1)#AmG
%$[]p5h`9j%Batf!N=.jR$*ZW*&:B<Q-CCtEr1_Wg.5k#-s3!oKi10='<uCCZ6(s!m=S)A+=B8aTV1H3=bJe/R4F\UWfQBG_30Fhl
%=Ca-i8Y?X1/jtV9WrYW/5d[OhWmaBPUK*;q=+]c)@^KU1rZHi,!OEM]a#$2bd*k*DMuKf>`st?B(SGiPc'bD]1L3"c<Y?f#\r4kN
%oi6D+cD%X!&:r<K#+\c5r\EZN*&f;I<YSl'!GC@u$%g!*'ft&"JHC,0+ltf$S9($15V0F\.#o=<Mo8@%P4L:E#*<sD1;imacp?2a
%Jd\n=1lI#AeJO+#D9DssfFAd&en7oWEG3LcWJ2<;mYofH9M_p=cVCYa0Pn/@N>G/khC-S*;$o@S@=J^%"`kNLl)1Z'N`S1$%+f[C
%ctnJ3/VR%b-,j1JGp*bhJ;kd>WtRl.ne8P.+7<j)VVqOQcdV<80(6^XQqO+@gQ<o@!aW7jE3K0W6rFcq$Jn>#TI&qSMLK*"^5(L:
%T)_K@")6^k6E$EUJP[L>UH^.4P/^X5;^-5N9:M;a5/T!.Qr>>K)@9CjD28-QB=r>P+-AVORrmH?n&`KjVptMP&LT>$=$bjOIKmXB
%jF\=VOSThiMsm7%IYR"%rA!rR2"Vg4QVf%E(3Z=aaWP2kD_U8gKdJYYej403e.Jm#KC*."dgIr+=5Q98\?Rekj5_@j4u?LF&!a)e
%.0Ps?+C?T;N$Ip+%b+%tbCdO)^Vn2>GfVRZHJ1Z58S#_oBX;^HIKr<4hY3QBI0J;:_f[ibR'445QG46k4n78++>u>7V"clhCRCYL
%jF8E@a?%\^N2H,i68'8cfb8V&6o[_%*+A!-,;PG3b08G"&Mf;N7ajmj;iAKWfp3UGTC%XjA36l..?*PK>A"I]X:3]^Ab]JmAFMN+
%C*"<=m6p;UXGG@k&h#gqkY!>*8>tlh*n<2;>Bs3*4WcAXccbRO@61:t1EK<1rN2k&Y$c^JOYctT?lc0g'),-DR!1iU\C_dpW.R]1
%3o(><R)]-Zb"4s<Amb_q%qGlB<#737$D<l^)=;m\K16"C"t)cD/7YBf!OQ:ILV("e*\^t!a(G\"s$7FE!#2[_bKqOXZhXOtRP-O9
%OF`EO>2E'@ZC9h0Bn\3>-pOSS#+?D"FnnlCW!f@:,CXl&V<+r5/Cf1C"^8C2lN:ffEWUMJ#.,8<i]1@A^iq-8J4;MN6Aca.dJ%ag
%`.9][l5Mu-[X/$-(\]_EU6>%'&j[#O-mQG&l[TQZ?j;!r/qYnpl5Mu-?Hc?^4uc@MW,mY@j0K>V@T96h7B5lXN'`Kq5u`9i0k2'n
%$R1#LQ'6si)\aiYq\ka@DkKopL_.CR0B-_W>[?bA&0Z:t(['/'L&)##*fXLEh:2q+FMNg#AcRT`Ui_@1,a-?q3"Hh9R)IY'FO5sq
%[[cjnT;fgC*#tED)5s7.`hF&>>:sO8FNDmHQVB>kEW*l0'ZMXmlK'Pn$\70,7Juh2(]QEtdJnf7b.SF$^m$f_(MJp6/hf'8H4D8X
%,6*`Xh`&VNMRQ-?$B+;iab;R(Il:Gi67En5.-G6>aKV##G^ce2j2OFod*./;@lVYbmI+Qmjui1@oeE,cF$=TeG>21QBL;;*E8"Fs
%82kDVh4dU5`XH3FA$Dn2#"SD)Z_3GWRDR@5epA-lJ]FWY]f6#G<2r;!0&e]Z3U:9cWT6ST;4(mue\X<G?.kGNYKHV2_m%f^!tI8!
%BF6le7rE-0asloVoQ2kX9-:tVn2N1q:!)n)6aZ)g;_l#Ni9q@f2'8h,e(6ti<r6g!rHlffSPT()o-np-.[>9eE^nMc@[ui.JWSoJ
%]ReQ5+Ck!UC+XDIUfbhN,WR)[Ga45b;8fmYNAJj`b0\44G>'17@8fi!W;_eP'TG\eVWoI-YEB/S-ADqaBtpf;fHQ1pY_p<k)R\+N
%8%tnh4<1o-+JY'_UgFE;k_+L2qs!"LkFj^=0(MUd=C8?9OEg'IAJ^8qGeClS6E+t(=;^1OfS/Spd"VtXi]r'9/@HH)4&VE>\KG_(
%'c$L'"&[+K9$p:Q&F;`3"),SqO*mLO:N]4iiLD\UPd(6iqf*nd5fV7Yk7B,],p41GnlL*?QSfWS7mWpCTKila3PKhtAjn"&ll%Sg
%/h9FO%<-LUnXa9Bf'T4Y.QT/?B)ld>p>@jT">clOfB3L6+d3m*S%Qp@6m@Dh`lgN-`bQN0G(4AjUg[nr:KPLQgffOtG(^l8Fs>H?
%jt<YP=(F$lb/%U)C)]DW?Ksn=O-p?%[k-sJ:>o25GjJO>hs'."@lV+FO2`g%2h3f&pMf5Jk5_U24fMesEfeq`-iaN"(J0T2jEu`;
%K>T=k2h:VRTs/P!Jl,/Y#!2ip'^rRM%!EAZ-YJ>H$kBai"3p!oY^t9mFbZ4*i;$?8a<6+CQXYlQ\?R^*6$!LOjqmXe%"R0k_gacG
%)@mf71<O$c1Rc;hj78k1nST9)Ltb^Q)<[ZSG\DV);77%<lQhFqC,/-<fN=S.#2<l$;UMr7+<#*P%*`tK<)XW8)</5Dn1OAg_]RQ\
%)?]38-aA3uq'7<bGCln`8_W(J@'KPc,@6fE19>:/RE^fiA51W[+>.O;a-.GX]h>Ui?VG<6^.k.N64V^8g\,h^BcGg$,8RdnQ7\<J
%$</i+jT4P^+D<!1r-eSGd>df.!I!&Xhb_5qdi7k;dSU4MD3f;-^B%/:13[uJj=.E*,6*>lUT[:%Yh62hLg2j!]\EiM8^sZ^,rP[T
%fduC?s'Y=QTYue!F0O,)W*Fk,I6Z"CVt&-?i1oTV3K5CD)+s2pVf?4X5g%a;VTJ_pX)0D(]$Q.Ca]#uNL/00S:\?fV4$n=m+O]"h
%]8b^dm-74I)5%,,G.[MN6,(Xm/JomD1)'=eX\\?*(pCqu4'nkA;Jf-K$mO4K+IL?U._EVc0>#4YYg9KZ@M^-2"lDY:.:e6>U>B=_
%`3-\pOM,Uf4@VXrMack('Dq+^lM&DRhGJ:\4AaMFFqPU&a/URq^IRV<Y^F>Fqm]j2j'StLarT9'ol=Q2nj&%.,2(7=(e0Nc7;W'O
%SEgk5Nl$r$#.RaR(EUm%b?oMP&#l<IDD)#&V\B9:ON!CDk8eNV2;UgnHnH)49-CLmNYiHH&dmm&7j%5$47;.KB`_Ps`pX2l0JK*S
%`L[Mm6YW3bX%1ft\%d/P&3Fk<cA\NbA175!dtAfp<:D0gqLZ<j9Hf96eA]k5)I1,'[sL)OiUIJnKc,XpE@j'?&&1%M4`qQVi!&uB
%(>R]I#KF6fo0lj423'L=hAei*aZSS;9FI%ck!YM1Yp)DHP1?I+RV$sD`/,PgIbIcMG>FZDlKXS1HY!#1'2BW5Fin!VR;?SRP0rVC
%7qme&f0+9npiXo=r-d-@@7h+K%T&7NN:"^G&*7[apr0GVj!h#s4m:"7B@M9$'7A[Vg"@'0^gV']4JIG20H]S*C(]\,gl0ntHm<pZ
%"Q;.c-W5/%&:m[qN8KKBNFHUp?@0Rk;UqiiMt;)RRnjY#*2X)<CrAW0^en_r@U*8.ANYB)cAkL1Y^!iH57FH(\/erD)+o%F1bQO4
%!]&;?Y,6NtPN7YJiM^PGOX(7DHe8J>Y7-!@F$F)B^6(DLa%*T_I,h7`88O6(#<tOomRkJ_gp#-!)B0ap0QFf_1PMf+)T%[5I6RTL
%JXo,#ZuZN=(ZXe+4,NG.KWj0)b_NtsR-Ya,b7o1d"`S-OaEo*<\^$dsb^6iC0]8G960*eA5fCb\&5k/^V&4V5fFpp.'<q?*K*Xhe
%knlJ(cdG@uYn\fbPoOAqec]q"TE&4\B5"ed5=j=gIJhSX/T.\TOF/;cj/F22JiFOaeE:H_U7*b.kdW`'Hik<98K+XR&FcV5Xqh-p
%$=`Z<Q/FJ+;1,#tmB!ns[*rdCDWfPF9lUBfb[qU4=P^Z6mT(_\rDo)`&D%Q9aPdt71q5FW#u`Ag#uahN&uJ*R"B72Ffu3gYfmeS5
%/0P]0+;/p!6/[t7*\R^D&fR5EF:o[86th9%&4"'?37PlNj<3rOI%Z9PeiJ?_I,(h0B,a6jrEe9*$'ZY%4E3ih.H!)]4tLA?jOG.O
%C4qPZ`7=8QE[)K%h8K7i*dOAOi_:`5#0YK/Z57$@,\&6MGrLBX3X_"UE%sJNi:A*^d_e],q*P&Z3UC+\SBX]Yr2MWmCl/3o@f`r8
%K^<Ik`bO$2F`e&X&dOkWc`-E,4EVm[!)<QA&@d/*&(JKZ!`sJPr_NrA!)O<"<1f!]O.>ddT[1k;"K&.uI2!s,=.WB8R`>GtUC*AQ
%c2]_UQRtN,^:mP[I1.gh%rm7Yk0']4ab9#K!>*^^GK[mp@N=FdQjY<5U,"%QGHGgs"\`r8?Rq0kNf,&"MNo`P$!4;ig*q&%ROp>5
%phZ@daXPMD5pMS\,@?PaaI;=+jA[!/B5W9>nb)4#!?4F54)pu14s(RW!`(VV6MAq&'.E5?YX6@!%P1;:DaJ!Kn9YGXA:R5c(p8WE
%fO3N[DK30%'9?eI6_Rg+8/!\Ch\,P:JK"sBD9/pL=W6-V;2un(TCIe4Wc.PrK-"X"W<1O.obET"p`bf0";Z=O_>8c#=>*KEDSo8o
%h9C7rILHtsC-44I7F'Cp%!>OTk.@COp"U7ZYifQ;<?qg#a$plr=,;(:Y_7Ch^;QGiJC"8BnC1`ZI6S,GiXi=$m)ZFVm--U*&/c-s
%a`Hu8IQnN*m*d%TS^YEcEIQ+Crb8%.=bqaBNWqt,_86&Z+j5kC%j0^:d?'8O=Tjkt<LK0W?:n&?.OP#S:R6g$DcKQ>G73c;]#5IV
%h!mQQF>)N9^t6\I%YJ+ro@-4tfPlD&5shT906V59eH3Y4[ipDJ?Qq.RGfHU(Xq1"J]@a>/^4"lNBkJ4HLbBX=<gZGZSskn/![ino
%*:hQOfT#'^T>5FBm"m9k0;$7+qXB>X=%tl0n[R008Z_@gC_HJ.0&Q9u=JaCn1?&PLpq@"ENi14X:)(MI$3A`P"2>koi?UIGW4/nS
%eKmjp&1Fq!6rH/Oaqe5t(CZ@sj5o7YqCi1Ukj*rKV_<&<1=l26X"Y>#-6OeV,>e_[(baN@QdG<;"S3Wn5^rVrHHQ'Aqe^:"/`6=2
%lRWTVkQQao'%>"tCN4u8TG0=hBA?]Bptf+nH[Qg3=l>6+?jVAfKMV`da#XTt3g`dYis@b,8^mc:]LL+a=V08HFE*9I%#7X\8?>J[
%##[Y7_:^SmVkKa+bnA<G9,:[`oK\G.1dUcm;l>F8IHi)Wp%">];JP/>'8;R79GQt_H.leobXAqE0[h"<qqm`b^gr5EG8cFef4<&i
%nVp\t$</3_&!a2I%&pg<:aV(:mhe>!EBY;P%NhQ=B]K*\+Q*cMk!_LfUJbRjT7"<hLr`=<giL2R%M\VXKmB78d;Q^<`.3-QGK<&=
%R3^QuK9o>b8AU53*hTGc$rGV!^*/_ZN"f1W8=cgCa8QQ(r%YtTJRfU.NV"V`^q^a._F[KZS;.i(aGt\C0/pj+O"#EI)F5)l66oRI
%K#YE80*pS@3j'k;p^F]Rb5!Y`Fl/uc\O.]E!0MJO"n9e7*EI-t2>J_H.h8`XDpPNZSSKZ"gAcI@N?eE^E.%r)+<N9*C53r86ce(?
%rW5;FW6uF7?,4X@3,`GX"lQ3*+S-:pJ.TP7a&BcR*O*c=9u*763!O03"G%A6K"u@=E0r9&quc;1!4?Lr"5JCK!O:Z+OL268b^9Mb
%cQ??B+9o1W;.8T)`'3$8OI9='Zh6m4XB3cp[PE?6KXE&ZO(U(*G#)Q8aS&OL4L4o"(*f7GGUAJf5D@A^:>ZHQ'CQ#_[[gb1#Xr@X
%OoJ,Qbch3<-_duon^>J"N):tAlM8<%l$/3kO&NV:*Rg3mY$'M#5-_)n@r0G1ILkmM\COob=6hVGNm!8=$Y<!lp+JD]j&g>toFp1c
%E=[7OKoQn'L`sKU]e,fSG:bclH]!$rb^;qW,tr*fqjH.ho!uul.[^YWR&A.4I#k2L#>+TPAqX7B'BXr`qGUu05#cN.)!:JcR47_*
%^X&st"oGAVN3@9IB1^3D&_<WfqY749H#P[q$hKAj!%uX'epRVl"m;_aLBVdtnFD#F^E1P?8UG5m?kTHmTo3ph!..e8<tsZ(;4;c*
%Gl9dWmaf*P@8P*e0JjN`N0A;-9.Rg4aOZXH6djitXGsQ=%&Ds[OnFP"'44dQga9kLHr9$/!J_WW]J!OWUG>up7173<L"8+6*-I8`
%:3IYOQpimRga,-7aqCg>WksksCY^B4k:R6#e<e&>p;MK)pWnKXC6]&LX1Lk,)qV\LB*[%<r5[40mQV12],)9M\%B*S=7iE5dIk?#
%mH+!Ap#5J6T\q'l_8o1E6g'O1pqJ.eC&\~>
%AI9_PrivateDataEnd
